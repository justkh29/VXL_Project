
Project_VXL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000042c0  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  080043cc  080043cc  000143cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004490  08004490  000200b0  2**0
                  CONTENTS
  4 .ARM          00000000  08004490  08004490  000200b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004490  08004490  000200b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004490  08004490  00014490  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004494  08004494  00014494  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b0  20000000  08004498  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000194  200000b0  08004548  000200b0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000244  08004548  00020244  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000146d6  00000000  00000000  000200d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002998  00000000  00000000  000347af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000fd0  00000000  00000000  00037148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000eb8  00000000  00000000  00038118  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000194ed  00000000  00000000  00038fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000141fc  00000000  00000000  000524bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008d9c9  00000000  00000000  000666b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f4082  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000044a4  00000000  00000000  000f40d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000b0 	.word	0x200000b0
 8000128:	00000000 	.word	0x00000000
 800012c:	080043b4 	.word	0x080043b4

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000b4 	.word	0x200000b4
 8000148:	080043b4 	.word	0x080043b4

0800014c <isButton1Pressed>:

int TimeOutForKeyPress1 =  150;
int TimeOutForKeyPress2 =  150;
int TimeOutForKeyPress3 =  150;

int isButton1Pressed(){
 800014c:	b480      	push	{r7}
 800014e:	af00      	add	r7, sp, #0
	if(button1_flag == 1){
 8000150:	4b05      	ldr	r3, [pc, #20]	; (8000168 <isButton1Pressed+0x1c>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	2b01      	cmp	r3, #1
 8000156:	d101      	bne.n	800015c <isButton1Pressed+0x10>
		return 1;
 8000158:	2301      	movs	r3, #1
 800015a:	e000      	b.n	800015e <isButton1Pressed+0x12>
	}
	return 0;
 800015c:	2300      	movs	r3, #0
}
 800015e:	4618      	mov	r0, r3
 8000160:	46bd      	mov	sp, r7
 8000162:	bc80      	pop	{r7}
 8000164:	4770      	bx	lr
 8000166:	bf00      	nop
 8000168:	200000e4 	.word	0x200000e4

0800016c <isButton2Pressed>:

int isButton2Pressed(){
 800016c:	b480      	push	{r7}
 800016e:	af00      	add	r7, sp, #0
	if(button2_flag == 1)
 8000170:	4b05      	ldr	r3, [pc, #20]	; (8000188 <isButton2Pressed+0x1c>)
 8000172:	681b      	ldr	r3, [r3, #0]
 8000174:	2b01      	cmp	r3, #1
 8000176:	d101      	bne.n	800017c <isButton2Pressed+0x10>
	{
		return 1;
 8000178:	2301      	movs	r3, #1
 800017a:	e000      	b.n	800017e <isButton2Pressed+0x12>
	}
	return 0;
 800017c:	2300      	movs	r3, #0
}
 800017e:	4618      	mov	r0, r3
 8000180:	46bd      	mov	sp, r7
 8000182:	bc80      	pop	{r7}
 8000184:	4770      	bx	lr
 8000186:	bf00      	nop
 8000188:	200000e8 	.word	0x200000e8

0800018c <isButton3Pressed>:

int isButton3Pressed(){
 800018c:	b480      	push	{r7}
 800018e:	af00      	add	r7, sp, #0
	if(button3_flag == 1)
 8000190:	4b05      	ldr	r3, [pc, #20]	; (80001a8 <isButton3Pressed+0x1c>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	2b01      	cmp	r3, #1
 8000196:	d101      	bne.n	800019c <isButton3Pressed+0x10>
	{
		return 1;
 8000198:	2301      	movs	r3, #1
 800019a:	e000      	b.n	800019e <isButton3Pressed+0x12>
	}
	return 0;
 800019c:	2300      	movs	r3, #0
}
 800019e:	4618      	mov	r0, r3
 80001a0:	46bd      	mov	sp, r7
 80001a2:	bc80      	pop	{r7}
 80001a4:	4770      	bx	lr
 80001a6:	bf00      	nop
 80001a8:	200000ec 	.word	0x200000ec

080001ac <isButton2LongPressed>:
		return 1;
	}
	return 0;
}

int isButton2LongPressed(){
 80001ac:	b480      	push	{r7}
 80001ae:	af00      	add	r7, sp, #0
	if(button2_long_pressed == 1)
 80001b0:	4b05      	ldr	r3, [pc, #20]	; (80001c8 <isButton2LongPressed+0x1c>)
 80001b2:	681b      	ldr	r3, [r3, #0]
 80001b4:	2b01      	cmp	r3, #1
 80001b6:	d101      	bne.n	80001bc <isButton2LongPressed+0x10>
	{
		return 1;
 80001b8:	2301      	movs	r3, #1
 80001ba:	e000      	b.n	80001be <isButton2LongPressed+0x12>
	}
	return 0;
 80001bc:	2300      	movs	r3, #0
}
 80001be:	4618      	mov	r0, r3
 80001c0:	46bd      	mov	sp, r7
 80001c2:	bc80      	pop	{r7}
 80001c4:	4770      	bx	lr
 80001c6:	bf00      	nop
 80001c8:	200000dc 	.word	0x200000dc

080001cc <isButton3LongPressed>:

int isButton3LongPressed(){
 80001cc:	b480      	push	{r7}
 80001ce:	af00      	add	r7, sp, #0
	if(button3_long_pressed == 1)
 80001d0:	4b05      	ldr	r3, [pc, #20]	; (80001e8 <isButton3LongPressed+0x1c>)
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	2b01      	cmp	r3, #1
 80001d6:	d101      	bne.n	80001dc <isButton3LongPressed+0x10>
	{
		return 1;
 80001d8:	2301      	movs	r3, #1
 80001da:	e000      	b.n	80001de <isButton3LongPressed+0x12>
	}
	return 0;
 80001dc:	2300      	movs	r3, #0
}
 80001de:	4618      	mov	r0, r3
 80001e0:	46bd      	mov	sp, r7
 80001e2:	bc80      	pop	{r7}
 80001e4:	4770      	bx	lr
 80001e6:	bf00      	nop
 80001e8:	200000e0 	.word	0x200000e0

080001ec <subKeyProcess>:

void subKeyProcess(int button)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
	switch (button)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	2b03      	cmp	r3, #3
 80001f8:	d011      	beq.n	800021e <subKeyProcess+0x32>
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	2b03      	cmp	r3, #3
 80001fe:	dc12      	bgt.n	8000226 <subKeyProcess+0x3a>
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	2b01      	cmp	r3, #1
 8000204:	d003      	beq.n	800020e <subKeyProcess+0x22>
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	2b02      	cmp	r3, #2
 800020a:	d004      	beq.n	8000216 <subKeyProcess+0x2a>
			break;
		case 3:
			button3_flag = 1;
			break;
	}
}
 800020c:	e00b      	b.n	8000226 <subKeyProcess+0x3a>
			button1_flag = 1;
 800020e:	4b08      	ldr	r3, [pc, #32]	; (8000230 <subKeyProcess+0x44>)
 8000210:	2201      	movs	r2, #1
 8000212:	601a      	str	r2, [r3, #0]
			break;
 8000214:	e007      	b.n	8000226 <subKeyProcess+0x3a>
			button2_flag = 1;
 8000216:	4b07      	ldr	r3, [pc, #28]	; (8000234 <subKeyProcess+0x48>)
 8000218:	2201      	movs	r2, #1
 800021a:	601a      	str	r2, [r3, #0]
			break;
 800021c:	e003      	b.n	8000226 <subKeyProcess+0x3a>
			button3_flag = 1;
 800021e:	4b06      	ldr	r3, [pc, #24]	; (8000238 <subKeyProcess+0x4c>)
 8000220:	2201      	movs	r2, #1
 8000222:	601a      	str	r2, [r3, #0]
			break;
 8000224:	bf00      	nop
}
 8000226:	bf00      	nop
 8000228:	370c      	adds	r7, #12
 800022a:	46bd      	mov	sp, r7
 800022c:	bc80      	pop	{r7}
 800022e:	4770      	bx	lr
 8000230:	200000e4 	.word	0x200000e4
 8000234:	200000e8 	.word	0x200000e8
 8000238:	200000ec 	.word	0x200000ec

0800023c <subLongKeyProcess>:

void subLongKeyProcess(int button) {
 800023c:	b480      	push	{r7}
 800023e:	b083      	sub	sp, #12
 8000240:	af00      	add	r7, sp, #0
 8000242:	6078      	str	r0, [r7, #4]
    // Handle button long press here
    switch (button)
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	2b03      	cmp	r3, #3
 8000248:	d011      	beq.n	800026e <subLongKeyProcess+0x32>
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	2b03      	cmp	r3, #3
 800024e:	dc12      	bgt.n	8000276 <subLongKeyProcess+0x3a>
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	2b01      	cmp	r3, #1
 8000254:	d003      	beq.n	800025e <subLongKeyProcess+0x22>
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	2b02      	cmp	r3, #2
 800025a:	d004      	beq.n	8000266 <subLongKeyProcess+0x2a>
        case 3:
        	button3_long_pressed = 1;
            // Handle long press for button 3 if needed
            break;
    }
}
 800025c:	e00b      	b.n	8000276 <subLongKeyProcess+0x3a>
            button1_long_pressed = 1;
 800025e:	4b08      	ldr	r3, [pc, #32]	; (8000280 <subLongKeyProcess+0x44>)
 8000260:	2201      	movs	r2, #1
 8000262:	601a      	str	r2, [r3, #0]
            break;
 8000264:	e007      	b.n	8000276 <subLongKeyProcess+0x3a>
        	button2_long_pressed = 1;
 8000266:	4b07      	ldr	r3, [pc, #28]	; (8000284 <subLongKeyProcess+0x48>)
 8000268:	2201      	movs	r2, #1
 800026a:	601a      	str	r2, [r3, #0]
            break;
 800026c:	e003      	b.n	8000276 <subLongKeyProcess+0x3a>
        	button3_long_pressed = 1;
 800026e:	4b06      	ldr	r3, [pc, #24]	; (8000288 <subLongKeyProcess+0x4c>)
 8000270:	2201      	movs	r2, #1
 8000272:	601a      	str	r2, [r3, #0]
            break;
 8000274:	bf00      	nop
}
 8000276:	bf00      	nop
 8000278:	370c      	adds	r7, #12
 800027a:	46bd      	mov	sp, r7
 800027c:	bc80      	pop	{r7}
 800027e:	4770      	bx	lr
 8000280:	200000d8 	.word	0x200000d8
 8000284:	200000dc 	.word	0x200000dc
 8000288:	200000e0 	.word	0x200000e0

0800028c <getKeyInput>:

void getKeyInput()
{
 800028c:	b580      	push	{r7, lr}
 800028e:	b084      	sub	sp, #16
 8000290:	af00      	add	r7, sp, #0

	KeyReg2_1 = KeyReg1_1;
 8000292:	4b7f      	ldr	r3, [pc, #508]	; (8000490 <getKeyInput+0x204>)
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	4a7f      	ldr	r2, [pc, #508]	; (8000494 <getKeyInput+0x208>)
 8000298:	6013      	str	r3, [r2, #0]
	KeyReg1_1 = KeyReg0_1;
 800029a:	4b7f      	ldr	r3, [pc, #508]	; (8000498 <getKeyInput+0x20c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a7c      	ldr	r2, [pc, #496]	; (8000490 <getKeyInput+0x204>)
 80002a0:	6013      	str	r3, [r2, #0]
	KeyReg0_1 = HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin);
 80002a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80002a6:	487d      	ldr	r0, [pc, #500]	; (800049c <getKeyInput+0x210>)
 80002a8:	f001 fe4c 	bl	8001f44 <HAL_GPIO_ReadPin>
 80002ac:	4603      	mov	r3, r0
 80002ae:	461a      	mov	r2, r3
 80002b0:	4b79      	ldr	r3, [pc, #484]	; (8000498 <getKeyInput+0x20c>)
 80002b2:	601a      	str	r2, [r3, #0]

	int keyState = (KeyReg0_1 == KeyReg1_1) && (KeyReg0_1 == KeyReg2_1);
 80002b4:	4b78      	ldr	r3, [pc, #480]	; (8000498 <getKeyInput+0x20c>)
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	4b75      	ldr	r3, [pc, #468]	; (8000490 <getKeyInput+0x204>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	429a      	cmp	r2, r3
 80002be:	d107      	bne.n	80002d0 <getKeyInput+0x44>
 80002c0:	4b75      	ldr	r3, [pc, #468]	; (8000498 <getKeyInput+0x20c>)
 80002c2:	681a      	ldr	r2, [r3, #0]
 80002c4:	4b73      	ldr	r3, [pc, #460]	; (8000494 <getKeyInput+0x208>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	429a      	cmp	r2, r3
 80002ca:	d101      	bne.n	80002d0 <getKeyInput+0x44>
 80002cc:	2301      	movs	r3, #1
 80002ce:	e000      	b.n	80002d2 <getKeyInput+0x46>
 80002d0:	2300      	movs	r3, #0
 80002d2:	60fb      	str	r3, [r7, #12]

    switch (keyState)
 80002d4:	68fb      	ldr	r3, [r7, #12]
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d017      	beq.n	800030a <getKeyInput+0x7e>
 80002da:	68fb      	ldr	r3, [r7, #12]
 80002dc:	2b01      	cmp	r3, #1
 80002de:	d12c      	bne.n	800033a <getKeyInput+0xae>
    {
        case 1: // Key is stable
            if (KeyReg2_1 == PRESSED_STATE)
 80002e0:	4b6c      	ldr	r3, [pc, #432]	; (8000494 <getKeyInput+0x208>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	2b00      	cmp	r3, #0
 80002e6:	d125      	bne.n	8000334 <getKeyInput+0xa8>
            {
                if (TimeOutForKeyPress1 == 0)
 80002e8:	4b6d      	ldr	r3, [pc, #436]	; (80004a0 <getKeyInput+0x214>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d106      	bne.n	80002fe <getKeyInput+0x72>
                {
                    subLongKeyProcess(1);
 80002f0:	2001      	movs	r0, #1
 80002f2:	f7ff ffa3 	bl	800023c <subLongKeyProcess>
                    TimeOutForKeyPress1 = 150;
 80002f6:	4b6a      	ldr	r3, [pc, #424]	; (80004a0 <getKeyInput+0x214>)
 80002f8:	2296      	movs	r2, #150	; 0x96
 80002fa:	601a      	str	r2, [r3, #0]
                else
                {
                    TimeOutForKeyPress1--;
                }
            }
            break;
 80002fc:	e01a      	b.n	8000334 <getKeyInput+0xa8>
                    TimeOutForKeyPress1--;
 80002fe:	4b68      	ldr	r3, [pc, #416]	; (80004a0 <getKeyInput+0x214>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	3b01      	subs	r3, #1
 8000304:	4a66      	ldr	r2, [pc, #408]	; (80004a0 <getKeyInput+0x214>)
 8000306:	6013      	str	r3, [r2, #0]
            break;
 8000308:	e014      	b.n	8000334 <getKeyInput+0xa8>
        case 0: // Key state is changing
            if (KeyReg0_1 != KeyReg1_1)
 800030a:	4b63      	ldr	r3, [pc, #396]	; (8000498 <getKeyInput+0x20c>)
 800030c:	681a      	ldr	r2, [r3, #0]
 800030e:	4b60      	ldr	r3, [pc, #384]	; (8000490 <getKeyInput+0x204>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	429a      	cmp	r2, r3
 8000314:	d010      	beq.n	8000338 <getKeyInput+0xac>
            {
                KeyReg1_1 = KeyReg0_1;
 8000316:	4b60      	ldr	r3, [pc, #384]	; (8000498 <getKeyInput+0x20c>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	4a5d      	ldr	r2, [pc, #372]	; (8000490 <getKeyInput+0x204>)
 800031c:	6013      	str	r3, [r2, #0]
                if (KeyReg1_1 == PRESSED_STATE)
 800031e:	4b5c      	ldr	r3, [pc, #368]	; (8000490 <getKeyInput+0x204>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	2b00      	cmp	r3, #0
 8000324:	d108      	bne.n	8000338 <getKeyInput+0xac>
                {
                    TimeOutForKeyPress1 = 150;
 8000326:	4b5e      	ldr	r3, [pc, #376]	; (80004a0 <getKeyInput+0x214>)
 8000328:	2296      	movs	r2, #150	; 0x96
 800032a:	601a      	str	r2, [r3, #0]
                    subKeyProcess(1);
 800032c:	2001      	movs	r0, #1
 800032e:	f7ff ff5d 	bl	80001ec <subKeyProcess>
                }
            }
            break;
 8000332:	e001      	b.n	8000338 <getKeyInput+0xac>
            break;
 8000334:	bf00      	nop
 8000336:	e000      	b.n	800033a <getKeyInput+0xae>
            break;
 8000338:	bf00      	nop
    }

	KeyReg2_2 = KeyReg1_2;
 800033a:	4b5a      	ldr	r3, [pc, #360]	; (80004a4 <getKeyInput+0x218>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	4a5a      	ldr	r2, [pc, #360]	; (80004a8 <getKeyInput+0x21c>)
 8000340:	6013      	str	r3, [r2, #0]
	KeyReg1_2 = KeyReg0_2;
 8000342:	4b5a      	ldr	r3, [pc, #360]	; (80004ac <getKeyInput+0x220>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4a57      	ldr	r2, [pc, #348]	; (80004a4 <getKeyInput+0x218>)
 8000348:	6013      	str	r3, [r2, #0]
	KeyReg0_2 = HAL_GPIO_ReadPin(A0_GPIO_Port, A0_Pin);
 800034a:	2101      	movs	r1, #1
 800034c:	4858      	ldr	r0, [pc, #352]	; (80004b0 <getKeyInput+0x224>)
 800034e:	f001 fdf9 	bl	8001f44 <HAL_GPIO_ReadPin>
 8000352:	4603      	mov	r3, r0
 8000354:	461a      	mov	r2, r3
 8000356:	4b55      	ldr	r3, [pc, #340]	; (80004ac <getKeyInput+0x220>)
 8000358:	601a      	str	r2, [r3, #0]

	int keyState2 = (KeyReg0_2 == KeyReg1_2) && (KeyReg0_2 == KeyReg2_2);
 800035a:	4b54      	ldr	r3, [pc, #336]	; (80004ac <getKeyInput+0x220>)
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	4b51      	ldr	r3, [pc, #324]	; (80004a4 <getKeyInput+0x218>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	429a      	cmp	r2, r3
 8000364:	d107      	bne.n	8000376 <getKeyInput+0xea>
 8000366:	4b51      	ldr	r3, [pc, #324]	; (80004ac <getKeyInput+0x220>)
 8000368:	681a      	ldr	r2, [r3, #0]
 800036a:	4b4f      	ldr	r3, [pc, #316]	; (80004a8 <getKeyInput+0x21c>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	429a      	cmp	r2, r3
 8000370:	d101      	bne.n	8000376 <getKeyInput+0xea>
 8000372:	2301      	movs	r3, #1
 8000374:	e000      	b.n	8000378 <getKeyInput+0xec>
 8000376:	2300      	movs	r3, #0
 8000378:	60bb      	str	r3, [r7, #8]

	switch (keyState2)
 800037a:	68bb      	ldr	r3, [r7, #8]
 800037c:	2b00      	cmp	r3, #0
 800037e:	d017      	beq.n	80003b0 <getKeyInput+0x124>
 8000380:	68bb      	ldr	r3, [r7, #8]
 8000382:	2b01      	cmp	r3, #1
 8000384:	d12c      	bne.n	80003e0 <getKeyInput+0x154>
	{
		case 1: // Key is stable
			if (KeyReg2_2 == PRESSED_STATE)
 8000386:	4b48      	ldr	r3, [pc, #288]	; (80004a8 <getKeyInput+0x21c>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	2b00      	cmp	r3, #0
 800038c:	d125      	bne.n	80003da <getKeyInput+0x14e>
			{
				if (TimeOutForKeyPress2 == 0)
 800038e:	4b49      	ldr	r3, [pc, #292]	; (80004b4 <getKeyInput+0x228>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	2b00      	cmp	r3, #0
 8000394:	d106      	bne.n	80003a4 <getKeyInput+0x118>
				{
					subLongKeyProcess(2);
 8000396:	2002      	movs	r0, #2
 8000398:	f7ff ff50 	bl	800023c <subLongKeyProcess>
					TimeOutForKeyPress2 = 150;
 800039c:	4b45      	ldr	r3, [pc, #276]	; (80004b4 <getKeyInput+0x228>)
 800039e:	2296      	movs	r2, #150	; 0x96
 80003a0:	601a      	str	r2, [r3, #0]
				else
				{
					TimeOutForKeyPress2--;
				}
			}
			break;
 80003a2:	e01a      	b.n	80003da <getKeyInput+0x14e>
					TimeOutForKeyPress2--;
 80003a4:	4b43      	ldr	r3, [pc, #268]	; (80004b4 <getKeyInput+0x228>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	3b01      	subs	r3, #1
 80003aa:	4a42      	ldr	r2, [pc, #264]	; (80004b4 <getKeyInput+0x228>)
 80003ac:	6013      	str	r3, [r2, #0]
			break;
 80003ae:	e014      	b.n	80003da <getKeyInput+0x14e>
		case 0: // Key state is changing
			if (KeyReg0_2 != KeyReg1_2)
 80003b0:	4b3e      	ldr	r3, [pc, #248]	; (80004ac <getKeyInput+0x220>)
 80003b2:	681a      	ldr	r2, [r3, #0]
 80003b4:	4b3b      	ldr	r3, [pc, #236]	; (80004a4 <getKeyInput+0x218>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	429a      	cmp	r2, r3
 80003ba:	d010      	beq.n	80003de <getKeyInput+0x152>
			{
				KeyReg1_2 = KeyReg0_2;
 80003bc:	4b3b      	ldr	r3, [pc, #236]	; (80004ac <getKeyInput+0x220>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a38      	ldr	r2, [pc, #224]	; (80004a4 <getKeyInput+0x218>)
 80003c2:	6013      	str	r3, [r2, #0]
				if (KeyReg1_2 == PRESSED_STATE)
 80003c4:	4b37      	ldr	r3, [pc, #220]	; (80004a4 <getKeyInput+0x218>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d108      	bne.n	80003de <getKeyInput+0x152>
				{
					TimeOutForKeyPress2 = 150;
 80003cc:	4b39      	ldr	r3, [pc, #228]	; (80004b4 <getKeyInput+0x228>)
 80003ce:	2296      	movs	r2, #150	; 0x96
 80003d0:	601a      	str	r2, [r3, #0]
					subKeyProcess(2);
 80003d2:	2002      	movs	r0, #2
 80003d4:	f7ff ff0a 	bl	80001ec <subKeyProcess>
				}
			}
			break;
 80003d8:	e001      	b.n	80003de <getKeyInput+0x152>
			break;
 80003da:	bf00      	nop
 80003dc:	e000      	b.n	80003e0 <getKeyInput+0x154>
			break;
 80003de:	bf00      	nop
	}

	KeyReg2_3 = KeyReg1_3;
 80003e0:	4b35      	ldr	r3, [pc, #212]	; (80004b8 <getKeyInput+0x22c>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4a35      	ldr	r2, [pc, #212]	; (80004bc <getKeyInput+0x230>)
 80003e6:	6013      	str	r3, [r2, #0]
	KeyReg1_3 = KeyReg0_3;
 80003e8:	4b35      	ldr	r3, [pc, #212]	; (80004c0 <getKeyInput+0x234>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	4a32      	ldr	r2, [pc, #200]	; (80004b8 <getKeyInput+0x22c>)
 80003ee:	6013      	str	r3, [r2, #0]
	KeyReg0_3 = HAL_GPIO_ReadPin(A1_GPIO_Port, A1_Pin);
 80003f0:	2102      	movs	r1, #2
 80003f2:	482f      	ldr	r0, [pc, #188]	; (80004b0 <getKeyInput+0x224>)
 80003f4:	f001 fda6 	bl	8001f44 <HAL_GPIO_ReadPin>
 80003f8:	4603      	mov	r3, r0
 80003fa:	461a      	mov	r2, r3
 80003fc:	4b30      	ldr	r3, [pc, #192]	; (80004c0 <getKeyInput+0x234>)
 80003fe:	601a      	str	r2, [r3, #0]

	int keyState3 = (KeyReg0_3 == KeyReg1_3) && (KeyReg0_3 == KeyReg2_3);
 8000400:	4b2f      	ldr	r3, [pc, #188]	; (80004c0 <getKeyInput+0x234>)
 8000402:	681a      	ldr	r2, [r3, #0]
 8000404:	4b2c      	ldr	r3, [pc, #176]	; (80004b8 <getKeyInput+0x22c>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	429a      	cmp	r2, r3
 800040a:	d107      	bne.n	800041c <getKeyInput+0x190>
 800040c:	4b2c      	ldr	r3, [pc, #176]	; (80004c0 <getKeyInput+0x234>)
 800040e:	681a      	ldr	r2, [r3, #0]
 8000410:	4b2a      	ldr	r3, [pc, #168]	; (80004bc <getKeyInput+0x230>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	429a      	cmp	r2, r3
 8000416:	d101      	bne.n	800041c <getKeyInput+0x190>
 8000418:	2301      	movs	r3, #1
 800041a:	e000      	b.n	800041e <getKeyInput+0x192>
 800041c:	2300      	movs	r3, #0
 800041e:	607b      	str	r3, [r7, #4]

	switch (keyState3)
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	2b00      	cmp	r3, #0
 8000424:	d017      	beq.n	8000456 <getKeyInput+0x1ca>
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	2b01      	cmp	r3, #1
 800042a:	d12c      	bne.n	8000486 <getKeyInput+0x1fa>
	{
		case 1: // Key is stable
			if (KeyReg2_3 == PRESSED_STATE)
 800042c:	4b23      	ldr	r3, [pc, #140]	; (80004bc <getKeyInput+0x230>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	2b00      	cmp	r3, #0
 8000432:	d125      	bne.n	8000480 <getKeyInput+0x1f4>
			{
				if (TimeOutForKeyPress3 == 0)
 8000434:	4b23      	ldr	r3, [pc, #140]	; (80004c4 <getKeyInput+0x238>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	2b00      	cmp	r3, #0
 800043a:	d106      	bne.n	800044a <getKeyInput+0x1be>
				{
					subLongKeyProcess(3);
 800043c:	2003      	movs	r0, #3
 800043e:	f7ff fefd 	bl	800023c <subLongKeyProcess>
					TimeOutForKeyPress3 = 150;
 8000442:	4b20      	ldr	r3, [pc, #128]	; (80004c4 <getKeyInput+0x238>)
 8000444:	2296      	movs	r2, #150	; 0x96
 8000446:	601a      	str	r2, [r3, #0]
				else
				{
					TimeOutForKeyPress3--;
				}
			}
			break;
 8000448:	e01a      	b.n	8000480 <getKeyInput+0x1f4>
					TimeOutForKeyPress3--;
 800044a:	4b1e      	ldr	r3, [pc, #120]	; (80004c4 <getKeyInput+0x238>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	3b01      	subs	r3, #1
 8000450:	4a1c      	ldr	r2, [pc, #112]	; (80004c4 <getKeyInput+0x238>)
 8000452:	6013      	str	r3, [r2, #0]
			break;
 8000454:	e014      	b.n	8000480 <getKeyInput+0x1f4>
		case 0: // Key state is changing
			if (KeyReg0_3 != KeyReg1_3)
 8000456:	4b1a      	ldr	r3, [pc, #104]	; (80004c0 <getKeyInput+0x234>)
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	4b17      	ldr	r3, [pc, #92]	; (80004b8 <getKeyInput+0x22c>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	429a      	cmp	r2, r3
 8000460:	d010      	beq.n	8000484 <getKeyInput+0x1f8>
			{
				KeyReg1_3 = KeyReg0_3;
 8000462:	4b17      	ldr	r3, [pc, #92]	; (80004c0 <getKeyInput+0x234>)
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4a14      	ldr	r2, [pc, #80]	; (80004b8 <getKeyInput+0x22c>)
 8000468:	6013      	str	r3, [r2, #0]
				if (KeyReg1_3 == PRESSED_STATE)
 800046a:	4b13      	ldr	r3, [pc, #76]	; (80004b8 <getKeyInput+0x22c>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	2b00      	cmp	r3, #0
 8000470:	d108      	bne.n	8000484 <getKeyInput+0x1f8>
				{
					TimeOutForKeyPress3 = 150;
 8000472:	4b14      	ldr	r3, [pc, #80]	; (80004c4 <getKeyInput+0x238>)
 8000474:	2296      	movs	r2, #150	; 0x96
 8000476:	601a      	str	r2, [r3, #0]
					subKeyProcess(3);
 8000478:	2003      	movs	r0, #3
 800047a:	f7ff feb7 	bl	80001ec <subKeyProcess>
				}
			}
			break;
 800047e:	e001      	b.n	8000484 <getKeyInput+0x1f8>
			break;
 8000480:	bf00      	nop
 8000482:	e000      	b.n	8000486 <getKeyInput+0x1fa>
			break;
 8000484:	bf00      	nop
	}
}
 8000486:	bf00      	nop
 8000488:	3710      	adds	r7, #16
 800048a:	46bd      	mov	sp, r7
 800048c:	bd80      	pop	{r7, pc}
 800048e:	bf00      	nop
 8000490:	20000004 	.word	0x20000004
 8000494:	20000008 	.word	0x20000008
 8000498:	20000000 	.word	0x20000000
 800049c:	40011000 	.word	0x40011000
 80004a0:	20000024 	.word	0x20000024
 80004a4:	20000010 	.word	0x20000010
 80004a8:	20000014 	.word	0x20000014
 80004ac:	2000000c 	.word	0x2000000c
 80004b0:	40010800 	.word	0x40010800
 80004b4:	20000028 	.word	0x20000028
 80004b8:	2000001c 	.word	0x2000001c
 80004bc:	20000020 	.word	0x20000020
 80004c0:	20000018 	.word	0x20000018
 80004c4:	2000002c 	.word	0x2000002c

080004c8 <fsm_auto_run>:
 */

#include "fsm_auto.h"

void fsm_auto_run()
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	af00      	add	r7, sp, #0
	switch(status)
 80004cc:	4bad      	ldr	r3, [pc, #692]	; (8000784 <fsm_auto_run+0x2bc>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	2b04      	cmp	r3, #4
 80004d2:	f200 8154 	bhi.w	800077e <fsm_auto_run+0x2b6>
 80004d6:	a201      	add	r2, pc, #4	; (adr r2, 80004dc <fsm_auto_run+0x14>)
 80004d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004dc:	080004f1 	.word	0x080004f1
 80004e0:	0800050f 	.word	0x0800050f
 80004e4:	080005a7 	.word	0x080005a7
 80004e8:	08000643 	.word	0x08000643
 80004ec:	080006dd 	.word	0x080006dd
	{
		case INIT:
			ledReset();
 80004f0:	f000 fd7a 	bl	8000fe8 <ledReset>
			status = 1;
 80004f4:	4ba3      	ldr	r3, [pc, #652]	; (8000784 <fsm_auto_run+0x2bc>)
 80004f6:	2201      	movs	r2, #1
 80004f8:	601a      	str	r2, [r3, #0]
			setTimer(0, 1000);
 80004fa:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80004fe:	2000      	movs	r0, #0
 8000500:	f001 f838 	bl	8001574 <setTimer>
			count = duration_G;
 8000504:	4ba0      	ldr	r3, [pc, #640]	; (8000788 <fsm_auto_run+0x2c0>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	4aa0      	ldr	r2, [pc, #640]	; (800078c <fsm_auto_run+0x2c4>)
 800050a:	6013      	str	r3, [r2, #0]
			break;
 800050c:	e137      	b.n	800077e <fsm_auto_run+0x2b6>
		case GREEN_RED:
			ledGreen_Red();
 800050e:	f000 fe0d 	bl	800112c <ledGreen_Red>
			if (timer_flag[0] == 1)
 8000512:	4b9f      	ldr	r3, [pc, #636]	; (8000790 <fsm_auto_run+0x2c8>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	2b01      	cmp	r3, #1
 8000518:	d13b      	bne.n	8000592 <fsm_auto_run+0xca>
			{
				lcd_display(1, 0, count);
 800051a:	4b9c      	ldr	r3, [pc, #624]	; (800078c <fsm_auto_run+0x2c4>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	461a      	mov	r2, r3
 8000520:	2100      	movs	r1, #0
 8000522:	2001      	movs	r0, #1
 8000524:	f000 fd44 	bl	8000fb0 <lcd_display>
				lcd_display(2, 0, count + duration_Y);
 8000528:	4b98      	ldr	r3, [pc, #608]	; (800078c <fsm_auto_run+0x2c4>)
 800052a:	681a      	ldr	r2, [r3, #0]
 800052c:	4b99      	ldr	r3, [pc, #612]	; (8000794 <fsm_auto_run+0x2cc>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4413      	add	r3, r2
 8000532:	461a      	mov	r2, r3
 8000534:	2100      	movs	r1, #0
 8000536:	2002      	movs	r0, #2
 8000538:	f000 fd3a 	bl	8000fb0 <lcd_display>
				if (count % 10 == 0) lcd_clear_display();
 800053c:	4b93      	ldr	r3, [pc, #588]	; (800078c <fsm_auto_run+0x2c4>)
 800053e:	6819      	ldr	r1, [r3, #0]
 8000540:	4b95      	ldr	r3, [pc, #596]	; (8000798 <fsm_auto_run+0x2d0>)
 8000542:	fb83 2301 	smull	r2, r3, r3, r1
 8000546:	109a      	asrs	r2, r3, #2
 8000548:	17cb      	asrs	r3, r1, #31
 800054a:	1ad2      	subs	r2, r2, r3
 800054c:	4613      	mov	r3, r2
 800054e:	009b      	lsls	r3, r3, #2
 8000550:	4413      	add	r3, r2
 8000552:	005b      	lsls	r3, r3, #1
 8000554:	1aca      	subs	r2, r1, r3
 8000556:	2a00      	cmp	r2, #0
 8000558:	d101      	bne.n	800055e <fsm_auto_run+0x96>
 800055a:	f000 fd00 	bl	8000f5e <lcd_clear_display>
				count--;
 800055e:	4b8b      	ldr	r3, [pc, #556]	; (800078c <fsm_auto_run+0x2c4>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	3b01      	subs	r3, #1
 8000564:	4a89      	ldr	r2, [pc, #548]	; (800078c <fsm_auto_run+0x2c4>)
 8000566:	6013      	str	r3, [r2, #0]
				if (count <= 0)
 8000568:	4b88      	ldr	r3, [pc, #544]	; (800078c <fsm_auto_run+0x2c4>)
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	2b00      	cmp	r3, #0
 800056e:	dc08      	bgt.n	8000582 <fsm_auto_run+0xba>
				{
					ledReset();
 8000570:	f000 fd3a 	bl	8000fe8 <ledReset>
					status = 2;
 8000574:	4b83      	ldr	r3, [pc, #524]	; (8000784 <fsm_auto_run+0x2bc>)
 8000576:	2202      	movs	r2, #2
 8000578:	601a      	str	r2, [r3, #0]
					count = duration_Y;
 800057a:	4b86      	ldr	r3, [pc, #536]	; (8000794 <fsm_auto_run+0x2cc>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	4a83      	ldr	r2, [pc, #524]	; (800078c <fsm_auto_run+0x2c4>)
 8000580:	6013      	str	r3, [r2, #0]
				}
				timer_flag[0] = 0;
 8000582:	4b83      	ldr	r3, [pc, #524]	; (8000790 <fsm_auto_run+0x2c8>)
 8000584:	2200      	movs	r2, #0
 8000586:	601a      	str	r2, [r3, #0]
				setTimer(0, 1000);
 8000588:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800058c:	2000      	movs	r0, #0
 800058e:	f000 fff1 	bl	8001574 <setTimer>
			}
			if (isButton2Pressed() == 1)
 8000592:	f7ff fdeb 	bl	800016c <isButton2Pressed>
 8000596:	4603      	mov	r3, r0
 8000598:	2b01      	cmp	r3, #1
 800059a:	f040 80e9 	bne.w	8000770 <fsm_auto_run+0x2a8>
			{
				button2_flag = 0;
 800059e:	4b7f      	ldr	r3, [pc, #508]	; (800079c <fsm_auto_run+0x2d4>)
 80005a0:	2200      	movs	r2, #0
 80005a2:	601a      	str	r2, [r3, #0]
			}
			break;
 80005a4:	e0e4      	b.n	8000770 <fsm_auto_run+0x2a8>
		case YELLOW_RED:
			ledYellow_Red();
 80005a6:	f000 fdf7 	bl	8001198 <ledYellow_Red>
			if (timer_flag[0] == 1)
 80005aa:	4b79      	ldr	r3, [pc, #484]	; (8000790 <fsm_auto_run+0x2c8>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	2b01      	cmp	r3, #1
 80005b0:	d13d      	bne.n	800062e <fsm_auto_run+0x166>
			{
				lcd_display(1, 0, count);
 80005b2:	4b76      	ldr	r3, [pc, #472]	; (800078c <fsm_auto_run+0x2c4>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	461a      	mov	r2, r3
 80005b8:	2100      	movs	r1, #0
 80005ba:	2001      	movs	r0, #1
 80005bc:	f000 fcf8 	bl	8000fb0 <lcd_display>
				lcd_display(2, 0, count);
 80005c0:	4b72      	ldr	r3, [pc, #456]	; (800078c <fsm_auto_run+0x2c4>)
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	461a      	mov	r2, r3
 80005c6:	2100      	movs	r1, #0
 80005c8:	2002      	movs	r0, #2
 80005ca:	f000 fcf1 	bl	8000fb0 <lcd_display>
				if (count % 10 == 0) lcd_clear_display();
 80005ce:	4b6f      	ldr	r3, [pc, #444]	; (800078c <fsm_auto_run+0x2c4>)
 80005d0:	6819      	ldr	r1, [r3, #0]
 80005d2:	4b71      	ldr	r3, [pc, #452]	; (8000798 <fsm_auto_run+0x2d0>)
 80005d4:	fb83 2301 	smull	r2, r3, r3, r1
 80005d8:	109a      	asrs	r2, r3, #2
 80005da:	17cb      	asrs	r3, r1, #31
 80005dc:	1ad2      	subs	r2, r2, r3
 80005de:	4613      	mov	r3, r2
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	4413      	add	r3, r2
 80005e4:	005b      	lsls	r3, r3, #1
 80005e6:	1aca      	subs	r2, r1, r3
 80005e8:	2a00      	cmp	r2, #0
 80005ea:	d101      	bne.n	80005f0 <fsm_auto_run+0x128>
 80005ec:	f000 fcb7 	bl	8000f5e <lcd_clear_display>
				count--;
 80005f0:	4b66      	ldr	r3, [pc, #408]	; (800078c <fsm_auto_run+0x2c4>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	3b01      	subs	r3, #1
 80005f6:	4a65      	ldr	r2, [pc, #404]	; (800078c <fsm_auto_run+0x2c4>)
 80005f8:	6013      	str	r3, [r2, #0]
				if (count <= 0)
 80005fa:	4b64      	ldr	r3, [pc, #400]	; (800078c <fsm_auto_run+0x2c4>)
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	2b00      	cmp	r3, #0
 8000600:	dc0d      	bgt.n	800061e <fsm_auto_run+0x156>
				{
					ledReset();
 8000602:	f000 fcf1 	bl	8000fe8 <ledReset>
					status = 3;
 8000606:	4b5f      	ldr	r3, [pc, #380]	; (8000784 <fsm_auto_run+0x2bc>)
 8000608:	2203      	movs	r2, #3
 800060a:	601a      	str	r2, [r3, #0]
					count = duration_R - duration_Y;
 800060c:	4b64      	ldr	r3, [pc, #400]	; (80007a0 <fsm_auto_run+0x2d8>)
 800060e:	681a      	ldr	r2, [r3, #0]
 8000610:	4b60      	ldr	r3, [pc, #384]	; (8000794 <fsm_auto_run+0x2cc>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	1ad3      	subs	r3, r2, r3
 8000616:	4a5d      	ldr	r2, [pc, #372]	; (800078c <fsm_auto_run+0x2c4>)
 8000618:	6013      	str	r3, [r2, #0]
					lcd_clear_display();
 800061a:	f000 fca0 	bl	8000f5e <lcd_clear_display>
				}
				timer_flag[0] = 0;
 800061e:	4b5c      	ldr	r3, [pc, #368]	; (8000790 <fsm_auto_run+0x2c8>)
 8000620:	2200      	movs	r2, #0
 8000622:	601a      	str	r2, [r3, #0]
				setTimer(0, 1000);
 8000624:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000628:	2000      	movs	r0, #0
 800062a:	f000 ffa3 	bl	8001574 <setTimer>
			}
			if (isButton2Pressed() == 1)
 800062e:	f7ff fd9d 	bl	800016c <isButton2Pressed>
 8000632:	4603      	mov	r3, r0
 8000634:	2b01      	cmp	r3, #1
 8000636:	f040 809d 	bne.w	8000774 <fsm_auto_run+0x2ac>
			{
				button2_flag = 0;
 800063a:	4b58      	ldr	r3, [pc, #352]	; (800079c <fsm_auto_run+0x2d4>)
 800063c:	2200      	movs	r2, #0
 800063e:	601a      	str	r2, [r3, #0]
			}
			break;
 8000640:	e098      	b.n	8000774 <fsm_auto_run+0x2ac>
		case RED_GREEN:
			ledRed_Green();
 8000642:	f000 fd07 	bl	8001054 <ledRed_Green>
			if (timer_flag[0] == 1)
 8000646:	4b52      	ldr	r3, [pc, #328]	; (8000790 <fsm_auto_run+0x2c8>)
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d13d      	bne.n	80006ca <fsm_auto_run+0x202>
			{
				lcd_display(1, 0, count + duration_Y);
 800064e:	4b4f      	ldr	r3, [pc, #316]	; (800078c <fsm_auto_run+0x2c4>)
 8000650:	681a      	ldr	r2, [r3, #0]
 8000652:	4b50      	ldr	r3, [pc, #320]	; (8000794 <fsm_auto_run+0x2cc>)
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	4413      	add	r3, r2
 8000658:	461a      	mov	r2, r3
 800065a:	2100      	movs	r1, #0
 800065c:	2001      	movs	r0, #1
 800065e:	f000 fca7 	bl	8000fb0 <lcd_display>
				lcd_display(2, 0, count);
 8000662:	4b4a      	ldr	r3, [pc, #296]	; (800078c <fsm_auto_run+0x2c4>)
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	461a      	mov	r2, r3
 8000668:	2100      	movs	r1, #0
 800066a:	2002      	movs	r0, #2
 800066c:	f000 fca0 	bl	8000fb0 <lcd_display>
				if (count % 10 == 0) lcd_clear_display();
 8000670:	4b46      	ldr	r3, [pc, #280]	; (800078c <fsm_auto_run+0x2c4>)
 8000672:	6819      	ldr	r1, [r3, #0]
 8000674:	4b48      	ldr	r3, [pc, #288]	; (8000798 <fsm_auto_run+0x2d0>)
 8000676:	fb83 2301 	smull	r2, r3, r3, r1
 800067a:	109a      	asrs	r2, r3, #2
 800067c:	17cb      	asrs	r3, r1, #31
 800067e:	1ad2      	subs	r2, r2, r3
 8000680:	4613      	mov	r3, r2
 8000682:	009b      	lsls	r3, r3, #2
 8000684:	4413      	add	r3, r2
 8000686:	005b      	lsls	r3, r3, #1
 8000688:	1aca      	subs	r2, r1, r3
 800068a:	2a00      	cmp	r2, #0
 800068c:	d101      	bne.n	8000692 <fsm_auto_run+0x1ca>
 800068e:	f000 fc66 	bl	8000f5e <lcd_clear_display>
				count--;
 8000692:	4b3e      	ldr	r3, [pc, #248]	; (800078c <fsm_auto_run+0x2c4>)
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	3b01      	subs	r3, #1
 8000698:	4a3c      	ldr	r2, [pc, #240]	; (800078c <fsm_auto_run+0x2c4>)
 800069a:	6013      	str	r3, [r2, #0]
				if (count <= 0)
 800069c:	4b3b      	ldr	r3, [pc, #236]	; (800078c <fsm_auto_run+0x2c4>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	dc0a      	bgt.n	80006ba <fsm_auto_run+0x1f2>
				{
					ledReset();
 80006a4:	f000 fca0 	bl	8000fe8 <ledReset>
					status = 4;
 80006a8:	4b36      	ldr	r3, [pc, #216]	; (8000784 <fsm_auto_run+0x2bc>)
 80006aa:	2204      	movs	r2, #4
 80006ac:	601a      	str	r2, [r3, #0]
					count = duration_Y;
 80006ae:	4b39      	ldr	r3, [pc, #228]	; (8000794 <fsm_auto_run+0x2cc>)
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	4a36      	ldr	r2, [pc, #216]	; (800078c <fsm_auto_run+0x2c4>)
 80006b4:	6013      	str	r3, [r2, #0]
					lcd_clear_display();
 80006b6:	f000 fc52 	bl	8000f5e <lcd_clear_display>
				}
				timer_flag[0] = 0;
 80006ba:	4b35      	ldr	r3, [pc, #212]	; (8000790 <fsm_auto_run+0x2c8>)
 80006bc:	2200      	movs	r2, #0
 80006be:	601a      	str	r2, [r3, #0]
				setTimer(0, 1000);
 80006c0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80006c4:	2000      	movs	r0, #0
 80006c6:	f000 ff55 	bl	8001574 <setTimer>
			}
			if (isButton2Pressed() == 1)
 80006ca:	f7ff fd4f 	bl	800016c <isButton2Pressed>
 80006ce:	4603      	mov	r3, r0
 80006d0:	2b01      	cmp	r3, #1
 80006d2:	d151      	bne.n	8000778 <fsm_auto_run+0x2b0>
			{
				button2_flag = 0;
 80006d4:	4b31      	ldr	r3, [pc, #196]	; (800079c <fsm_auto_run+0x2d4>)
 80006d6:	2200      	movs	r2, #0
 80006d8:	601a      	str	r2, [r3, #0]
			}
			break;
 80006da:	e04d      	b.n	8000778 <fsm_auto_run+0x2b0>
		case RED_YELLOW:
			ledRed_Yellow();
 80006dc:	f000 fcf0 	bl	80010c0 <ledRed_Yellow>
			if (timer_flag[0] == 1)
 80006e0:	4b2b      	ldr	r3, [pc, #172]	; (8000790 <fsm_auto_run+0x2c8>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	2b01      	cmp	r3, #1
 80006e6:	d13a      	bne.n	800075e <fsm_auto_run+0x296>
			{
				lcd_display(1, 0, count);
 80006e8:	4b28      	ldr	r3, [pc, #160]	; (800078c <fsm_auto_run+0x2c4>)
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	461a      	mov	r2, r3
 80006ee:	2100      	movs	r1, #0
 80006f0:	2001      	movs	r0, #1
 80006f2:	f000 fc5d 	bl	8000fb0 <lcd_display>
				lcd_display(2, 0, count);
 80006f6:	4b25      	ldr	r3, [pc, #148]	; (800078c <fsm_auto_run+0x2c4>)
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	461a      	mov	r2, r3
 80006fc:	2100      	movs	r1, #0
 80006fe:	2002      	movs	r0, #2
 8000700:	f000 fc56 	bl	8000fb0 <lcd_display>
				if (count % 10 == 0) lcd_clear_display();
 8000704:	4b21      	ldr	r3, [pc, #132]	; (800078c <fsm_auto_run+0x2c4>)
 8000706:	6819      	ldr	r1, [r3, #0]
 8000708:	4b23      	ldr	r3, [pc, #140]	; (8000798 <fsm_auto_run+0x2d0>)
 800070a:	fb83 2301 	smull	r2, r3, r3, r1
 800070e:	109a      	asrs	r2, r3, #2
 8000710:	17cb      	asrs	r3, r1, #31
 8000712:	1ad2      	subs	r2, r2, r3
 8000714:	4613      	mov	r3, r2
 8000716:	009b      	lsls	r3, r3, #2
 8000718:	4413      	add	r3, r2
 800071a:	005b      	lsls	r3, r3, #1
 800071c:	1aca      	subs	r2, r1, r3
 800071e:	2a00      	cmp	r2, #0
 8000720:	d101      	bne.n	8000726 <fsm_auto_run+0x25e>
 8000722:	f000 fc1c 	bl	8000f5e <lcd_clear_display>
				count--;
 8000726:	4b19      	ldr	r3, [pc, #100]	; (800078c <fsm_auto_run+0x2c4>)
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	3b01      	subs	r3, #1
 800072c:	4a17      	ldr	r2, [pc, #92]	; (800078c <fsm_auto_run+0x2c4>)
 800072e:	6013      	str	r3, [r2, #0]
				if (count <= 0)
 8000730:	4b16      	ldr	r3, [pc, #88]	; (800078c <fsm_auto_run+0x2c4>)
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	2b00      	cmp	r3, #0
 8000736:	dc0a      	bgt.n	800074e <fsm_auto_run+0x286>
				{
					ledReset();
 8000738:	f000 fc56 	bl	8000fe8 <ledReset>
					status = 1;
 800073c:	4b11      	ldr	r3, [pc, #68]	; (8000784 <fsm_auto_run+0x2bc>)
 800073e:	2201      	movs	r2, #1
 8000740:	601a      	str	r2, [r3, #0]
					count = duration_G;
 8000742:	4b11      	ldr	r3, [pc, #68]	; (8000788 <fsm_auto_run+0x2c0>)
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	4a11      	ldr	r2, [pc, #68]	; (800078c <fsm_auto_run+0x2c4>)
 8000748:	6013      	str	r3, [r2, #0]
					lcd_clear_display();
 800074a:	f000 fc08 	bl	8000f5e <lcd_clear_display>
				}
				timer_flag[0] = 0;
 800074e:	4b10      	ldr	r3, [pc, #64]	; (8000790 <fsm_auto_run+0x2c8>)
 8000750:	2200      	movs	r2, #0
 8000752:	601a      	str	r2, [r3, #0]
				setTimer(0, 1000);
 8000754:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000758:	2000      	movs	r0, #0
 800075a:	f000 ff0b 	bl	8001574 <setTimer>
			}
			if (isButton2Pressed() == 1)
 800075e:	f7ff fd05 	bl	800016c <isButton2Pressed>
 8000762:	4603      	mov	r3, r0
 8000764:	2b01      	cmp	r3, #1
 8000766:	d109      	bne.n	800077c <fsm_auto_run+0x2b4>
			{
				button2_flag = 0;
 8000768:	4b0c      	ldr	r3, [pc, #48]	; (800079c <fsm_auto_run+0x2d4>)
 800076a:	2200      	movs	r2, #0
 800076c:	601a      	str	r2, [r3, #0]
			}
			break;
 800076e:	e005      	b.n	800077c <fsm_auto_run+0x2b4>
			break;
 8000770:	bf00      	nop
 8000772:	e004      	b.n	800077e <fsm_auto_run+0x2b6>
			break;
 8000774:	bf00      	nop
 8000776:	e002      	b.n	800077e <fsm_auto_run+0x2b6>
			break;
 8000778:	bf00      	nop
 800077a:	e000      	b.n	800077e <fsm_auto_run+0x2b6>
			break;
 800077c:	bf00      	nop
	}
}
 800077e:	bf00      	nop
 8000780:	bd80      	pop	{r7, pc}
 8000782:	bf00      	nop
 8000784:	200000cc 	.word	0x200000cc
 8000788:	20000034 	.word	0x20000034
 800078c:	200000d4 	.word	0x200000d4
 8000790:	20000208 	.word	0x20000208
 8000794:	2000003c 	.word	0x2000003c
 8000798:	66666667 	.word	0x66666667
 800079c:	200000e8 	.word	0x200000e8
 80007a0:	20000038 	.word	0x20000038

080007a4 <fsm_edit>:
 */

#include <fsm_edit.h>

void fsm_edit()
{
 80007a4:	b580      	push	{r7, lr}
 80007a6:	af00      	add	r7, sp, #0
	switch (status)
 80007a8:	4b93      	ldr	r3, [pc, #588]	; (80009f8 <fsm_edit+0x254>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	3b05      	subs	r3, #5
 80007ae:	2b08      	cmp	r3, #8
 80007b0:	f200 828c 	bhi.w	8000ccc <fsm_edit+0x528>
 80007b4:	a201      	add	r2, pc, #4	; (adr r2, 80007bc <fsm_edit+0x18>)
 80007b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007ba:	bf00      	nop
 80007bc:	08000b31 	.word	0x08000b31
 80007c0:	08000b93 	.word	0x08000b93
 80007c4:	08000bf3 	.word	0x08000bf3
 80007c8:	08000c53 	.word	0x08000c53
 80007cc:	08000ccd 	.word	0x08000ccd
 80007d0:	08000ccd 	.word	0x08000ccd
 80007d4:	080007e1 	.word	0x080007e1
 80007d8:	08000a31 	.word	0x08000a31
 80007dc:	080008e1 	.word	0x080008e1
	{
		case EDIT_RED:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, SET);
 80007e0:	2201      	movs	r2, #1
 80007e2:	2108      	movs	r1, #8
 80007e4:	4885      	ldr	r0, [pc, #532]	; (80009fc <fsm_edit+0x258>)
 80007e6:	f001 fbc4 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, SET);
 80007ea:	2201      	movs	r2, #1
 80007ec:	2120      	movs	r1, #32
 80007ee:	4883      	ldr	r0, [pc, #524]	; (80009fc <fsm_edit+0x258>)
 80007f0:	f001 fbbf 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, SET);
 80007f4:	2201      	movs	r2, #1
 80007f6:	2110      	movs	r1, #16
 80007f8:	4880      	ldr	r0, [pc, #512]	; (80009fc <fsm_edit+0x258>)
 80007fa:	f001 fbba 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, SET);
 80007fe:	2201      	movs	r2, #1
 8000800:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000804:	487d      	ldr	r0, [pc, #500]	; (80009fc <fsm_edit+0x258>)
 8000806:	f001 fbb4 	bl	8001f72 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, SET);
 800080a:	2201      	movs	r2, #1
 800080c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000810:	487b      	ldr	r0, [pc, #492]	; (8000a00 <fsm_edit+0x25c>)
 8000812:	f001 fbae 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, SET);
 8000816:	2201      	movs	r2, #1
 8000818:	f44f 7100 	mov.w	r1, #512	; 0x200
 800081c:	4878      	ldr	r0, [pc, #480]	; (8000a00 <fsm_edit+0x25c>)
 800081e:	f001 fba8 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D9_GPIO_Port, D9_Pin, SET);
 8000822:	2201      	movs	r2, #1
 8000824:	2180      	movs	r1, #128	; 0x80
 8000826:	4877      	ldr	r0, [pc, #476]	; (8000a04 <fsm_edit+0x260>)
 8000828:	f001 fba3 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D10_GPIO_Port, D10_Pin, SET);
 800082c:	2201      	movs	r2, #1
 800082e:	2140      	movs	r1, #64	; 0x40
 8000830:	4872      	ldr	r0, [pc, #456]	; (80009fc <fsm_edit+0x258>)
 8000832:	f001 fb9e 	bl	8001f72 <HAL_GPIO_WritePin>
			if (isButton2Pressed() == 1 || isButton2LongPressed() == 1)
 8000836:	f7ff fc99 	bl	800016c <isButton2Pressed>
 800083a:	4603      	mov	r3, r0
 800083c:	2b01      	cmp	r3, #1
 800083e:	d004      	beq.n	800084a <fsm_edit+0xa6>
 8000840:	f7ff fcb4 	bl	80001ac <isButton2LongPressed>
 8000844:	4603      	mov	r3, r0
 8000846:	2b01      	cmp	r3, #1
 8000848:	d116      	bne.n	8000878 <fsm_edit+0xd4>
			{
				duration_ADD++;
 800084a:	4b6f      	ldr	r3, [pc, #444]	; (8000a08 <fsm_edit+0x264>)
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	3301      	adds	r3, #1
 8000850:	4a6d      	ldr	r2, [pc, #436]	; (8000a08 <fsm_edit+0x264>)
 8000852:	6013      	str	r3, [r2, #0]
				if (duration_ADD + duration_R > 99)
 8000854:	4b6c      	ldr	r3, [pc, #432]	; (8000a08 <fsm_edit+0x264>)
 8000856:	681a      	ldr	r2, [r3, #0]
 8000858:	4b6c      	ldr	r3, [pc, #432]	; (8000a0c <fsm_edit+0x268>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	4413      	add	r3, r2
 800085e:	2b63      	cmp	r3, #99	; 0x63
 8000860:	dd04      	ble.n	800086c <fsm_edit+0xc8>
				{
					lcd_clear_display();
 8000862:	f000 fb7c 	bl	8000f5e <lcd_clear_display>
					duration_ADD = 0;
 8000866:	4b68      	ldr	r3, [pc, #416]	; (8000a08 <fsm_edit+0x264>)
 8000868:	2200      	movs	r2, #0
 800086a:	601a      	str	r2, [r3, #0]
				}
				button2_flag = 0;
 800086c:	4b68      	ldr	r3, [pc, #416]	; (8000a10 <fsm_edit+0x26c>)
 800086e:	2200      	movs	r2, #0
 8000870:	601a      	str	r2, [r3, #0]
				button2_long_pressed = 0;
 8000872:	4b68      	ldr	r3, [pc, #416]	; (8000a14 <fsm_edit+0x270>)
 8000874:	2200      	movs	r2, #0
 8000876:	601a      	str	r2, [r3, #0]
			}

			lcd_goto_XY(1, 0);
 8000878:	2100      	movs	r1, #0
 800087a:	2001      	movs	r0, #1
 800087c:	f000 fb76 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Red LED Mode");
 8000880:	4865      	ldr	r0, [pc, #404]	; (8000a18 <fsm_edit+0x274>)
 8000882:	f000 fb57 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000886:	2100      	movs	r1, #0
 8000888:	2002      	movs	r0, #2
 800088a:	f000 fb6f 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Duration: ");
 800088e:	4863      	ldr	r0, [pc, #396]	; (8000a1c <fsm_edit+0x278>)
 8000890:	f000 fb50 	bl	8000f34 <lcd_send_string>
			lcd_display(2, 10, duration_R + duration_ADD);
 8000894:	4b5d      	ldr	r3, [pc, #372]	; (8000a0c <fsm_edit+0x268>)
 8000896:	681a      	ldr	r2, [r3, #0]
 8000898:	4b5b      	ldr	r3, [pc, #364]	; (8000a08 <fsm_edit+0x264>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	4413      	add	r3, r2
 800089e:	461a      	mov	r2, r3
 80008a0:	210a      	movs	r1, #10
 80008a2:	2002      	movs	r0, #2
 80008a4:	f000 fb84 	bl	8000fb0 <lcd_display>


			if (isButton3Pressed() == 1)
 80008a8:	f7ff fc70 	bl	800018c <isButton3Pressed>
 80008ac:	4603      	mov	r3, r0
 80008ae:	2b01      	cmp	r3, #1
 80008b0:	d10c      	bne.n	80008cc <fsm_edit+0x128>
			{
				duration_R += duration_ADD;
 80008b2:	4b56      	ldr	r3, [pc, #344]	; (8000a0c <fsm_edit+0x268>)
 80008b4:	681a      	ldr	r2, [r3, #0]
 80008b6:	4b54      	ldr	r3, [pc, #336]	; (8000a08 <fsm_edit+0x264>)
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	4413      	add	r3, r2
 80008bc:	4a53      	ldr	r2, [pc, #332]	; (8000a0c <fsm_edit+0x268>)
 80008be:	6013      	str	r3, [r2, #0]
				duration_ADD = 0;
 80008c0:	4b51      	ldr	r3, [pc, #324]	; (8000a08 <fsm_edit+0x264>)
 80008c2:	2200      	movs	r2, #0
 80008c4:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 80008c6:	4b56      	ldr	r3, [pc, #344]	; (8000a20 <fsm_edit+0x27c>)
 80008c8:	2200      	movs	r2, #0
 80008ca:	601a      	str	r2, [r3, #0]
			}
			if (isButton1Pressed() == 1)
 80008cc:	f7ff fc3e 	bl	800014c <isButton1Pressed>
 80008d0:	4603      	mov	r3, r0
 80008d2:	2b01      	cmp	r3, #1
 80008d4:	f040 81ed 	bne.w	8000cb2 <fsm_edit+0x50e>
			{
				duration_ADD = 0;
 80008d8:	4b4b      	ldr	r3, [pc, #300]	; (8000a08 <fsm_edit+0x264>)
 80008da:	2200      	movs	r2, #0
 80008dc:	601a      	str	r2, [r3, #0]
			}

			break;
 80008de:	e1e8      	b.n	8000cb2 <fsm_edit+0x50e>
		case EDIT_YELLOW:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, RESET);
 80008e0:	2200      	movs	r2, #0
 80008e2:	2108      	movs	r1, #8
 80008e4:	4845      	ldr	r0, [pc, #276]	; (80009fc <fsm_edit+0x258>)
 80008e6:	f001 fb44 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, SET);
 80008ea:	2201      	movs	r2, #1
 80008ec:	2120      	movs	r1, #32
 80008ee:	4843      	ldr	r0, [pc, #268]	; (80009fc <fsm_edit+0x258>)
 80008f0:	f001 fb3f 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, RESET);
 80008f4:	2200      	movs	r2, #0
 80008f6:	2110      	movs	r1, #16
 80008f8:	4840      	ldr	r0, [pc, #256]	; (80009fc <fsm_edit+0x258>)
 80008fa:	f001 fb3a 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, SET);
 80008fe:	2201      	movs	r2, #1
 8000900:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000904:	483d      	ldr	r0, [pc, #244]	; (80009fc <fsm_edit+0x258>)
 8000906:	f001 fb34 	bl	8001f72 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, RESET);
 800090a:	2200      	movs	r2, #0
 800090c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000910:	483b      	ldr	r0, [pc, #236]	; (8000a00 <fsm_edit+0x25c>)
 8000912:	f001 fb2e 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, SET);
 8000916:	2201      	movs	r2, #1
 8000918:	f44f 7100 	mov.w	r1, #512	; 0x200
 800091c:	4838      	ldr	r0, [pc, #224]	; (8000a00 <fsm_edit+0x25c>)
 800091e:	f001 fb28 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D9_GPIO_Port, D9_Pin, RESET);
 8000922:	2200      	movs	r2, #0
 8000924:	2180      	movs	r1, #128	; 0x80
 8000926:	4837      	ldr	r0, [pc, #220]	; (8000a04 <fsm_edit+0x260>)
 8000928:	f001 fb23 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D10_GPIO_Port, D10_Pin, SET);
 800092c:	2201      	movs	r2, #1
 800092e:	2140      	movs	r1, #64	; 0x40
 8000930:	4832      	ldr	r0, [pc, #200]	; (80009fc <fsm_edit+0x258>)
 8000932:	f001 fb1e 	bl	8001f72 <HAL_GPIO_WritePin>
			if (isButton2Pressed() == 1 || isButton2LongPressed() == 1)
 8000936:	f7ff fc19 	bl	800016c <isButton2Pressed>
 800093a:	4603      	mov	r3, r0
 800093c:	2b01      	cmp	r3, #1
 800093e:	d004      	beq.n	800094a <fsm_edit+0x1a6>
 8000940:	f7ff fc34 	bl	80001ac <isButton2LongPressed>
 8000944:	4603      	mov	r3, r0
 8000946:	2b01      	cmp	r3, #1
 8000948:	d122      	bne.n	8000990 <fsm_edit+0x1ec>
			{
				duration_ADD++;
 800094a:	4b2f      	ldr	r3, [pc, #188]	; (8000a08 <fsm_edit+0x264>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	3301      	adds	r3, #1
 8000950:	4a2d      	ldr	r2, [pc, #180]	; (8000a08 <fsm_edit+0x264>)
 8000952:	6013      	str	r3, [r2, #0]
				if ((duration_Y + duration_ADD > duration_R - 1) || (duration_Y + duration_ADD > duration_G - 2))
 8000954:	4b33      	ldr	r3, [pc, #204]	; (8000a24 <fsm_edit+0x280>)
 8000956:	681a      	ldr	r2, [r3, #0]
 8000958:	4b2b      	ldr	r3, [pc, #172]	; (8000a08 <fsm_edit+0x264>)
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	441a      	add	r2, r3
 800095e:	4b2b      	ldr	r3, [pc, #172]	; (8000a0c <fsm_edit+0x268>)
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	429a      	cmp	r2, r3
 8000964:	da09      	bge.n	800097a <fsm_edit+0x1d6>
 8000966:	4b30      	ldr	r3, [pc, #192]	; (8000a28 <fsm_edit+0x284>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	1e5a      	subs	r2, r3, #1
 800096c:	4b2d      	ldr	r3, [pc, #180]	; (8000a24 <fsm_edit+0x280>)
 800096e:	6819      	ldr	r1, [r3, #0]
 8000970:	4b25      	ldr	r3, [pc, #148]	; (8000a08 <fsm_edit+0x264>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	440b      	add	r3, r1
 8000976:	429a      	cmp	r2, r3
 8000978:	dc04      	bgt.n	8000984 <fsm_edit+0x1e0>
				{
					lcd_clear_display();
 800097a:	f000 faf0 	bl	8000f5e <lcd_clear_display>
					duration_ADD = 0;
 800097e:	4b22      	ldr	r3, [pc, #136]	; (8000a08 <fsm_edit+0x264>)
 8000980:	2200      	movs	r2, #0
 8000982:	601a      	str	r2, [r3, #0]
				}
				button2_flag = 0;
 8000984:	4b22      	ldr	r3, [pc, #136]	; (8000a10 <fsm_edit+0x26c>)
 8000986:	2200      	movs	r2, #0
 8000988:	601a      	str	r2, [r3, #0]
				button2_long_pressed = 0;
 800098a:	4b22      	ldr	r3, [pc, #136]	; (8000a14 <fsm_edit+0x270>)
 800098c:	2200      	movs	r2, #0
 800098e:	601a      	str	r2, [r3, #0]
			}
			lcd_goto_XY(1, 0);
 8000990:	2100      	movs	r1, #0
 8000992:	2001      	movs	r0, #1
 8000994:	f000 faea 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Yellow LED Mode");
 8000998:	4824      	ldr	r0, [pc, #144]	; (8000a2c <fsm_edit+0x288>)
 800099a:	f000 facb 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 800099e:	2100      	movs	r1, #0
 80009a0:	2002      	movs	r0, #2
 80009a2:	f000 fae3 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Duration: ");
 80009a6:	481d      	ldr	r0, [pc, #116]	; (8000a1c <fsm_edit+0x278>)
 80009a8:	f000 fac4 	bl	8000f34 <lcd_send_string>
			lcd_display(2, 10, duration_Y + duration_ADD);
 80009ac:	4b1d      	ldr	r3, [pc, #116]	; (8000a24 <fsm_edit+0x280>)
 80009ae:	681a      	ldr	r2, [r3, #0]
 80009b0:	4b15      	ldr	r3, [pc, #84]	; (8000a08 <fsm_edit+0x264>)
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	4413      	add	r3, r2
 80009b6:	461a      	mov	r2, r3
 80009b8:	210a      	movs	r1, #10
 80009ba:	2002      	movs	r0, #2
 80009bc:	f000 faf8 	bl	8000fb0 <lcd_display>
			if (isButton3Pressed() == 1)
 80009c0:	f7ff fbe4 	bl	800018c <isButton3Pressed>
 80009c4:	4603      	mov	r3, r0
 80009c6:	2b01      	cmp	r3, #1
 80009c8:	d10c      	bne.n	80009e4 <fsm_edit+0x240>
			{
				duration_Y += duration_ADD;
 80009ca:	4b16      	ldr	r3, [pc, #88]	; (8000a24 <fsm_edit+0x280>)
 80009cc:	681a      	ldr	r2, [r3, #0]
 80009ce:	4b0e      	ldr	r3, [pc, #56]	; (8000a08 <fsm_edit+0x264>)
 80009d0:	681b      	ldr	r3, [r3, #0]
 80009d2:	4413      	add	r3, r2
 80009d4:	4a13      	ldr	r2, [pc, #76]	; (8000a24 <fsm_edit+0x280>)
 80009d6:	6013      	str	r3, [r2, #0]
				duration_ADD = 0;
 80009d8:	4b0b      	ldr	r3, [pc, #44]	; (8000a08 <fsm_edit+0x264>)
 80009da:	2200      	movs	r2, #0
 80009dc:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 80009de:	4b10      	ldr	r3, [pc, #64]	; (8000a20 <fsm_edit+0x27c>)
 80009e0:	2200      	movs	r2, #0
 80009e2:	601a      	str	r2, [r3, #0]
			}
			if (isButton1Pressed() == 1)
 80009e4:	f7ff fbb2 	bl	800014c <isButton1Pressed>
 80009e8:	4603      	mov	r3, r0
 80009ea:	2b01      	cmp	r3, #1
 80009ec:	f040 8163 	bne.w	8000cb6 <fsm_edit+0x512>
			{
				duration_ADD = 0;
 80009f0:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <fsm_edit+0x264>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	601a      	str	r2, [r3, #0]
			}
			break;
 80009f6:	e15e      	b.n	8000cb6 <fsm_edit+0x512>
 80009f8:	200000cc 	.word	0x200000cc
 80009fc:	40010c00 	.word	0x40010c00
 8000a00:	40010800 	.word	0x40010800
 8000a04:	40011000 	.word	0x40011000
 8000a08:	200000d0 	.word	0x200000d0
 8000a0c:	20000038 	.word	0x20000038
 8000a10:	200000e8 	.word	0x200000e8
 8000a14:	200000dc 	.word	0x200000dc
 8000a18:	080043cc 	.word	0x080043cc
 8000a1c:	080043dc 	.word	0x080043dc
 8000a20:	200000ec 	.word	0x200000ec
 8000a24:	2000003c 	.word	0x2000003c
 8000a28:	20000034 	.word	0x20000034
 8000a2c:	080043e8 	.word	0x080043e8
		case EDIT_GREEN:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, SET);
 8000a30:	2201      	movs	r2, #1
 8000a32:	2108      	movs	r1, #8
 8000a34:	48b2      	ldr	r0, [pc, #712]	; (8000d00 <fsm_edit+0x55c>)
 8000a36:	f001 fa9c 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, RESET);
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	2120      	movs	r1, #32
 8000a3e:	48b0      	ldr	r0, [pc, #704]	; (8000d00 <fsm_edit+0x55c>)
 8000a40:	f001 fa97 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, SET);
 8000a44:	2201      	movs	r2, #1
 8000a46:	2110      	movs	r1, #16
 8000a48:	48ad      	ldr	r0, [pc, #692]	; (8000d00 <fsm_edit+0x55c>)
 8000a4a:	f001 fa92 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, RESET);
 8000a4e:	2200      	movs	r2, #0
 8000a50:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000a54:	48aa      	ldr	r0, [pc, #680]	; (8000d00 <fsm_edit+0x55c>)
 8000a56:	f001 fa8c 	bl	8001f72 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, SET);
 8000a5a:	2201      	movs	r2, #1
 8000a5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000a60:	48a8      	ldr	r0, [pc, #672]	; (8000d04 <fsm_edit+0x560>)
 8000a62:	f001 fa86 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, RESET);
 8000a66:	2200      	movs	r2, #0
 8000a68:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000a6c:	48a5      	ldr	r0, [pc, #660]	; (8000d04 <fsm_edit+0x560>)
 8000a6e:	f001 fa80 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D9_GPIO_Port, D9_Pin, SET);
 8000a72:	2201      	movs	r2, #1
 8000a74:	2180      	movs	r1, #128	; 0x80
 8000a76:	48a4      	ldr	r0, [pc, #656]	; (8000d08 <fsm_edit+0x564>)
 8000a78:	f001 fa7b 	bl	8001f72 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D10_GPIO_Port, D10_Pin, RESET);
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	2140      	movs	r1, #64	; 0x40
 8000a80:	489f      	ldr	r0, [pc, #636]	; (8000d00 <fsm_edit+0x55c>)
 8000a82:	f001 fa76 	bl	8001f72 <HAL_GPIO_WritePin>
			if (isButton2Pressed() == 1 || isButton2LongPressed() == 1)
 8000a86:	f7ff fb71 	bl	800016c <isButton2Pressed>
 8000a8a:	4603      	mov	r3, r0
 8000a8c:	2b01      	cmp	r3, #1
 8000a8e:	d004      	beq.n	8000a9a <fsm_edit+0x2f6>
 8000a90:	f7ff fb8c 	bl	80001ac <isButton2LongPressed>
 8000a94:	4603      	mov	r3, r0
 8000a96:	2b01      	cmp	r3, #1
 8000a98:	d116      	bne.n	8000ac8 <fsm_edit+0x324>
			{
				duration_ADD++;
 8000a9a:	4b9c      	ldr	r3, [pc, #624]	; (8000d0c <fsm_edit+0x568>)
 8000a9c:	681b      	ldr	r3, [r3, #0]
 8000a9e:	3301      	adds	r3, #1
 8000aa0:	4a9a      	ldr	r2, [pc, #616]	; (8000d0c <fsm_edit+0x568>)
 8000aa2:	6013      	str	r3, [r2, #0]
				if (duration_G + duration_ADD > 99)
 8000aa4:	4b9a      	ldr	r3, [pc, #616]	; (8000d10 <fsm_edit+0x56c>)
 8000aa6:	681a      	ldr	r2, [r3, #0]
 8000aa8:	4b98      	ldr	r3, [pc, #608]	; (8000d0c <fsm_edit+0x568>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	4413      	add	r3, r2
 8000aae:	2b63      	cmp	r3, #99	; 0x63
 8000ab0:	dd04      	ble.n	8000abc <fsm_edit+0x318>
				{
					lcd_clear_display();
 8000ab2:	f000 fa54 	bl	8000f5e <lcd_clear_display>
					duration_ADD = 0;
 8000ab6:	4b95      	ldr	r3, [pc, #596]	; (8000d0c <fsm_edit+0x568>)
 8000ab8:	2200      	movs	r2, #0
 8000aba:	601a      	str	r2, [r3, #0]
				}
				button2_flag = 0;
 8000abc:	4b95      	ldr	r3, [pc, #596]	; (8000d14 <fsm_edit+0x570>)
 8000abe:	2200      	movs	r2, #0
 8000ac0:	601a      	str	r2, [r3, #0]
				button2_long_pressed = 0;
 8000ac2:	4b95      	ldr	r3, [pc, #596]	; (8000d18 <fsm_edit+0x574>)
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	601a      	str	r2, [r3, #0]
			}
			lcd_goto_XY(1, 0);
 8000ac8:	2100      	movs	r1, #0
 8000aca:	2001      	movs	r0, #1
 8000acc:	f000 fa4e 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Green LED Mode");
 8000ad0:	4892      	ldr	r0, [pc, #584]	; (8000d1c <fsm_edit+0x578>)
 8000ad2:	f000 fa2f 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000ad6:	2100      	movs	r1, #0
 8000ad8:	2002      	movs	r0, #2
 8000ada:	f000 fa47 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Duration: ");
 8000ade:	4890      	ldr	r0, [pc, #576]	; (8000d20 <fsm_edit+0x57c>)
 8000ae0:	f000 fa28 	bl	8000f34 <lcd_send_string>
			lcd_display(2, 10, duration_G + duration_ADD);
 8000ae4:	4b8a      	ldr	r3, [pc, #552]	; (8000d10 <fsm_edit+0x56c>)
 8000ae6:	681a      	ldr	r2, [r3, #0]
 8000ae8:	4b88      	ldr	r3, [pc, #544]	; (8000d0c <fsm_edit+0x568>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	4413      	add	r3, r2
 8000aee:	461a      	mov	r2, r3
 8000af0:	210a      	movs	r1, #10
 8000af2:	2002      	movs	r0, #2
 8000af4:	f000 fa5c 	bl	8000fb0 <lcd_display>
			if (isButton3Pressed() == 1)
 8000af8:	f7ff fb48 	bl	800018c <isButton3Pressed>
 8000afc:	4603      	mov	r3, r0
 8000afe:	2b01      	cmp	r3, #1
 8000b00:	d10c      	bne.n	8000b1c <fsm_edit+0x378>
			{
				duration_G += duration_ADD;
 8000b02:	4b83      	ldr	r3, [pc, #524]	; (8000d10 <fsm_edit+0x56c>)
 8000b04:	681a      	ldr	r2, [r3, #0]
 8000b06:	4b81      	ldr	r3, [pc, #516]	; (8000d0c <fsm_edit+0x568>)
 8000b08:	681b      	ldr	r3, [r3, #0]
 8000b0a:	4413      	add	r3, r2
 8000b0c:	4a80      	ldr	r2, [pc, #512]	; (8000d10 <fsm_edit+0x56c>)
 8000b0e:	6013      	str	r3, [r2, #0]
				duration_ADD = 0;
 8000b10:	4b7e      	ldr	r3, [pc, #504]	; (8000d0c <fsm_edit+0x568>)
 8000b12:	2200      	movs	r2, #0
 8000b14:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 8000b16:	4b83      	ldr	r3, [pc, #524]	; (8000d24 <fsm_edit+0x580>)
 8000b18:	2200      	movs	r2, #0
 8000b1a:	601a      	str	r2, [r3, #0]
			}
			if (isButton1Pressed() == 1)
 8000b1c:	f7ff fb16 	bl	800014c <isButton1Pressed>
 8000b20:	4603      	mov	r3, r0
 8000b22:	2b01      	cmp	r3, #1
 8000b24:	f040 80c9 	bne.w	8000cba <fsm_edit+0x516>
			{
				duration_ADD = 0;
 8000b28:	4b78      	ldr	r3, [pc, #480]	; (8000d0c <fsm_edit+0x568>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	601a      	str	r2, [r3, #0]
			}
			break;
 8000b2e:	e0c4      	b.n	8000cba <fsm_edit+0x516>
		case MAN_GREEN_RED:
			ledGreen_Red();
 8000b30:	f000 fafc 	bl	800112c <ledGreen_Red>
			lcd_goto_XY(1, 0);
 8000b34:	2100      	movs	r1, #0
 8000b36:	2001      	movs	r0, #1
 8000b38:	f000 fa18 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Green");
 8000b3c:	487a      	ldr	r0, [pc, #488]	; (8000d28 <fsm_edit+0x584>)
 8000b3e:	f000 f9f9 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000b42:	2100      	movs	r1, #0
 8000b44:	2002      	movs	r0, #2
 8000b46:	f000 fa11 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Red");
 8000b4a:	4878      	ldr	r0, [pc, #480]	; (8000d2c <fsm_edit+0x588>)
 8000b4c:	f000 f9f2 	bl	8000f34 <lcd_send_string>
			if (isButton3Pressed() == 1)
 8000b50:	f7ff fb1c 	bl	800018c <isButton3Pressed>
 8000b54:	4603      	mov	r3, r0
 8000b56:	2b01      	cmp	r3, #1
 8000b58:	d109      	bne.n	8000b6e <fsm_edit+0x3ca>
			{
				lcd_clear_display();
 8000b5a:	f000 fa00 	bl	8000f5e <lcd_clear_display>
				ledReset();
 8000b5e:	f000 fa43 	bl	8000fe8 <ledReset>
				status = 6;
 8000b62:	4b73      	ldr	r3, [pc, #460]	; (8000d30 <fsm_edit+0x58c>)
 8000b64:	2206      	movs	r2, #6
 8000b66:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 8000b68:	4b6e      	ldr	r3, [pc, #440]	; (8000d24 <fsm_edit+0x580>)
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	601a      	str	r2, [r3, #0]
			}

			if (isButton2Pressed() == 1)
 8000b6e:	f7ff fafd 	bl	800016c <isButton2Pressed>
 8000b72:	4603      	mov	r3, r0
 8000b74:	2b01      	cmp	r3, #1
 8000b76:	f040 80a2 	bne.w	8000cbe <fsm_edit+0x51a>
			{
				lcd_clear_display();
 8000b7a:	f000 f9f0 	bl	8000f5e <lcd_clear_display>
				status = 0;
 8000b7e:	4b6c      	ldr	r3, [pc, #432]	; (8000d30 <fsm_edit+0x58c>)
 8000b80:	2200      	movs	r2, #0
 8000b82:	601a      	str	r2, [r3, #0]
				mode = 1;
 8000b84:	4b6b      	ldr	r3, [pc, #428]	; (8000d34 <fsm_edit+0x590>)
 8000b86:	2201      	movs	r2, #1
 8000b88:	601a      	str	r2, [r3, #0]
				button2_flag = 0;
 8000b8a:	4b62      	ldr	r3, [pc, #392]	; (8000d14 <fsm_edit+0x570>)
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	601a      	str	r2, [r3, #0]
			}
			break;
 8000b90:	e095      	b.n	8000cbe <fsm_edit+0x51a>
		case MAN_YELLOW_RED:
			ledYellow_Red();
 8000b92:	f000 fb01 	bl	8001198 <ledYellow_Red>
			lcd_goto_XY(1, 0);
 8000b96:	2100      	movs	r1, #0
 8000b98:	2001      	movs	r0, #1
 8000b9a:	f000 f9e7 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Yellow");
 8000b9e:	4866      	ldr	r0, [pc, #408]	; (8000d38 <fsm_edit+0x594>)
 8000ba0:	f000 f9c8 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000ba4:	2100      	movs	r1, #0
 8000ba6:	2002      	movs	r0, #2
 8000ba8:	f000 f9e0 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Red");
 8000bac:	485f      	ldr	r0, [pc, #380]	; (8000d2c <fsm_edit+0x588>)
 8000bae:	f000 f9c1 	bl	8000f34 <lcd_send_string>
			if (isButton3Pressed() == 1)
 8000bb2:	f7ff faeb 	bl	800018c <isButton3Pressed>
 8000bb6:	4603      	mov	r3, r0
 8000bb8:	2b01      	cmp	r3, #1
 8000bba:	d109      	bne.n	8000bd0 <fsm_edit+0x42c>
			{
				ledReset();
 8000bbc:	f000 fa14 	bl	8000fe8 <ledReset>
				status = 7;
 8000bc0:	4b5b      	ldr	r3, [pc, #364]	; (8000d30 <fsm_edit+0x58c>)
 8000bc2:	2207      	movs	r2, #7
 8000bc4:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 8000bc6:	4b57      	ldr	r3, [pc, #348]	; (8000d24 <fsm_edit+0x580>)
 8000bc8:	2200      	movs	r2, #0
 8000bca:	601a      	str	r2, [r3, #0]
				lcd_clear_display();
 8000bcc:	f000 f9c7 	bl	8000f5e <lcd_clear_display>
			}

			if (isButton2Pressed() == 1)
 8000bd0:	f7ff facc 	bl	800016c <isButton2Pressed>
 8000bd4:	4603      	mov	r3, r0
 8000bd6:	2b01      	cmp	r3, #1
 8000bd8:	d173      	bne.n	8000cc2 <fsm_edit+0x51e>
			{
				lcd_clear_display();
 8000bda:	f000 f9c0 	bl	8000f5e <lcd_clear_display>
				status = 0;
 8000bde:	4b54      	ldr	r3, [pc, #336]	; (8000d30 <fsm_edit+0x58c>)
 8000be0:	2200      	movs	r2, #0
 8000be2:	601a      	str	r2, [r3, #0]
				mode = 1;
 8000be4:	4b53      	ldr	r3, [pc, #332]	; (8000d34 <fsm_edit+0x590>)
 8000be6:	2201      	movs	r2, #1
 8000be8:	601a      	str	r2, [r3, #0]
				button2_flag = 0;
 8000bea:	4b4a      	ldr	r3, [pc, #296]	; (8000d14 <fsm_edit+0x570>)
 8000bec:	2200      	movs	r2, #0
 8000bee:	601a      	str	r2, [r3, #0]
			}
			break;
 8000bf0:	e067      	b.n	8000cc2 <fsm_edit+0x51e>
		case MAN_RED_GREEN:
			ledRed_Green();
 8000bf2:	f000 fa2f 	bl	8001054 <ledRed_Green>
			lcd_goto_XY(1, 0);
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	2001      	movs	r0, #1
 8000bfa:	f000 f9b7 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Red");
 8000bfe:	484b      	ldr	r0, [pc, #300]	; (8000d2c <fsm_edit+0x588>)
 8000c00:	f000 f998 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000c04:	2100      	movs	r1, #0
 8000c06:	2002      	movs	r0, #2
 8000c08:	f000 f9b0 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Green");
 8000c0c:	4846      	ldr	r0, [pc, #280]	; (8000d28 <fsm_edit+0x584>)
 8000c0e:	f000 f991 	bl	8000f34 <lcd_send_string>
			if (isButton3Pressed() == 1)
 8000c12:	f7ff fabb 	bl	800018c <isButton3Pressed>
 8000c16:	4603      	mov	r3, r0
 8000c18:	2b01      	cmp	r3, #1
 8000c1a:	d109      	bne.n	8000c30 <fsm_edit+0x48c>
			{
				lcd_clear_display();
 8000c1c:	f000 f99f 	bl	8000f5e <lcd_clear_display>
				ledReset();
 8000c20:	f000 f9e2 	bl	8000fe8 <ledReset>
				status = 8;
 8000c24:	4b42      	ldr	r3, [pc, #264]	; (8000d30 <fsm_edit+0x58c>)
 8000c26:	2208      	movs	r2, #8
 8000c28:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 8000c2a:	4b3e      	ldr	r3, [pc, #248]	; (8000d24 <fsm_edit+0x580>)
 8000c2c:	2200      	movs	r2, #0
 8000c2e:	601a      	str	r2, [r3, #0]
			}

			if (isButton2Pressed() == 1)
 8000c30:	f7ff fa9c 	bl	800016c <isButton2Pressed>
 8000c34:	4603      	mov	r3, r0
 8000c36:	2b01      	cmp	r3, #1
 8000c38:	d145      	bne.n	8000cc6 <fsm_edit+0x522>
			{
				lcd_clear_display();
 8000c3a:	f000 f990 	bl	8000f5e <lcd_clear_display>
				status = 0;
 8000c3e:	4b3c      	ldr	r3, [pc, #240]	; (8000d30 <fsm_edit+0x58c>)
 8000c40:	2200      	movs	r2, #0
 8000c42:	601a      	str	r2, [r3, #0]
				mode = 1;
 8000c44:	4b3b      	ldr	r3, [pc, #236]	; (8000d34 <fsm_edit+0x590>)
 8000c46:	2201      	movs	r2, #1
 8000c48:	601a      	str	r2, [r3, #0]
				button2_flag = 0;
 8000c4a:	4b32      	ldr	r3, [pc, #200]	; (8000d14 <fsm_edit+0x570>)
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	601a      	str	r2, [r3, #0]
			}
			break;
 8000c50:	e039      	b.n	8000cc6 <fsm_edit+0x522>
		case MAN_RED_YELLOW:
			ledRed_Yellow();
 8000c52:	f000 fa35 	bl	80010c0 <ledRed_Yellow>
			lcd_goto_XY(1, 0);
 8000c56:	2100      	movs	r1, #0
 8000c58:	2001      	movs	r0, #1
 8000c5a:	f000 f987 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Red");
 8000c5e:	4833      	ldr	r0, [pc, #204]	; (8000d2c <fsm_edit+0x588>)
 8000c60:	f000 f968 	bl	8000f34 <lcd_send_string>
			lcd_goto_XY(2, 0);
 8000c64:	2100      	movs	r1, #0
 8000c66:	2002      	movs	r0, #2
 8000c68:	f000 f980 	bl	8000f6c <lcd_goto_XY>
			lcd_send_string("Yellow");
 8000c6c:	4832      	ldr	r0, [pc, #200]	; (8000d38 <fsm_edit+0x594>)
 8000c6e:	f000 f961 	bl	8000f34 <lcd_send_string>
			if (isButton3Pressed() == 1)
 8000c72:	f7ff fa8b 	bl	800018c <isButton3Pressed>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b01      	cmp	r3, #1
 8000c7a:	d109      	bne.n	8000c90 <fsm_edit+0x4ec>
			{
				lcd_clear_display();
 8000c7c:	f000 f96f 	bl	8000f5e <lcd_clear_display>
				ledReset();
 8000c80:	f000 f9b2 	bl	8000fe8 <ledReset>
				status = 5;
 8000c84:	4b2a      	ldr	r3, [pc, #168]	; (8000d30 <fsm_edit+0x58c>)
 8000c86:	2205      	movs	r2, #5
 8000c88:	601a      	str	r2, [r3, #0]
				button3_flag = 0;
 8000c8a:	4b26      	ldr	r3, [pc, #152]	; (8000d24 <fsm_edit+0x580>)
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	601a      	str	r2, [r3, #0]
			}

			if (isButton2Pressed() == 1)
 8000c90:	f7ff fa6c 	bl	800016c <isButton2Pressed>
 8000c94:	4603      	mov	r3, r0
 8000c96:	2b01      	cmp	r3, #1
 8000c98:	d117      	bne.n	8000cca <fsm_edit+0x526>
			{
				lcd_clear_display();
 8000c9a:	f000 f960 	bl	8000f5e <lcd_clear_display>
				status = 0;
 8000c9e:	4b24      	ldr	r3, [pc, #144]	; (8000d30 <fsm_edit+0x58c>)
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	601a      	str	r2, [r3, #0]
				mode = 1;
 8000ca4:	4b23      	ldr	r3, [pc, #140]	; (8000d34 <fsm_edit+0x590>)
 8000ca6:	2201      	movs	r2, #1
 8000ca8:	601a      	str	r2, [r3, #0]
				button2_flag = 0;
 8000caa:	4b1a      	ldr	r3, [pc, #104]	; (8000d14 <fsm_edit+0x570>)
 8000cac:	2200      	movs	r2, #0
 8000cae:	601a      	str	r2, [r3, #0]
			}
			break;
 8000cb0:	e00b      	b.n	8000cca <fsm_edit+0x526>
			break;
 8000cb2:	bf00      	nop
 8000cb4:	e00a      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cb6:	bf00      	nop
 8000cb8:	e008      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cba:	bf00      	nop
 8000cbc:	e006      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cbe:	bf00      	nop
 8000cc0:	e004      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cc2:	bf00      	nop
 8000cc4:	e002      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cc6:	bf00      	nop
 8000cc8:	e000      	b.n	8000ccc <fsm_edit+0x528>
			break;
 8000cca:	bf00      	nop
	}
	if ((duration_R == 99) && (duration_G == 99) && (duration_Y == 97))
 8000ccc:	4b1b      	ldr	r3, [pc, #108]	; (8000d3c <fsm_edit+0x598>)
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	2b63      	cmp	r3, #99	; 0x63
 8000cd2:	d113      	bne.n	8000cfc <fsm_edit+0x558>
 8000cd4:	4b0e      	ldr	r3, [pc, #56]	; (8000d10 <fsm_edit+0x56c>)
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	2b63      	cmp	r3, #99	; 0x63
 8000cda:	d10f      	bne.n	8000cfc <fsm_edit+0x558>
 8000cdc:	4b18      	ldr	r3, [pc, #96]	; (8000d40 <fsm_edit+0x59c>)
 8000cde:	681b      	ldr	r3, [r3, #0]
 8000ce0:	2b61      	cmp	r3, #97	; 0x61
 8000ce2:	d10b      	bne.n	8000cfc <fsm_edit+0x558>
	{
		duration_R = duration_R_default;
 8000ce4:	4b17      	ldr	r3, [pc, #92]	; (8000d44 <fsm_edit+0x5a0>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	4a14      	ldr	r2, [pc, #80]	; (8000d3c <fsm_edit+0x598>)
 8000cea:	6013      	str	r3, [r2, #0]
		duration_Y = duration_Y_default;
 8000cec:	4b16      	ldr	r3, [pc, #88]	; (8000d48 <fsm_edit+0x5a4>)
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	4a13      	ldr	r2, [pc, #76]	; (8000d40 <fsm_edit+0x59c>)
 8000cf2:	6013      	str	r3, [r2, #0]
		duration_G = duration_G_default;
 8000cf4:	4b15      	ldr	r3, [pc, #84]	; (8000d4c <fsm_edit+0x5a8>)
 8000cf6:	681b      	ldr	r3, [r3, #0]
 8000cf8:	4a05      	ldr	r2, [pc, #20]	; (8000d10 <fsm_edit+0x56c>)
 8000cfa:	6013      	str	r3, [r2, #0]
	}
}
 8000cfc:	bf00      	nop
 8000cfe:	bd80      	pop	{r7, pc}
 8000d00:	40010c00 	.word	0x40010c00
 8000d04:	40010800 	.word	0x40010800
 8000d08:	40011000 	.word	0x40011000
 8000d0c:	200000d0 	.word	0x200000d0
 8000d10:	20000034 	.word	0x20000034
 8000d14:	200000e8 	.word	0x200000e8
 8000d18:	200000dc 	.word	0x200000dc
 8000d1c:	080043f8 	.word	0x080043f8
 8000d20:	080043dc 	.word	0x080043dc
 8000d24:	200000ec 	.word	0x200000ec
 8000d28:	08004408 	.word	0x08004408
 8000d2c:	08004410 	.word	0x08004410
 8000d30:	200000cc 	.word	0x200000cc
 8000d34:	20000030 	.word	0x20000030
 8000d38:	08004414 	.word	0x08004414
 8000d3c:	20000038 	.word	0x20000038
 8000d40:	2000003c 	.word	0x2000003c
 8000d44:	08004428 	.word	0x08004428
 8000d48:	0800442c 	.word	0x0800442c
 8000d4c:	08004424 	.word	0x08004424

08000d50 <changeMode>:

#include <fsm_setting.h>
int mode = 1;

void changeMode()
{
 8000d50:	b580      	push	{r7, lr}
 8000d52:	af00      	add	r7, sp, #0
	mode++;
 8000d54:	4b19      	ldr	r3, [pc, #100]	; (8000dbc <changeMode+0x6c>)
 8000d56:	681b      	ldr	r3, [r3, #0]
 8000d58:	3301      	adds	r3, #1
 8000d5a:	4a18      	ldr	r2, [pc, #96]	; (8000dbc <changeMode+0x6c>)
 8000d5c:	6013      	str	r3, [r2, #0]
	if (mode >= 5)
 8000d5e:	4b17      	ldr	r3, [pc, #92]	; (8000dbc <changeMode+0x6c>)
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	2b04      	cmp	r3, #4
 8000d64:	dd02      	ble.n	8000d6c <changeMode+0x1c>
	{
		mode = 1;
 8000d66:	4b15      	ldr	r3, [pc, #84]	; (8000dbc <changeMode+0x6c>)
 8000d68:	2201      	movs	r2, #1
 8000d6a:	601a      	str	r2, [r3, #0]
	}
	switch(mode)
 8000d6c:	4b13      	ldr	r3, [pc, #76]	; (8000dbc <changeMode+0x6c>)
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	3b01      	subs	r3, #1
 8000d72:	2b03      	cmp	r3, #3
 8000d74:	d820      	bhi.n	8000db8 <changeMode+0x68>
 8000d76:	a201      	add	r2, pc, #4	; (adr r2, 8000d7c <changeMode+0x2c>)
 8000d78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d7c:	08000d8d 	.word	0x08000d8d
 8000d80:	08000d95 	.word	0x08000d95
 8000d84:	08000da1 	.word	0x08000da1
 8000d88:	08000dad 	.word	0x08000dad
	{
		case 1:
			status = 0;
 8000d8c:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <changeMode+0x70>)
 8000d8e:	2200      	movs	r2, #0
 8000d90:	601a      	str	r2, [r3, #0]
			break;
 8000d92:	e011      	b.n	8000db8 <changeMode+0x68>
		case 2:
			ledReset();
 8000d94:	f000 f928 	bl	8000fe8 <ledReset>
			status = 11;
 8000d98:	4b09      	ldr	r3, [pc, #36]	; (8000dc0 <changeMode+0x70>)
 8000d9a:	220b      	movs	r2, #11
 8000d9c:	601a      	str	r2, [r3, #0]
			break;
 8000d9e:	e00b      	b.n	8000db8 <changeMode+0x68>
		case 3:
			ledReset();
 8000da0:	f000 f922 	bl	8000fe8 <ledReset>
			status = 12;
 8000da4:	4b06      	ldr	r3, [pc, #24]	; (8000dc0 <changeMode+0x70>)
 8000da6:	220c      	movs	r2, #12
 8000da8:	601a      	str	r2, [r3, #0]
			break;
 8000daa:	e005      	b.n	8000db8 <changeMode+0x68>
		case 4:
			ledReset();
 8000dac:	f000 f91c 	bl	8000fe8 <ledReset>
			status = 13;
 8000db0:	4b03      	ldr	r3, [pc, #12]	; (8000dc0 <changeMode+0x70>)
 8000db2:	220d      	movs	r2, #13
 8000db4:	601a      	str	r2, [r3, #0]
			break;
 8000db6:	bf00      	nop
	}
}
 8000db8:	bf00      	nop
 8000dba:	bd80      	pop	{r7, pc}
 8000dbc:	20000030 	.word	0x20000030
 8000dc0:	200000cc 	.word	0x200000cc

08000dc4 <fsm_config>:

void fsm_config()
{
 8000dc4:	b580      	push	{r7, lr}
 8000dc6:	af00      	add	r7, sp, #0
	if (isButton1Pressed() == 1)
 8000dc8:	f7ff f9c0 	bl	800014c <isButton1Pressed>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	2b01      	cmp	r3, #1
 8000dd0:	d109      	bne.n	8000de6 <fsm_config+0x22>
	{
		lcd_clear_display();
 8000dd2:	f000 f8c4 	bl	8000f5e <lcd_clear_display>
		changeMode();
 8000dd6:	f7ff ffbb 	bl	8000d50 <changeMode>
		button1_flag = 0;
 8000dda:	4b0b      	ldr	r3, [pc, #44]	; (8000e08 <fsm_config+0x44>)
 8000ddc:	2200      	movs	r2, #0
 8000dde:	601a      	str	r2, [r3, #0]
		button1_long_pressed = 0;
 8000de0:	4b0a      	ldr	r3, [pc, #40]	; (8000e0c <fsm_config+0x48>)
 8000de2:	2200      	movs	r2, #0
 8000de4:	601a      	str	r2, [r3, #0]
	}
	if (isButton3LongPressed() == 1)
 8000de6:	f7ff f9f1 	bl	80001cc <isButton3LongPressed>
 8000dea:	4603      	mov	r3, r0
 8000dec:	2b01      	cmp	r3, #1
 8000dee:	d109      	bne.n	8000e04 <fsm_config+0x40>
	{
		lcd_clear_display();
 8000df0:	f000 f8b5 	bl	8000f5e <lcd_clear_display>
		ledReset();
 8000df4:	f000 f8f8 	bl	8000fe8 <ledReset>
		status = 5;
 8000df8:	4b05      	ldr	r3, [pc, #20]	; (8000e10 <fsm_config+0x4c>)
 8000dfa:	2205      	movs	r2, #5
 8000dfc:	601a      	str	r2, [r3, #0]
		button3_long_pressed = 0;
 8000dfe:	4b05      	ldr	r3, [pc, #20]	; (8000e14 <fsm_config+0x50>)
 8000e00:	2200      	movs	r2, #0
 8000e02:	601a      	str	r2, [r3, #0]
	}
}
 8000e04:	bf00      	nop
 8000e06:	bd80      	pop	{r7, pc}
 8000e08:	200000e4 	.word	0x200000e4
 8000e0c:	200000d8 	.word	0x200000d8
 8000e10:	200000cc 	.word	0x200000cc
 8000e14:	200000e0 	.word	0x200000e0

08000e18 <lcd_send_cmd>:
extern I2C_HandleTypeDef hi2c1;  // change your handler here accordingly

#define SLAVE_ADDRESS_LCD (0x21 << 1) // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 8000e18:	b580      	push	{r7, lr}
 8000e1a:	b086      	sub	sp, #24
 8000e1c:	af02      	add	r7, sp, #8
 8000e1e:	4603      	mov	r3, r0
 8000e20:	71fb      	strb	r3, [r7, #7]
  char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000e22:	79fb      	ldrb	r3, [r7, #7]
 8000e24:	f023 030f 	bic.w	r3, r3, #15
 8000e28:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 8000e2a:	79fb      	ldrb	r3, [r7, #7]
 8000e2c:	011b      	lsls	r3, r3, #4
 8000e2e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000e30:	7bfb      	ldrb	r3, [r7, #15]
 8000e32:	f043 030c 	orr.w	r3, r3, #12
 8000e36:	b2db      	uxtb	r3, r3
 8000e38:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 8000e3a:	7bfb      	ldrb	r3, [r7, #15]
 8000e3c:	f043 0308 	orr.w	r3, r3, #8
 8000e40:	b2db      	uxtb	r3, r3
 8000e42:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000e44:	7bbb      	ldrb	r3, [r7, #14]
 8000e46:	f043 030c 	orr.w	r3, r3, #12
 8000e4a:	b2db      	uxtb	r3, r3
 8000e4c:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 8000e4e:	7bbb      	ldrb	r3, [r7, #14]
 8000e50:	f043 0308 	orr.w	r3, r3, #8
 8000e54:	b2db      	uxtb	r3, r3
 8000e56:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000e58:	f107 0208 	add.w	r2, r7, #8
 8000e5c:	2364      	movs	r3, #100	; 0x64
 8000e5e:	9300      	str	r3, [sp, #0]
 8000e60:	2304      	movs	r3, #4
 8000e62:	2142      	movs	r1, #66	; 0x42
 8000e64:	4803      	ldr	r0, [pc, #12]	; (8000e74 <lcd_send_cmd+0x5c>)
 8000e66:	f001 fa03 	bl	8002270 <HAL_I2C_Master_Transmit>
}
 8000e6a:	bf00      	nop
 8000e6c:	3710      	adds	r7, #16
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	bd80      	pop	{r7, pc}
 8000e72:	bf00      	nop
 8000e74:	200000fc 	.word	0x200000fc

08000e78 <lcd_send_data>:

void lcd_send_data (char data)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b086      	sub	sp, #24
 8000e7c:	af02      	add	r7, sp, #8
 8000e7e:	4603      	mov	r3, r0
 8000e80:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000e82:	79fb      	ldrb	r3, [r7, #7]
 8000e84:	f023 030f 	bic.w	r3, r3, #15
 8000e88:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 8000e8a:	79fb      	ldrb	r3, [r7, #7]
 8000e8c:	011b      	lsls	r3, r3, #4
 8000e8e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 8000e90:	7bfb      	ldrb	r3, [r7, #15]
 8000e92:	f043 030d 	orr.w	r3, r3, #13
 8000e96:	b2db      	uxtb	r3, r3
 8000e98:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 8000e9a:	7bfb      	ldrb	r3, [r7, #15]
 8000e9c:	f043 0309 	orr.w	r3, r3, #9
 8000ea0:	b2db      	uxtb	r3, r3
 8000ea2:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 8000ea4:	7bbb      	ldrb	r3, [r7, #14]
 8000ea6:	f043 030d 	orr.w	r3, r3, #13
 8000eaa:	b2db      	uxtb	r3, r3
 8000eac:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 8000eae:	7bbb      	ldrb	r3, [r7, #14]
 8000eb0:	f043 0309 	orr.w	r3, r3, #9
 8000eb4:	b2db      	uxtb	r3, r3
 8000eb6:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000eb8:	f107 0208 	add.w	r2, r7, #8
 8000ebc:	2364      	movs	r3, #100	; 0x64
 8000ebe:	9300      	str	r3, [sp, #0]
 8000ec0:	2304      	movs	r3, #4
 8000ec2:	2142      	movs	r1, #66	; 0x42
 8000ec4:	4803      	ldr	r0, [pc, #12]	; (8000ed4 <lcd_send_data+0x5c>)
 8000ec6:	f001 f9d3 	bl	8002270 <HAL_I2C_Master_Transmit>
}
 8000eca:	bf00      	nop
 8000ecc:	3710      	adds	r7, #16
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	bd80      	pop	{r7, pc}
 8000ed2:	bf00      	nop
 8000ed4:	200000fc 	.word	0x200000fc

08000ed8 <lcd_init>:

void lcd_init (void) {
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33); /* set 4-bits interface */
 8000edc:	2033      	movs	r0, #51	; 0x33
 8000ede:	f7ff ff9b 	bl	8000e18 <lcd_send_cmd>
	lcd_send_cmd (0x32);
 8000ee2:	2032      	movs	r0, #50	; 0x32
 8000ee4:	f7ff ff98 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000ee8:	2032      	movs	r0, #50	; 0x32
 8000eea:	f000 fd75 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function */
 8000eee:	2028      	movs	r0, #40	; 0x28
 8000ef0:	f7ff ff92 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000ef4:	2032      	movs	r0, #50	; 0x32
 8000ef6:	f000 fd6f 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 8000efa:	2001      	movs	r0, #1
 8000efc:	f7ff ff8c 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000f00:	2032      	movs	r0, #50	; 0x32
 8000f02:	f000 fd69 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 8000f06:	2006      	movs	r0, #6
 8000f08:	f7ff ff86 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000f0c:	2032      	movs	r0, #50	; 0x32
 8000f0e:	f000 fd63 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */
 8000f12:	200c      	movs	r0, #12
 8000f14:	f7ff ff80 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000f18:	2032      	movs	r0, #50	; 0x32
 8000f1a:	f000 fd5d 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 8000f1e:	2002      	movs	r0, #2
 8000f20:	f7ff ff7a 	bl	8000e18 <lcd_send_cmd>
	HAL_Delay(50);
 8000f24:	2032      	movs	r0, #50	; 0x32
 8000f26:	f000 fd57 	bl	80019d8 <HAL_Delay>
	lcd_send_cmd (0x80);
 8000f2a:	2080      	movs	r0, #128	; 0x80
 8000f2c:	f7ff ff74 	bl	8000e18 <lcd_send_cmd>
}
 8000f30:	bf00      	nop
 8000f32:	bd80      	pop	{r7, pc}

08000f34 <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	b082      	sub	sp, #8
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000f3c:	e006      	b.n	8000f4c <lcd_send_string+0x18>
 8000f3e:	687b      	ldr	r3, [r7, #4]
 8000f40:	1c5a      	adds	r2, r3, #1
 8000f42:	607a      	str	r2, [r7, #4]
 8000f44:	781b      	ldrb	r3, [r3, #0]
 8000f46:	4618      	mov	r0, r3
 8000f48:	f7ff ff96 	bl	8000e78 <lcd_send_data>
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	781b      	ldrb	r3, [r3, #0]
 8000f50:	2b00      	cmp	r3, #0
 8000f52:	d1f4      	bne.n	8000f3e <lcd_send_string+0xa>
}
 8000f54:	bf00      	nop
 8000f56:	bf00      	nop
 8000f58:	3708      	adds	r7, #8
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	bd80      	pop	{r7, pc}

08000f5e <lcd_clear_display>:

void lcd_clear_display (void)
{
 8000f5e:	b580      	push	{r7, lr}
 8000f60:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 8000f62:	2001      	movs	r0, #1
 8000f64:	f7ff ff58 	bl	8000e18 <lcd_send_cmd>
}
 8000f68:	bf00      	nop
 8000f6a:	bd80      	pop	{r7, pc}

08000f6c <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	b084      	sub	sp, #16
 8000f70:	af00      	add	r7, sp, #0
 8000f72:	6078      	str	r0, [r7, #4]
 8000f74:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 1)
 8000f76:	687b      	ldr	r3, [r7, #4]
 8000f78:	2b01      	cmp	r3, #1
 8000f7a:	d108      	bne.n	8000f8e <lcd_goto_XY+0x22>
	{
		pos_Addr = 0x80 + row - 1 + col;
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	b2da      	uxtb	r2, r3
 8000f80:	683b      	ldr	r3, [r7, #0]
 8000f82:	b2db      	uxtb	r3, r3
 8000f84:	4413      	add	r3, r2
 8000f86:	b2db      	uxtb	r3, r3
 8000f88:	337f      	adds	r3, #127	; 0x7f
 8000f8a:	73fb      	strb	r3, [r7, #15]
 8000f8c:	e008      	b.n	8000fa0 <lcd_goto_XY+0x34>
	}
	else
	{
		pos_Addr = 0x80 | (0x40 + col);
 8000f8e:	683b      	ldr	r3, [r7, #0]
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	3340      	adds	r3, #64	; 0x40
 8000f94:	b2db      	uxtb	r3, r3
 8000f96:	b25b      	sxtb	r3, r3
 8000f98:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000f9c:	b25b      	sxtb	r3, r3
 8000f9e:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 8000fa0:	7bfb      	ldrb	r3, [r7, #15]
 8000fa2:	4618      	mov	r0, r3
 8000fa4:	f7ff ff38 	bl	8000e18 <lcd_send_cmd>
}
 8000fa8:	bf00      	nop
 8000faa:	3710      	adds	r7, #16
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}

08000fb0 <lcd_display>:

void lcd_display(int row, int col, int value)
{
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	b088      	sub	sp, #32
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	60f8      	str	r0, [r7, #12]
 8000fb8:	60b9      	str	r1, [r7, #8]
 8000fba:	607a      	str	r2, [r7, #4]
	char buffer[12];
	sprintf(buffer, "%-11d", value);
 8000fbc:	f107 0314 	add.w	r3, r7, #20
 8000fc0:	687a      	ldr	r2, [r7, #4]
 8000fc2:	4908      	ldr	r1, [pc, #32]	; (8000fe4 <lcd_display+0x34>)
 8000fc4:	4618      	mov	r0, r3
 8000fc6:	f002 fdbb 	bl	8003b40 <siprintf>
	lcd_goto_XY(row, col);
 8000fca:	68b9      	ldr	r1, [r7, #8]
 8000fcc:	68f8      	ldr	r0, [r7, #12]
 8000fce:	f7ff ffcd 	bl	8000f6c <lcd_goto_XY>
	lcd_send_string(buffer);
 8000fd2:	f107 0314 	add.w	r3, r7, #20
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	f7ff ffac 	bl	8000f34 <lcd_send_string>
}
 8000fdc:	bf00      	nop
 8000fde:	3720      	adds	r7, #32
 8000fe0:	46bd      	mov	sp, r7
 8000fe2:	bd80      	pop	{r7, pc}
 8000fe4:	0800441c 	.word	0x0800441c

08000fe8 <ledReset>:
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	af00      	add	r7, sp, #0
 8000fec:	2200      	movs	r2, #0
 8000fee:	2108      	movs	r1, #8
 8000ff0:	4815      	ldr	r0, [pc, #84]	; (8001048 <ledReset+0x60>)
 8000ff2:	f000 ffbe 	bl	8001f72 <HAL_GPIO_WritePin>
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	2120      	movs	r1, #32
 8000ffa:	4813      	ldr	r0, [pc, #76]	; (8001048 <ledReset+0x60>)
 8000ffc:	f000 ffb9 	bl	8001f72 <HAL_GPIO_WritePin>
 8001000:	2200      	movs	r2, #0
 8001002:	2110      	movs	r1, #16
 8001004:	4810      	ldr	r0, [pc, #64]	; (8001048 <ledReset+0x60>)
 8001006:	f000 ffb4 	bl	8001f72 <HAL_GPIO_WritePin>
 800100a:	2200      	movs	r2, #0
 800100c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001010:	480d      	ldr	r0, [pc, #52]	; (8001048 <ledReset+0x60>)
 8001012:	f000 ffae 	bl	8001f72 <HAL_GPIO_WritePin>
 8001016:	2200      	movs	r2, #0
 8001018:	f44f 7180 	mov.w	r1, #256	; 0x100
 800101c:	480b      	ldr	r0, [pc, #44]	; (800104c <ledReset+0x64>)
 800101e:	f000 ffa8 	bl	8001f72 <HAL_GPIO_WritePin>
 8001022:	2200      	movs	r2, #0
 8001024:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001028:	4808      	ldr	r0, [pc, #32]	; (800104c <ledReset+0x64>)
 800102a:	f000 ffa2 	bl	8001f72 <HAL_GPIO_WritePin>
 800102e:	2200      	movs	r2, #0
 8001030:	2180      	movs	r1, #128	; 0x80
 8001032:	4807      	ldr	r0, [pc, #28]	; (8001050 <ledReset+0x68>)
 8001034:	f000 ff9d 	bl	8001f72 <HAL_GPIO_WritePin>
 8001038:	2200      	movs	r2, #0
 800103a:	2140      	movs	r1, #64	; 0x40
 800103c:	4802      	ldr	r0, [pc, #8]	; (8001048 <ledReset+0x60>)
 800103e:	f000 ff98 	bl	8001f72 <HAL_GPIO_WritePin>
 8001042:	bf00      	nop
 8001044:	bd80      	pop	{r7, pc}
 8001046:	bf00      	nop
 8001048:	40010c00 	.word	0x40010c00
 800104c:	40010800 	.word	0x40010800
 8001050:	40011000 	.word	0x40011000

08001054 <ledRed_Green>:
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
 8001058:	2201      	movs	r2, #1
 800105a:	2108      	movs	r1, #8
 800105c:	4815      	ldr	r0, [pc, #84]	; (80010b4 <ledRed_Green+0x60>)
 800105e:	f000 ff88 	bl	8001f72 <HAL_GPIO_WritePin>
 8001062:	2201      	movs	r2, #1
 8001064:	2120      	movs	r1, #32
 8001066:	4813      	ldr	r0, [pc, #76]	; (80010b4 <ledRed_Green+0x60>)
 8001068:	f000 ff83 	bl	8001f72 <HAL_GPIO_WritePin>
 800106c:	2201      	movs	r2, #1
 800106e:	2110      	movs	r1, #16
 8001070:	4810      	ldr	r0, [pc, #64]	; (80010b4 <ledRed_Green+0x60>)
 8001072:	f000 ff7e 	bl	8001f72 <HAL_GPIO_WritePin>
 8001076:	2201      	movs	r2, #1
 8001078:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800107c:	480d      	ldr	r0, [pc, #52]	; (80010b4 <ledRed_Green+0x60>)
 800107e:	f000 ff78 	bl	8001f72 <HAL_GPIO_WritePin>
 8001082:	2201      	movs	r2, #1
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001088:	480b      	ldr	r0, [pc, #44]	; (80010b8 <ledRed_Green+0x64>)
 800108a:	f000 ff72 	bl	8001f72 <HAL_GPIO_WritePin>
 800108e:	2200      	movs	r2, #0
 8001090:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001094:	4808      	ldr	r0, [pc, #32]	; (80010b8 <ledRed_Green+0x64>)
 8001096:	f000 ff6c 	bl	8001f72 <HAL_GPIO_WritePin>
 800109a:	2201      	movs	r2, #1
 800109c:	2180      	movs	r1, #128	; 0x80
 800109e:	4807      	ldr	r0, [pc, #28]	; (80010bc <ledRed_Green+0x68>)
 80010a0:	f000 ff67 	bl	8001f72 <HAL_GPIO_WritePin>
 80010a4:	2200      	movs	r2, #0
 80010a6:	2140      	movs	r1, #64	; 0x40
 80010a8:	4802      	ldr	r0, [pc, #8]	; (80010b4 <ledRed_Green+0x60>)
 80010aa:	f000 ff62 	bl	8001f72 <HAL_GPIO_WritePin>
 80010ae:	bf00      	nop
 80010b0:	bd80      	pop	{r7, pc}
 80010b2:	bf00      	nop
 80010b4:	40010c00 	.word	0x40010c00
 80010b8:	40010800 	.word	0x40010800
 80010bc:	40011000 	.word	0x40011000

080010c0 <ledRed_Yellow>:
 80010c0:	b580      	push	{r7, lr}
 80010c2:	af00      	add	r7, sp, #0
 80010c4:	2201      	movs	r2, #1
 80010c6:	2108      	movs	r1, #8
 80010c8:	4815      	ldr	r0, [pc, #84]	; (8001120 <ledRed_Yellow+0x60>)
 80010ca:	f000 ff52 	bl	8001f72 <HAL_GPIO_WritePin>
 80010ce:	2201      	movs	r2, #1
 80010d0:	2120      	movs	r1, #32
 80010d2:	4813      	ldr	r0, [pc, #76]	; (8001120 <ledRed_Yellow+0x60>)
 80010d4:	f000 ff4d 	bl	8001f72 <HAL_GPIO_WritePin>
 80010d8:	2201      	movs	r2, #1
 80010da:	2110      	movs	r1, #16
 80010dc:	4810      	ldr	r0, [pc, #64]	; (8001120 <ledRed_Yellow+0x60>)
 80010de:	f000 ff48 	bl	8001f72 <HAL_GPIO_WritePin>
 80010e2:	2201      	movs	r2, #1
 80010e4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80010e8:	480d      	ldr	r0, [pc, #52]	; (8001120 <ledRed_Yellow+0x60>)
 80010ea:	f000 ff42 	bl	8001f72 <HAL_GPIO_WritePin>
 80010ee:	2200      	movs	r2, #0
 80010f0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80010f4:	480b      	ldr	r0, [pc, #44]	; (8001124 <ledRed_Yellow+0x64>)
 80010f6:	f000 ff3c 	bl	8001f72 <HAL_GPIO_WritePin>
 80010fa:	2201      	movs	r2, #1
 80010fc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001100:	4808      	ldr	r0, [pc, #32]	; (8001124 <ledRed_Yellow+0x64>)
 8001102:	f000 ff36 	bl	8001f72 <HAL_GPIO_WritePin>
 8001106:	2200      	movs	r2, #0
 8001108:	2180      	movs	r1, #128	; 0x80
 800110a:	4807      	ldr	r0, [pc, #28]	; (8001128 <ledRed_Yellow+0x68>)
 800110c:	f000 ff31 	bl	8001f72 <HAL_GPIO_WritePin>
 8001110:	2201      	movs	r2, #1
 8001112:	2140      	movs	r1, #64	; 0x40
 8001114:	4802      	ldr	r0, [pc, #8]	; (8001120 <ledRed_Yellow+0x60>)
 8001116:	f000 ff2c 	bl	8001f72 <HAL_GPIO_WritePin>
 800111a:	bf00      	nop
 800111c:	bd80      	pop	{r7, pc}
 800111e:	bf00      	nop
 8001120:	40010c00 	.word	0x40010c00
 8001124:	40010800 	.word	0x40010800
 8001128:	40011000 	.word	0x40011000

0800112c <ledGreen_Red>:
 800112c:	b580      	push	{r7, lr}
 800112e:	af00      	add	r7, sp, #0
 8001130:	2201      	movs	r2, #1
 8001132:	2108      	movs	r1, #8
 8001134:	4815      	ldr	r0, [pc, #84]	; (800118c <ledGreen_Red+0x60>)
 8001136:	f000 ff1c 	bl	8001f72 <HAL_GPIO_WritePin>
 800113a:	2200      	movs	r2, #0
 800113c:	2120      	movs	r1, #32
 800113e:	4813      	ldr	r0, [pc, #76]	; (800118c <ledGreen_Red+0x60>)
 8001140:	f000 ff17 	bl	8001f72 <HAL_GPIO_WritePin>
 8001144:	2201      	movs	r2, #1
 8001146:	2110      	movs	r1, #16
 8001148:	4810      	ldr	r0, [pc, #64]	; (800118c <ledGreen_Red+0x60>)
 800114a:	f000 ff12 	bl	8001f72 <HAL_GPIO_WritePin>
 800114e:	2200      	movs	r2, #0
 8001150:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001154:	480d      	ldr	r0, [pc, #52]	; (800118c <ledGreen_Red+0x60>)
 8001156:	f000 ff0c 	bl	8001f72 <HAL_GPIO_WritePin>
 800115a:	2201      	movs	r2, #1
 800115c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001160:	480b      	ldr	r0, [pc, #44]	; (8001190 <ledGreen_Red+0x64>)
 8001162:	f000 ff06 	bl	8001f72 <HAL_GPIO_WritePin>
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 7100 	mov.w	r1, #512	; 0x200
 800116c:	4808      	ldr	r0, [pc, #32]	; (8001190 <ledGreen_Red+0x64>)
 800116e:	f000 ff00 	bl	8001f72 <HAL_GPIO_WritePin>
 8001172:	2201      	movs	r2, #1
 8001174:	2180      	movs	r1, #128	; 0x80
 8001176:	4807      	ldr	r0, [pc, #28]	; (8001194 <ledGreen_Red+0x68>)
 8001178:	f000 fefb 	bl	8001f72 <HAL_GPIO_WritePin>
 800117c:	2201      	movs	r2, #1
 800117e:	2140      	movs	r1, #64	; 0x40
 8001180:	4802      	ldr	r0, [pc, #8]	; (800118c <ledGreen_Red+0x60>)
 8001182:	f000 fef6 	bl	8001f72 <HAL_GPIO_WritePin>
 8001186:	bf00      	nop
 8001188:	bd80      	pop	{r7, pc}
 800118a:	bf00      	nop
 800118c:	40010c00 	.word	0x40010c00
 8001190:	40010800 	.word	0x40010800
 8001194:	40011000 	.word	0x40011000

08001198 <ledYellow_Red>:
 8001198:	b580      	push	{r7, lr}
 800119a:	af00      	add	r7, sp, #0
 800119c:	2200      	movs	r2, #0
 800119e:	2108      	movs	r1, #8
 80011a0:	4815      	ldr	r0, [pc, #84]	; (80011f8 <ledYellow_Red+0x60>)
 80011a2:	f000 fee6 	bl	8001f72 <HAL_GPIO_WritePin>
 80011a6:	2201      	movs	r2, #1
 80011a8:	2120      	movs	r1, #32
 80011aa:	4813      	ldr	r0, [pc, #76]	; (80011f8 <ledYellow_Red+0x60>)
 80011ac:	f000 fee1 	bl	8001f72 <HAL_GPIO_WritePin>
 80011b0:	2200      	movs	r2, #0
 80011b2:	2110      	movs	r1, #16
 80011b4:	4810      	ldr	r0, [pc, #64]	; (80011f8 <ledYellow_Red+0x60>)
 80011b6:	f000 fedc 	bl	8001f72 <HAL_GPIO_WritePin>
 80011ba:	2201      	movs	r2, #1
 80011bc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80011c0:	480d      	ldr	r0, [pc, #52]	; (80011f8 <ledYellow_Red+0x60>)
 80011c2:	f000 fed6 	bl	8001f72 <HAL_GPIO_WritePin>
 80011c6:	2201      	movs	r2, #1
 80011c8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80011cc:	480b      	ldr	r0, [pc, #44]	; (80011fc <ledYellow_Red+0x64>)
 80011ce:	f000 fed0 	bl	8001f72 <HAL_GPIO_WritePin>
 80011d2:	2201      	movs	r2, #1
 80011d4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80011d8:	4808      	ldr	r0, [pc, #32]	; (80011fc <ledYellow_Red+0x64>)
 80011da:	f000 feca 	bl	8001f72 <HAL_GPIO_WritePin>
 80011de:	2201      	movs	r2, #1
 80011e0:	2180      	movs	r1, #128	; 0x80
 80011e2:	4807      	ldr	r0, [pc, #28]	; (8001200 <ledYellow_Red+0x68>)
 80011e4:	f000 fec5 	bl	8001f72 <HAL_GPIO_WritePin>
 80011e8:	2201      	movs	r2, #1
 80011ea:	2140      	movs	r1, #64	; 0x40
 80011ec:	4802      	ldr	r0, [pc, #8]	; (80011f8 <ledYellow_Red+0x60>)
 80011ee:	f000 fec0 	bl	8001f72 <HAL_GPIO_WritePin>
 80011f2:	bf00      	nop
 80011f4:	bd80      	pop	{r7, pc}
 80011f6:	bf00      	nop
 80011f8:	40010c00 	.word	0x40010c00
 80011fc:	40010800 	.word	0x40010800
 8001200:	40011000 	.word	0x40011000

08001204 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001204:	b580      	push	{r7, lr}
 8001206:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001208:	f000 fb84 	bl	8001914 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800120c:	f000 f816 	bl	800123c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001210:	f000 f8f8 	bl	8001404 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8001214:	f000 f8cc 	bl	80013b0 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8001218:	f000 f850 	bl	80012bc <MX_I2C1_Init>
  MX_TIM2_Init();
 800121c:	f000 f87c 	bl	8001318 <MX_TIM2_Init>
  lcd_init();
 8001220:	f7ff fe5a 	bl	8000ed8 <lcd_init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001224:	4804      	ldr	r0, [pc, #16]	; (8001238 <main+0x34>)
 8001226:	f001 ffd9 	bl	80031dc <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  fsm_auto_run();
 800122a:	f7ff f94d 	bl	80004c8 <fsm_auto_run>
	  fsm_edit();
 800122e:	f7ff fab9 	bl	80007a4 <fsm_edit>
	  fsm_config();
 8001232:	f7ff fdc7 	bl	8000dc4 <fsm_config>
	  fsm_auto_run();
 8001236:	e7f8      	b.n	800122a <main+0x26>
 8001238:	20000150 	.word	0x20000150

0800123c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800123c:	b580      	push	{r7, lr}
 800123e:	b090      	sub	sp, #64	; 0x40
 8001240:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001242:	f107 0318 	add.w	r3, r7, #24
 8001246:	2228      	movs	r2, #40	; 0x28
 8001248:	2100      	movs	r1, #0
 800124a:	4618      	mov	r0, r3
 800124c:	f002 fc70 	bl	8003b30 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001250:	1d3b      	adds	r3, r7, #4
 8001252:	2200      	movs	r2, #0
 8001254:	601a      	str	r2, [r3, #0]
 8001256:	605a      	str	r2, [r3, #4]
 8001258:	609a      	str	r2, [r3, #8]
 800125a:	60da      	str	r2, [r3, #12]
 800125c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800125e:	2302      	movs	r3, #2
 8001260:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001262:	2301      	movs	r3, #1
 8001264:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001266:	2310      	movs	r3, #16
 8001268:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800126a:	2302      	movs	r3, #2
 800126c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800126e:	2300      	movs	r3, #0
 8001270:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 8001272:	2300      	movs	r3, #0
 8001274:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001276:	f107 0318 	add.w	r3, r7, #24
 800127a:	4618      	mov	r0, r3
 800127c:	f001 fb50 	bl	8002920 <HAL_RCC_OscConfig>
 8001280:	4603      	mov	r3, r0
 8001282:	2b00      	cmp	r3, #0
 8001284:	d001      	beq.n	800128a <SystemClock_Config+0x4e>
  {
    Error_Handler();
 8001286:	f000 f96f 	bl	8001568 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800128a:	230f      	movs	r3, #15
 800128c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800128e:	2302      	movs	r3, #2
 8001290:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001292:	2300      	movs	r3, #0
 8001294:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001296:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800129a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800129c:	2300      	movs	r3, #0
 800129e:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80012a0:	1d3b      	adds	r3, r7, #4
 80012a2:	2100      	movs	r1, #0
 80012a4:	4618      	mov	r0, r3
 80012a6:	f001 fdbb 	bl	8002e20 <HAL_RCC_ClockConfig>
 80012aa:	4603      	mov	r3, r0
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d001      	beq.n	80012b4 <SystemClock_Config+0x78>
  {
    Error_Handler();
 80012b0:	f000 f95a 	bl	8001568 <Error_Handler>
  }
}
 80012b4:	bf00      	nop
 80012b6:	3740      	adds	r7, #64	; 0x40
 80012b8:	46bd      	mov	sp, r7
 80012ba:	bd80      	pop	{r7, pc}

080012bc <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80012c0:	4b12      	ldr	r3, [pc, #72]	; (800130c <MX_I2C1_Init+0x50>)
 80012c2:	4a13      	ldr	r2, [pc, #76]	; (8001310 <MX_I2C1_Init+0x54>)
 80012c4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80012c6:	4b11      	ldr	r3, [pc, #68]	; (800130c <MX_I2C1_Init+0x50>)
 80012c8:	4a12      	ldr	r2, [pc, #72]	; (8001314 <MX_I2C1_Init+0x58>)
 80012ca:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012cc:	4b0f      	ldr	r3, [pc, #60]	; (800130c <MX_I2C1_Init+0x50>)
 80012ce:	2200      	movs	r2, #0
 80012d0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80012d2:	4b0e      	ldr	r3, [pc, #56]	; (800130c <MX_I2C1_Init+0x50>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012d8:	4b0c      	ldr	r3, [pc, #48]	; (800130c <MX_I2C1_Init+0x50>)
 80012da:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80012de:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012e0:	4b0a      	ldr	r3, [pc, #40]	; (800130c <MX_I2C1_Init+0x50>)
 80012e2:	2200      	movs	r2, #0
 80012e4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80012e6:	4b09      	ldr	r3, [pc, #36]	; (800130c <MX_I2C1_Init+0x50>)
 80012e8:	2200      	movs	r2, #0
 80012ea:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012ec:	4b07      	ldr	r3, [pc, #28]	; (800130c <MX_I2C1_Init+0x50>)
 80012ee:	2200      	movs	r2, #0
 80012f0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012f2:	4b06      	ldr	r3, [pc, #24]	; (800130c <MX_I2C1_Init+0x50>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80012f8:	4804      	ldr	r0, [pc, #16]	; (800130c <MX_I2C1_Init+0x50>)
 80012fa:	f000 fe75 	bl	8001fe8 <HAL_I2C_Init>
 80012fe:	4603      	mov	r3, r0
 8001300:	2b00      	cmp	r3, #0
 8001302:	d001      	beq.n	8001308 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001304:	f000 f930 	bl	8001568 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001308:	bf00      	nop
 800130a:	bd80      	pop	{r7, pc}
 800130c:	200000fc 	.word	0x200000fc
 8001310:	40005400 	.word	0x40005400
 8001314:	000186a0 	.word	0x000186a0

08001318 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001318:	b580      	push	{r7, lr}
 800131a:	b086      	sub	sp, #24
 800131c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800131e:	f107 0308 	add.w	r3, r7, #8
 8001322:	2200      	movs	r2, #0
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	605a      	str	r2, [r3, #4]
 8001328:	609a      	str	r2, [r3, #8]
 800132a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800132c:	463b      	mov	r3, r7
 800132e:	2200      	movs	r2, #0
 8001330:	601a      	str	r2, [r3, #0]
 8001332:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001334:	4b1d      	ldr	r3, [pc, #116]	; (80013ac <MX_TIM2_Init+0x94>)
 8001336:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800133a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 800133c:	4b1b      	ldr	r3, [pc, #108]	; (80013ac <MX_TIM2_Init+0x94>)
 800133e:	f641 723f 	movw	r2, #7999	; 0x1f3f
 8001342:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001344:	4b19      	ldr	r3, [pc, #100]	; (80013ac <MX_TIM2_Init+0x94>)
 8001346:	2200      	movs	r2, #0
 8001348:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 800134a:	4b18      	ldr	r3, [pc, #96]	; (80013ac <MX_TIM2_Init+0x94>)
 800134c:	2209      	movs	r2, #9
 800134e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001350:	4b16      	ldr	r3, [pc, #88]	; (80013ac <MX_TIM2_Init+0x94>)
 8001352:	2200      	movs	r2, #0
 8001354:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001356:	4b15      	ldr	r3, [pc, #84]	; (80013ac <MX_TIM2_Init+0x94>)
 8001358:	2200      	movs	r2, #0
 800135a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800135c:	4813      	ldr	r0, [pc, #76]	; (80013ac <MX_TIM2_Init+0x94>)
 800135e:	f001 feed 	bl	800313c <HAL_TIM_Base_Init>
 8001362:	4603      	mov	r3, r0
 8001364:	2b00      	cmp	r3, #0
 8001366:	d001      	beq.n	800136c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001368:	f000 f8fe 	bl	8001568 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800136c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001370:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001372:	f107 0308 	add.w	r3, r7, #8
 8001376:	4619      	mov	r1, r3
 8001378:	480c      	ldr	r0, [pc, #48]	; (80013ac <MX_TIM2_Init+0x94>)
 800137a:	f002 f871 	bl	8003460 <HAL_TIM_ConfigClockSource>
 800137e:	4603      	mov	r3, r0
 8001380:	2b00      	cmp	r3, #0
 8001382:	d001      	beq.n	8001388 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001384:	f000 f8f0 	bl	8001568 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001388:	2300      	movs	r3, #0
 800138a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800138c:	2300      	movs	r3, #0
 800138e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001390:	463b      	mov	r3, r7
 8001392:	4619      	mov	r1, r3
 8001394:	4805      	ldr	r0, [pc, #20]	; (80013ac <MX_TIM2_Init+0x94>)
 8001396:	f002 fa53 	bl	8003840 <HAL_TIMEx_MasterConfigSynchronization>
 800139a:	4603      	mov	r3, r0
 800139c:	2b00      	cmp	r3, #0
 800139e:	d001      	beq.n	80013a4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80013a0:	f000 f8e2 	bl	8001568 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80013a4:	bf00      	nop
 80013a6:	3718      	adds	r7, #24
 80013a8:	46bd      	mov	sp, r7
 80013aa:	bd80      	pop	{r7, pc}
 80013ac:	20000150 	.word	0x20000150

080013b0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80013b0:	b580      	push	{r7, lr}
 80013b2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80013b4:	4b11      	ldr	r3, [pc, #68]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013b6:	4a12      	ldr	r2, [pc, #72]	; (8001400 <MX_USART2_UART_Init+0x50>)
 80013b8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80013ba:	4b10      	ldr	r3, [pc, #64]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013bc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80013c0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80013c2:	4b0e      	ldr	r3, [pc, #56]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013c4:	2200      	movs	r2, #0
 80013c6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80013c8:	4b0c      	ldr	r3, [pc, #48]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80013ce:	4b0b      	ldr	r3, [pc, #44]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013d0:	2200      	movs	r2, #0
 80013d2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80013d4:	4b09      	ldr	r3, [pc, #36]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013d6:	220c      	movs	r2, #12
 80013d8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013da:	4b08      	ldr	r3, [pc, #32]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013dc:	2200      	movs	r2, #0
 80013de:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80013e0:	4b06      	ldr	r3, [pc, #24]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013e2:	2200      	movs	r2, #0
 80013e4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80013e6:	4805      	ldr	r0, [pc, #20]	; (80013fc <MX_USART2_UART_Init+0x4c>)
 80013e8:	f002 fa9a 	bl	8003920 <HAL_UART_Init>
 80013ec:	4603      	mov	r3, r0
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d001      	beq.n	80013f6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80013f2:	f000 f8b9 	bl	8001568 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80013f6:	bf00      	nop
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	20000198 	.word	0x20000198
 8001400:	40004400 	.word	0x40004400

08001404 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001404:	b580      	push	{r7, lr}
 8001406:	b088      	sub	sp, #32
 8001408:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800140a:	f107 0310 	add.w	r3, r7, #16
 800140e:	2200      	movs	r2, #0
 8001410:	601a      	str	r2, [r3, #0]
 8001412:	605a      	str	r2, [r3, #4]
 8001414:	609a      	str	r2, [r3, #8]
 8001416:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001418:	4b48      	ldr	r3, [pc, #288]	; (800153c <MX_GPIO_Init+0x138>)
 800141a:	699b      	ldr	r3, [r3, #24]
 800141c:	4a47      	ldr	r2, [pc, #284]	; (800153c <MX_GPIO_Init+0x138>)
 800141e:	f043 0310 	orr.w	r3, r3, #16
 8001422:	6193      	str	r3, [r2, #24]
 8001424:	4b45      	ldr	r3, [pc, #276]	; (800153c <MX_GPIO_Init+0x138>)
 8001426:	699b      	ldr	r3, [r3, #24]
 8001428:	f003 0310 	and.w	r3, r3, #16
 800142c:	60fb      	str	r3, [r7, #12]
 800142e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001430:	4b42      	ldr	r3, [pc, #264]	; (800153c <MX_GPIO_Init+0x138>)
 8001432:	699b      	ldr	r3, [r3, #24]
 8001434:	4a41      	ldr	r2, [pc, #260]	; (800153c <MX_GPIO_Init+0x138>)
 8001436:	f043 0320 	orr.w	r3, r3, #32
 800143a:	6193      	str	r3, [r2, #24]
 800143c:	4b3f      	ldr	r3, [pc, #252]	; (800153c <MX_GPIO_Init+0x138>)
 800143e:	699b      	ldr	r3, [r3, #24]
 8001440:	f003 0320 	and.w	r3, r3, #32
 8001444:	60bb      	str	r3, [r7, #8]
 8001446:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001448:	4b3c      	ldr	r3, [pc, #240]	; (800153c <MX_GPIO_Init+0x138>)
 800144a:	699b      	ldr	r3, [r3, #24]
 800144c:	4a3b      	ldr	r2, [pc, #236]	; (800153c <MX_GPIO_Init+0x138>)
 800144e:	f043 0304 	orr.w	r3, r3, #4
 8001452:	6193      	str	r3, [r2, #24]
 8001454:	4b39      	ldr	r3, [pc, #228]	; (800153c <MX_GPIO_Init+0x138>)
 8001456:	699b      	ldr	r3, [r3, #24]
 8001458:	f003 0304 	and.w	r3, r3, #4
 800145c:	607b      	str	r3, [r7, #4]
 800145e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001460:	4b36      	ldr	r3, [pc, #216]	; (800153c <MX_GPIO_Init+0x138>)
 8001462:	699b      	ldr	r3, [r3, #24]
 8001464:	4a35      	ldr	r2, [pc, #212]	; (800153c <MX_GPIO_Init+0x138>)
 8001466:	f043 0308 	orr.w	r3, r3, #8
 800146a:	6193      	str	r3, [r2, #24]
 800146c:	4b33      	ldr	r3, [pc, #204]	; (800153c <MX_GPIO_Init+0x138>)
 800146e:	699b      	ldr	r3, [r3, #24]
 8001470:	f003 0308 	and.w	r3, r3, #8
 8001474:	603b      	str	r3, [r7, #0]
 8001476:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, A2_Pin|LD2_Pin|D7_Pin|D8_Pin, GPIO_PIN_RESET);
 8001478:	2200      	movs	r2, #0
 800147a:	f44f 714c 	mov.w	r1, #816	; 0x330
 800147e:	4830      	ldr	r0, [pc, #192]	; (8001540 <MX_GPIO_Init+0x13c>)
 8001480:	f000 fd77 	bl	8001f72 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin
 8001484:	2200      	movs	r2, #0
 8001486:	f44f 618f 	mov.w	r1, #1144	; 0x478
 800148a:	482e      	ldr	r0, [pc, #184]	; (8001544 <MX_GPIO_Init+0x140>)
 800148c:	f000 fd71 	bl	8001f72 <HAL_GPIO_WritePin>
                          |D10_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(D9_GPIO_Port, D9_Pin, GPIO_PIN_RESET);
 8001490:	2200      	movs	r2, #0
 8001492:	2180      	movs	r1, #128	; 0x80
 8001494:	482c      	ldr	r0, [pc, #176]	; (8001548 <MX_GPIO_Init+0x144>)
 8001496:	f000 fd6c 	bl	8001f72 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800149a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800149e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014a0:	4b2a      	ldr	r3, [pc, #168]	; (800154c <MX_GPIO_Init+0x148>)
 80014a2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014a4:	2300      	movs	r3, #0
 80014a6:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80014a8:	f107 0310 	add.w	r3, r7, #16
 80014ac:	4619      	mov	r1, r3
 80014ae:	4826      	ldr	r0, [pc, #152]	; (8001548 <MX_GPIO_Init+0x144>)
 80014b0:	f000 fbc4 	bl	8001c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : A0_Pin A1_Pin */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin;
 80014b4:	2303      	movs	r3, #3
 80014b6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80014b8:	2300      	movs	r3, #0
 80014ba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014bc:	2301      	movs	r3, #1
 80014be:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014c0:	f107 0310 	add.w	r3, r7, #16
 80014c4:	4619      	mov	r1, r3
 80014c6:	481e      	ldr	r0, [pc, #120]	; (8001540 <MX_GPIO_Init+0x13c>)
 80014c8:	f000 fbb8 	bl	8001c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : A2_Pin LD2_Pin D7_Pin D8_Pin */
  GPIO_InitStruct.Pin = A2_Pin|LD2_Pin|D7_Pin|D8_Pin;
 80014cc:	f44f 734c 	mov.w	r3, #816	; 0x330
 80014d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014d2:	2301      	movs	r3, #1
 80014d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d6:	2300      	movs	r3, #0
 80014d8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014da:	2302      	movs	r3, #2
 80014dc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014de:	f107 0310 	add.w	r3, r7, #16
 80014e2:	4619      	mov	r1, r3
 80014e4:	4816      	ldr	r0, [pc, #88]	; (8001540 <MX_GPIO_Init+0x13c>)
 80014e6:	f000 fba9 	bl	8001c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin
                           D10_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin
 80014ea:	f44f 638f 	mov.w	r3, #1144	; 0x478
 80014ee:	613b      	str	r3, [r7, #16]
                          |D10_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014f0:	2301      	movs	r3, #1
 80014f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014f4:	2300      	movs	r3, #0
 80014f6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014f8:	2302      	movs	r3, #2
 80014fa:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014fc:	f107 0310 	add.w	r3, r7, #16
 8001500:	4619      	mov	r1, r3
 8001502:	4810      	ldr	r0, [pc, #64]	; (8001544 <MX_GPIO_Init+0x140>)
 8001504:	f000 fb9a 	bl	8001c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : D9_Pin */
  GPIO_InitStruct.Pin = D9_Pin;
 8001508:	2380      	movs	r3, #128	; 0x80
 800150a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800150c:	2301      	movs	r3, #1
 800150e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001510:	2300      	movs	r3, #0
 8001512:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001514:	2302      	movs	r3, #2
 8001516:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(D9_GPIO_Port, &GPIO_InitStruct);
 8001518:	f107 0310 	add.w	r3, r7, #16
 800151c:	4619      	mov	r1, r3
 800151e:	480a      	ldr	r0, [pc, #40]	; (8001548 <MX_GPIO_Init+0x144>)
 8001520:	f000 fb8c 	bl	8001c3c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001524:	2200      	movs	r2, #0
 8001526:	2100      	movs	r1, #0
 8001528:	2028      	movs	r0, #40	; 0x28
 800152a:	f000 fb50 	bl	8001bce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800152e:	2028      	movs	r0, #40	; 0x28
 8001530:	f000 fb69 	bl	8001c06 <HAL_NVIC_EnableIRQ>

}
 8001534:	bf00      	nop
 8001536:	3720      	adds	r7, #32
 8001538:	46bd      	mov	sp, r7
 800153a:	bd80      	pop	{r7, pc}
 800153c:	40021000 	.word	0x40021000
 8001540:	40010800 	.word	0x40010800
 8001544:	40010c00 	.word	0x40010c00
 8001548:	40011000 	.word	0x40011000
 800154c:	10110000 	.word	0x10110000

08001550 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef * htim)
{
 8001550:	b580      	push	{r7, lr}
 8001552:	b082      	sub	sp, #8
 8001554:	af00      	add	r7, sp, #0
 8001556:	6078      	str	r0, [r7, #4]
	timerRun();
 8001558:	f000 f82c 	bl	80015b4 <timerRun>
	getKeyInput();
 800155c:	f7fe fe96 	bl	800028c <getKeyInput>
}
 8001560:	bf00      	nop
 8001562:	3708      	adds	r7, #8
 8001564:	46bd      	mov	sp, r7
 8001566:	bd80      	pop	{r7, pc}

08001568 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001568:	b480      	push	{r7}
 800156a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800156c:	b672      	cpsid	i
}
 800156e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001570:	e7fe      	b.n	8001570 <Error_Handler+0x8>
	...

08001574 <setTimer>:
 8001574:	b480      	push	{r7}
 8001576:	b083      	sub	sp, #12
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	6039      	str	r1, [r7, #0]
 800157e:	4a0a      	ldr	r2, [pc, #40]	; (80015a8 <setTimer+0x34>)
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	2100      	movs	r1, #0
 8001584:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8001588:	683b      	ldr	r3, [r7, #0]
 800158a:	4a08      	ldr	r2, [pc, #32]	; (80015ac <setTimer+0x38>)
 800158c:	fb82 1203 	smull	r1, r2, r2, r3
 8001590:	1092      	asrs	r2, r2, #2
 8001592:	17db      	asrs	r3, r3, #31
 8001594:	1ad2      	subs	r2, r2, r3
 8001596:	4906      	ldr	r1, [pc, #24]	; (80015b0 <setTimer+0x3c>)
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800159e:	bf00      	nop
 80015a0:	370c      	adds	r7, #12
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bc80      	pop	{r7}
 80015a6:	4770      	bx	lr
 80015a8:	20000208 	.word	0x20000208
 80015ac:	66666667 	.word	0x66666667
 80015b0:	200001e0 	.word	0x200001e0

080015b4 <timerRun>:
 80015b4:	b480      	push	{r7}
 80015b6:	b083      	sub	sp, #12
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	2300      	movs	r3, #0
 80015bc:	607b      	str	r3, [r7, #4]
 80015be:	e01c      	b.n	80015fa <timerRun+0x46>
 80015c0:	4a12      	ldr	r2, [pc, #72]	; (800160c <timerRun+0x58>)
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	dd13      	ble.n	80015f4 <timerRun+0x40>
 80015cc:	4a0f      	ldr	r2, [pc, #60]	; (800160c <timerRun+0x58>)
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015d4:	1e5a      	subs	r2, r3, #1
 80015d6:	490d      	ldr	r1, [pc, #52]	; (800160c <timerRun+0x58>)
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015de:	4a0b      	ldr	r2, [pc, #44]	; (800160c <timerRun+0x58>)
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	dc04      	bgt.n	80015f4 <timerRun+0x40>
 80015ea:	4a09      	ldr	r2, [pc, #36]	; (8001610 <timerRun+0x5c>)
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	2101      	movs	r1, #1
 80015f0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80015f4:	687b      	ldr	r3, [r7, #4]
 80015f6:	3301      	adds	r3, #1
 80015f8:	607b      	str	r3, [r7, #4]
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	2b09      	cmp	r3, #9
 80015fe:	dddf      	ble.n	80015c0 <timerRun+0xc>
 8001600:	bf00      	nop
 8001602:	bf00      	nop
 8001604:	370c      	adds	r7, #12
 8001606:	46bd      	mov	sp, r7
 8001608:	bc80      	pop	{r7}
 800160a:	4770      	bx	lr
 800160c:	200001e0 	.word	0x200001e0
 8001610:	20000208 	.word	0x20000208

08001614 <HAL_MspInit>:
 8001614:	b480      	push	{r7}
 8001616:	b085      	sub	sp, #20
 8001618:	af00      	add	r7, sp, #0
 800161a:	4b15      	ldr	r3, [pc, #84]	; (8001670 <HAL_MspInit+0x5c>)
 800161c:	699b      	ldr	r3, [r3, #24]
 800161e:	4a14      	ldr	r2, [pc, #80]	; (8001670 <HAL_MspInit+0x5c>)
 8001620:	f043 0301 	orr.w	r3, r3, #1
 8001624:	6193      	str	r3, [r2, #24]
 8001626:	4b12      	ldr	r3, [pc, #72]	; (8001670 <HAL_MspInit+0x5c>)
 8001628:	699b      	ldr	r3, [r3, #24]
 800162a:	f003 0301 	and.w	r3, r3, #1
 800162e:	60bb      	str	r3, [r7, #8]
 8001630:	68bb      	ldr	r3, [r7, #8]
 8001632:	4b0f      	ldr	r3, [pc, #60]	; (8001670 <HAL_MspInit+0x5c>)
 8001634:	69db      	ldr	r3, [r3, #28]
 8001636:	4a0e      	ldr	r2, [pc, #56]	; (8001670 <HAL_MspInit+0x5c>)
 8001638:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800163c:	61d3      	str	r3, [r2, #28]
 800163e:	4b0c      	ldr	r3, [pc, #48]	; (8001670 <HAL_MspInit+0x5c>)
 8001640:	69db      	ldr	r3, [r3, #28]
 8001642:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001646:	607b      	str	r3, [r7, #4]
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	4b0a      	ldr	r3, [pc, #40]	; (8001674 <HAL_MspInit+0x60>)
 800164c:	685b      	ldr	r3, [r3, #4]
 800164e:	60fb      	str	r3, [r7, #12]
 8001650:	68fb      	ldr	r3, [r7, #12]
 8001652:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001656:	60fb      	str	r3, [r7, #12]
 8001658:	68fb      	ldr	r3, [r7, #12]
 800165a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800165e:	60fb      	str	r3, [r7, #12]
 8001660:	4a04      	ldr	r2, [pc, #16]	; (8001674 <HAL_MspInit+0x60>)
 8001662:	68fb      	ldr	r3, [r7, #12]
 8001664:	6053      	str	r3, [r2, #4]
 8001666:	bf00      	nop
 8001668:	3714      	adds	r7, #20
 800166a:	46bd      	mov	sp, r7
 800166c:	bc80      	pop	{r7}
 800166e:	4770      	bx	lr
 8001670:	40021000 	.word	0x40021000
 8001674:	40010000 	.word	0x40010000

08001678 <HAL_I2C_MspInit>:
 8001678:	b580      	push	{r7, lr}
 800167a:	b08a      	sub	sp, #40	; 0x28
 800167c:	af00      	add	r7, sp, #0
 800167e:	6078      	str	r0, [r7, #4]
 8001680:	f107 0314 	add.w	r3, r7, #20
 8001684:	2200      	movs	r2, #0
 8001686:	601a      	str	r2, [r3, #0]
 8001688:	605a      	str	r2, [r3, #4]
 800168a:	609a      	str	r2, [r3, #8]
 800168c:	60da      	str	r2, [r3, #12]
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4a1d      	ldr	r2, [pc, #116]	; (8001708 <HAL_I2C_MspInit+0x90>)
 8001694:	4293      	cmp	r3, r2
 8001696:	d132      	bne.n	80016fe <HAL_I2C_MspInit+0x86>
 8001698:	4b1c      	ldr	r3, [pc, #112]	; (800170c <HAL_I2C_MspInit+0x94>)
 800169a:	699b      	ldr	r3, [r3, #24]
 800169c:	4a1b      	ldr	r2, [pc, #108]	; (800170c <HAL_I2C_MspInit+0x94>)
 800169e:	f043 0308 	orr.w	r3, r3, #8
 80016a2:	6193      	str	r3, [r2, #24]
 80016a4:	4b19      	ldr	r3, [pc, #100]	; (800170c <HAL_I2C_MspInit+0x94>)
 80016a6:	699b      	ldr	r3, [r3, #24]
 80016a8:	f003 0308 	and.w	r3, r3, #8
 80016ac:	613b      	str	r3, [r7, #16]
 80016ae:	693b      	ldr	r3, [r7, #16]
 80016b0:	f44f 7340 	mov.w	r3, #768	; 0x300
 80016b4:	617b      	str	r3, [r7, #20]
 80016b6:	2312      	movs	r3, #18
 80016b8:	61bb      	str	r3, [r7, #24]
 80016ba:	2303      	movs	r3, #3
 80016bc:	623b      	str	r3, [r7, #32]
 80016be:	f107 0314 	add.w	r3, r7, #20
 80016c2:	4619      	mov	r1, r3
 80016c4:	4812      	ldr	r0, [pc, #72]	; (8001710 <HAL_I2C_MspInit+0x98>)
 80016c6:	f000 fab9 	bl	8001c3c <HAL_GPIO_Init>
 80016ca:	4b12      	ldr	r3, [pc, #72]	; (8001714 <HAL_I2C_MspInit+0x9c>)
 80016cc:	685b      	ldr	r3, [r3, #4]
 80016ce:	627b      	str	r3, [r7, #36]	; 0x24
 80016d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016d2:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 80016d6:	627b      	str	r3, [r7, #36]	; 0x24
 80016d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016da:	f043 0302 	orr.w	r3, r3, #2
 80016de:	627b      	str	r3, [r7, #36]	; 0x24
 80016e0:	4a0c      	ldr	r2, [pc, #48]	; (8001714 <HAL_I2C_MspInit+0x9c>)
 80016e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016e4:	6053      	str	r3, [r2, #4]
 80016e6:	4b09      	ldr	r3, [pc, #36]	; (800170c <HAL_I2C_MspInit+0x94>)
 80016e8:	69db      	ldr	r3, [r3, #28]
 80016ea:	4a08      	ldr	r2, [pc, #32]	; (800170c <HAL_I2C_MspInit+0x94>)
 80016ec:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80016f0:	61d3      	str	r3, [r2, #28]
 80016f2:	4b06      	ldr	r3, [pc, #24]	; (800170c <HAL_I2C_MspInit+0x94>)
 80016f4:	69db      	ldr	r3, [r3, #28]
 80016f6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80016fa:	60fb      	str	r3, [r7, #12]
 80016fc:	68fb      	ldr	r3, [r7, #12]
 80016fe:	bf00      	nop
 8001700:	3728      	adds	r7, #40	; 0x28
 8001702:	46bd      	mov	sp, r7
 8001704:	bd80      	pop	{r7, pc}
 8001706:	bf00      	nop
 8001708:	40005400 	.word	0x40005400
 800170c:	40021000 	.word	0x40021000
 8001710:	40010c00 	.word	0x40010c00
 8001714:	40010000 	.word	0x40010000

08001718 <HAL_TIM_Base_MspInit>:
 8001718:	b580      	push	{r7, lr}
 800171a:	b084      	sub	sp, #16
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001728:	d113      	bne.n	8001752 <HAL_TIM_Base_MspInit+0x3a>
 800172a:	4b0c      	ldr	r3, [pc, #48]	; (800175c <HAL_TIM_Base_MspInit+0x44>)
 800172c:	69db      	ldr	r3, [r3, #28]
 800172e:	4a0b      	ldr	r2, [pc, #44]	; (800175c <HAL_TIM_Base_MspInit+0x44>)
 8001730:	f043 0301 	orr.w	r3, r3, #1
 8001734:	61d3      	str	r3, [r2, #28]
 8001736:	4b09      	ldr	r3, [pc, #36]	; (800175c <HAL_TIM_Base_MspInit+0x44>)
 8001738:	69db      	ldr	r3, [r3, #28]
 800173a:	f003 0301 	and.w	r3, r3, #1
 800173e:	60fb      	str	r3, [r7, #12]
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	2200      	movs	r2, #0
 8001744:	2100      	movs	r1, #0
 8001746:	201c      	movs	r0, #28
 8001748:	f000 fa41 	bl	8001bce <HAL_NVIC_SetPriority>
 800174c:	201c      	movs	r0, #28
 800174e:	f000 fa5a 	bl	8001c06 <HAL_NVIC_EnableIRQ>
 8001752:	bf00      	nop
 8001754:	3710      	adds	r7, #16
 8001756:	46bd      	mov	sp, r7
 8001758:	bd80      	pop	{r7, pc}
 800175a:	bf00      	nop
 800175c:	40021000 	.word	0x40021000

08001760 <HAL_UART_MspInit>:
 8001760:	b580      	push	{r7, lr}
 8001762:	b088      	sub	sp, #32
 8001764:	af00      	add	r7, sp, #0
 8001766:	6078      	str	r0, [r7, #4]
 8001768:	f107 0310 	add.w	r3, r7, #16
 800176c:	2200      	movs	r2, #0
 800176e:	601a      	str	r2, [r3, #0]
 8001770:	605a      	str	r2, [r3, #4]
 8001772:	609a      	str	r2, [r3, #8]
 8001774:	60da      	str	r2, [r3, #12]
 8001776:	687b      	ldr	r3, [r7, #4]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	4a15      	ldr	r2, [pc, #84]	; (80017d0 <HAL_UART_MspInit+0x70>)
 800177c:	4293      	cmp	r3, r2
 800177e:	d123      	bne.n	80017c8 <HAL_UART_MspInit+0x68>
 8001780:	4b14      	ldr	r3, [pc, #80]	; (80017d4 <HAL_UART_MspInit+0x74>)
 8001782:	69db      	ldr	r3, [r3, #28]
 8001784:	4a13      	ldr	r2, [pc, #76]	; (80017d4 <HAL_UART_MspInit+0x74>)
 8001786:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800178a:	61d3      	str	r3, [r2, #28]
 800178c:	4b11      	ldr	r3, [pc, #68]	; (80017d4 <HAL_UART_MspInit+0x74>)
 800178e:	69db      	ldr	r3, [r3, #28]
 8001790:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001794:	60fb      	str	r3, [r7, #12]
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	4b0e      	ldr	r3, [pc, #56]	; (80017d4 <HAL_UART_MspInit+0x74>)
 800179a:	699b      	ldr	r3, [r3, #24]
 800179c:	4a0d      	ldr	r2, [pc, #52]	; (80017d4 <HAL_UART_MspInit+0x74>)
 800179e:	f043 0304 	orr.w	r3, r3, #4
 80017a2:	6193      	str	r3, [r2, #24]
 80017a4:	4b0b      	ldr	r3, [pc, #44]	; (80017d4 <HAL_UART_MspInit+0x74>)
 80017a6:	699b      	ldr	r3, [r3, #24]
 80017a8:	f003 0304 	and.w	r3, r3, #4
 80017ac:	60bb      	str	r3, [r7, #8]
 80017ae:	68bb      	ldr	r3, [r7, #8]
 80017b0:	230c      	movs	r3, #12
 80017b2:	613b      	str	r3, [r7, #16]
 80017b4:	2302      	movs	r3, #2
 80017b6:	617b      	str	r3, [r7, #20]
 80017b8:	2302      	movs	r3, #2
 80017ba:	61fb      	str	r3, [r7, #28]
 80017bc:	f107 0310 	add.w	r3, r7, #16
 80017c0:	4619      	mov	r1, r3
 80017c2:	4805      	ldr	r0, [pc, #20]	; (80017d8 <HAL_UART_MspInit+0x78>)
 80017c4:	f000 fa3a 	bl	8001c3c <HAL_GPIO_Init>
 80017c8:	bf00      	nop
 80017ca:	3720      	adds	r7, #32
 80017cc:	46bd      	mov	sp, r7
 80017ce:	bd80      	pop	{r7, pc}
 80017d0:	40004400 	.word	0x40004400
 80017d4:	40021000 	.word	0x40021000
 80017d8:	40010800 	.word	0x40010800

080017dc <NMI_Handler>:
 80017dc:	b480      	push	{r7}
 80017de:	af00      	add	r7, sp, #0
 80017e0:	e7fe      	b.n	80017e0 <NMI_Handler+0x4>

080017e2 <HardFault_Handler>:
 80017e2:	b480      	push	{r7}
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	e7fe      	b.n	80017e6 <HardFault_Handler+0x4>

080017e8 <MemManage_Handler>:
 80017e8:	b480      	push	{r7}
 80017ea:	af00      	add	r7, sp, #0
 80017ec:	e7fe      	b.n	80017ec <MemManage_Handler+0x4>

080017ee <BusFault_Handler>:
 80017ee:	b480      	push	{r7}
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	e7fe      	b.n	80017f2 <BusFault_Handler+0x4>

080017f4 <UsageFault_Handler>:
 80017f4:	b480      	push	{r7}
 80017f6:	af00      	add	r7, sp, #0
 80017f8:	e7fe      	b.n	80017f8 <UsageFault_Handler+0x4>

080017fa <SVC_Handler>:
 80017fa:	b480      	push	{r7}
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	bf00      	nop
 8001800:	46bd      	mov	sp, r7
 8001802:	bc80      	pop	{r7}
 8001804:	4770      	bx	lr

08001806 <DebugMon_Handler>:
 8001806:	b480      	push	{r7}
 8001808:	af00      	add	r7, sp, #0
 800180a:	bf00      	nop
 800180c:	46bd      	mov	sp, r7
 800180e:	bc80      	pop	{r7}
 8001810:	4770      	bx	lr

08001812 <PendSV_Handler>:
 8001812:	b480      	push	{r7}
 8001814:	af00      	add	r7, sp, #0
 8001816:	bf00      	nop
 8001818:	46bd      	mov	sp, r7
 800181a:	bc80      	pop	{r7}
 800181c:	4770      	bx	lr

0800181e <SysTick_Handler>:
 800181e:	b580      	push	{r7, lr}
 8001820:	af00      	add	r7, sp, #0
 8001822:	f000 f8bd 	bl	80019a0 <HAL_IncTick>
 8001826:	bf00      	nop
 8001828:	bd80      	pop	{r7, pc}
	...

0800182c <TIM2_IRQHandler>:
 800182c:	b580      	push	{r7, lr}
 800182e:	af00      	add	r7, sp, #0
 8001830:	4802      	ldr	r0, [pc, #8]	; (800183c <TIM2_IRQHandler+0x10>)
 8001832:	f001 fd25 	bl	8003280 <HAL_TIM_IRQHandler>
 8001836:	bf00      	nop
 8001838:	bd80      	pop	{r7, pc}
 800183a:	bf00      	nop
 800183c:	20000150 	.word	0x20000150

08001840 <EXTI15_10_IRQHandler>:
 8001840:	b580      	push	{r7, lr}
 8001842:	af00      	add	r7, sp, #0
 8001844:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001848:	f000 fbac 	bl	8001fa4 <HAL_GPIO_EXTI_IRQHandler>
 800184c:	bf00      	nop
 800184e:	bd80      	pop	{r7, pc}

08001850 <_sbrk>:
 8001850:	b580      	push	{r7, lr}
 8001852:	b086      	sub	sp, #24
 8001854:	af00      	add	r7, sp, #0
 8001856:	6078      	str	r0, [r7, #4]
 8001858:	4a14      	ldr	r2, [pc, #80]	; (80018ac <_sbrk+0x5c>)
 800185a:	4b15      	ldr	r3, [pc, #84]	; (80018b0 <_sbrk+0x60>)
 800185c:	1ad3      	subs	r3, r2, r3
 800185e:	617b      	str	r3, [r7, #20]
 8001860:	697b      	ldr	r3, [r7, #20]
 8001862:	613b      	str	r3, [r7, #16]
 8001864:	4b13      	ldr	r3, [pc, #76]	; (80018b4 <_sbrk+0x64>)
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	2b00      	cmp	r3, #0
 800186a:	d102      	bne.n	8001872 <_sbrk+0x22>
 800186c:	4b11      	ldr	r3, [pc, #68]	; (80018b4 <_sbrk+0x64>)
 800186e:	4a12      	ldr	r2, [pc, #72]	; (80018b8 <_sbrk+0x68>)
 8001870:	601a      	str	r2, [r3, #0]
 8001872:	4b10      	ldr	r3, [pc, #64]	; (80018b4 <_sbrk+0x64>)
 8001874:	681a      	ldr	r2, [r3, #0]
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	4413      	add	r3, r2
 800187a:	693a      	ldr	r2, [r7, #16]
 800187c:	429a      	cmp	r2, r3
 800187e:	d207      	bcs.n	8001890 <_sbrk+0x40>
 8001880:	f002 f92c 	bl	8003adc <__errno>
 8001884:	4603      	mov	r3, r0
 8001886:	220c      	movs	r2, #12
 8001888:	601a      	str	r2, [r3, #0]
 800188a:	f04f 33ff 	mov.w	r3, #4294967295
 800188e:	e009      	b.n	80018a4 <_sbrk+0x54>
 8001890:	4b08      	ldr	r3, [pc, #32]	; (80018b4 <_sbrk+0x64>)
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	60fb      	str	r3, [r7, #12]
 8001896:	4b07      	ldr	r3, [pc, #28]	; (80018b4 <_sbrk+0x64>)
 8001898:	681a      	ldr	r2, [r3, #0]
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	4413      	add	r3, r2
 800189e:	4a05      	ldr	r2, [pc, #20]	; (80018b4 <_sbrk+0x64>)
 80018a0:	6013      	str	r3, [r2, #0]
 80018a2:	68fb      	ldr	r3, [r7, #12]
 80018a4:	4618      	mov	r0, r3
 80018a6:	3718      	adds	r7, #24
 80018a8:	46bd      	mov	sp, r7
 80018aa:	bd80      	pop	{r7, pc}
 80018ac:	20005000 	.word	0x20005000
 80018b0:	00000400 	.word	0x00000400
 80018b4:	200000f0 	.word	0x200000f0
 80018b8:	20000248 	.word	0x20000248

080018bc <SystemInit>:
 80018bc:	b480      	push	{r7}
 80018be:	af00      	add	r7, sp, #0
 80018c0:	bf00      	nop
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bc80      	pop	{r7}
 80018c6:	4770      	bx	lr

080018c8 <Reset_Handler>:
 80018c8:	f7ff fff8 	bl	80018bc <SystemInit>
 80018cc:	480b      	ldr	r0, [pc, #44]	; (80018fc <LoopFillZerobss+0xe>)
 80018ce:	490c      	ldr	r1, [pc, #48]	; (8001900 <LoopFillZerobss+0x12>)
 80018d0:	4a0c      	ldr	r2, [pc, #48]	; (8001904 <LoopFillZerobss+0x16>)
 80018d2:	2300      	movs	r3, #0
 80018d4:	e002      	b.n	80018dc <LoopCopyDataInit>

080018d6 <CopyDataInit>:
 80018d6:	58d4      	ldr	r4, [r2, r3]
 80018d8:	50c4      	str	r4, [r0, r3]
 80018da:	3304      	adds	r3, #4

080018dc <LoopCopyDataInit>:
 80018dc:	18c4      	adds	r4, r0, r3
 80018de:	428c      	cmp	r4, r1
 80018e0:	d3f9      	bcc.n	80018d6 <CopyDataInit>
 80018e2:	4a09      	ldr	r2, [pc, #36]	; (8001908 <LoopFillZerobss+0x1a>)
 80018e4:	4c09      	ldr	r4, [pc, #36]	; (800190c <LoopFillZerobss+0x1e>)
 80018e6:	2300      	movs	r3, #0
 80018e8:	e001      	b.n	80018ee <LoopFillZerobss>

080018ea <FillZerobss>:
 80018ea:	6013      	str	r3, [r2, #0]
 80018ec:	3204      	adds	r2, #4

080018ee <LoopFillZerobss>:
 80018ee:	42a2      	cmp	r2, r4
 80018f0:	d3fb      	bcc.n	80018ea <FillZerobss>
 80018f2:	f002 f8f9 	bl	8003ae8 <__libc_init_array>
 80018f6:	f7ff fc85 	bl	8001204 <main>
 80018fa:	4770      	bx	lr
 80018fc:	20000000 	.word	0x20000000
 8001900:	200000b0 	.word	0x200000b0
 8001904:	08004498 	.word	0x08004498
 8001908:	200000b0 	.word	0x200000b0
 800190c:	20000244 	.word	0x20000244

08001910 <ADC1_2_IRQHandler>:
 8001910:	e7fe      	b.n	8001910 <ADC1_2_IRQHandler>
	...

08001914 <HAL_Init>:
 8001914:	b580      	push	{r7, lr}
 8001916:	af00      	add	r7, sp, #0
 8001918:	4b08      	ldr	r3, [pc, #32]	; (800193c <HAL_Init+0x28>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	4a07      	ldr	r2, [pc, #28]	; (800193c <HAL_Init+0x28>)
 800191e:	f043 0310 	orr.w	r3, r3, #16
 8001922:	6013      	str	r3, [r2, #0]
 8001924:	2003      	movs	r0, #3
 8001926:	f000 f947 	bl	8001bb8 <HAL_NVIC_SetPriorityGrouping>
 800192a:	2000      	movs	r0, #0
 800192c:	f000 f808 	bl	8001940 <HAL_InitTick>
 8001930:	f7ff fe70 	bl	8001614 <HAL_MspInit>
 8001934:	2300      	movs	r3, #0
 8001936:	4618      	mov	r0, r3
 8001938:	bd80      	pop	{r7, pc}
 800193a:	bf00      	nop
 800193c:	40022000 	.word	0x40022000

08001940 <HAL_InitTick>:
 8001940:	b580      	push	{r7, lr}
 8001942:	b082      	sub	sp, #8
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	4b12      	ldr	r3, [pc, #72]	; (8001994 <HAL_InitTick+0x54>)
 800194a:	681a      	ldr	r2, [r3, #0]
 800194c:	4b12      	ldr	r3, [pc, #72]	; (8001998 <HAL_InitTick+0x58>)
 800194e:	781b      	ldrb	r3, [r3, #0]
 8001950:	4619      	mov	r1, r3
 8001952:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001956:	fbb3 f3f1 	udiv	r3, r3, r1
 800195a:	fbb2 f3f3 	udiv	r3, r2, r3
 800195e:	4618      	mov	r0, r3
 8001960:	f000 f95f 	bl	8001c22 <HAL_SYSTICK_Config>
 8001964:	4603      	mov	r3, r0
 8001966:	2b00      	cmp	r3, #0
 8001968:	d001      	beq.n	800196e <HAL_InitTick+0x2e>
 800196a:	2301      	movs	r3, #1
 800196c:	e00e      	b.n	800198c <HAL_InitTick+0x4c>
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2b0f      	cmp	r3, #15
 8001972:	d80a      	bhi.n	800198a <HAL_InitTick+0x4a>
 8001974:	2200      	movs	r2, #0
 8001976:	6879      	ldr	r1, [r7, #4]
 8001978:	f04f 30ff 	mov.w	r0, #4294967295
 800197c:	f000 f927 	bl	8001bce <HAL_NVIC_SetPriority>
 8001980:	4a06      	ldr	r2, [pc, #24]	; (800199c <HAL_InitTick+0x5c>)
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	6013      	str	r3, [r2, #0]
 8001986:	2300      	movs	r3, #0
 8001988:	e000      	b.n	800198c <HAL_InitTick+0x4c>
 800198a:	2301      	movs	r3, #1
 800198c:	4618      	mov	r0, r3
 800198e:	3708      	adds	r7, #8
 8001990:	46bd      	mov	sp, r7
 8001992:	bd80      	pop	{r7, pc}
 8001994:	20000040 	.word	0x20000040
 8001998:	20000048 	.word	0x20000048
 800199c:	20000044 	.word	0x20000044

080019a0 <HAL_IncTick>:
 80019a0:	b480      	push	{r7}
 80019a2:	af00      	add	r7, sp, #0
 80019a4:	4b05      	ldr	r3, [pc, #20]	; (80019bc <HAL_IncTick+0x1c>)
 80019a6:	781b      	ldrb	r3, [r3, #0]
 80019a8:	461a      	mov	r2, r3
 80019aa:	4b05      	ldr	r3, [pc, #20]	; (80019c0 <HAL_IncTick+0x20>)
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	4413      	add	r3, r2
 80019b0:	4a03      	ldr	r2, [pc, #12]	; (80019c0 <HAL_IncTick+0x20>)
 80019b2:	6013      	str	r3, [r2, #0]
 80019b4:	bf00      	nop
 80019b6:	46bd      	mov	sp, r7
 80019b8:	bc80      	pop	{r7}
 80019ba:	4770      	bx	lr
 80019bc:	20000048 	.word	0x20000048
 80019c0:	20000230 	.word	0x20000230

080019c4 <HAL_GetTick>:
 80019c4:	b480      	push	{r7}
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	4b02      	ldr	r3, [pc, #8]	; (80019d4 <HAL_GetTick+0x10>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	4618      	mov	r0, r3
 80019ce:	46bd      	mov	sp, r7
 80019d0:	bc80      	pop	{r7}
 80019d2:	4770      	bx	lr
 80019d4:	20000230 	.word	0x20000230

080019d8 <HAL_Delay>:
 80019d8:	b580      	push	{r7, lr}
 80019da:	b084      	sub	sp, #16
 80019dc:	af00      	add	r7, sp, #0
 80019de:	6078      	str	r0, [r7, #4]
 80019e0:	f7ff fff0 	bl	80019c4 <HAL_GetTick>
 80019e4:	60b8      	str	r0, [r7, #8]
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	60fb      	str	r3, [r7, #12]
 80019ea:	68fb      	ldr	r3, [r7, #12]
 80019ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80019f0:	d005      	beq.n	80019fe <HAL_Delay+0x26>
 80019f2:	4b0a      	ldr	r3, [pc, #40]	; (8001a1c <HAL_Delay+0x44>)
 80019f4:	781b      	ldrb	r3, [r3, #0]
 80019f6:	461a      	mov	r2, r3
 80019f8:	68fb      	ldr	r3, [r7, #12]
 80019fa:	4413      	add	r3, r2
 80019fc:	60fb      	str	r3, [r7, #12]
 80019fe:	bf00      	nop
 8001a00:	f7ff ffe0 	bl	80019c4 <HAL_GetTick>
 8001a04:	4602      	mov	r2, r0
 8001a06:	68bb      	ldr	r3, [r7, #8]
 8001a08:	1ad3      	subs	r3, r2, r3
 8001a0a:	68fa      	ldr	r2, [r7, #12]
 8001a0c:	429a      	cmp	r2, r3
 8001a0e:	d8f7      	bhi.n	8001a00 <HAL_Delay+0x28>
 8001a10:	bf00      	nop
 8001a12:	bf00      	nop
 8001a14:	3710      	adds	r7, #16
 8001a16:	46bd      	mov	sp, r7
 8001a18:	bd80      	pop	{r7, pc}
 8001a1a:	bf00      	nop
 8001a1c:	20000048 	.word	0x20000048

08001a20 <__NVIC_SetPriorityGrouping>:
 8001a20:	b480      	push	{r7}
 8001a22:	b085      	sub	sp, #20
 8001a24:	af00      	add	r7, sp, #0
 8001a26:	6078      	str	r0, [r7, #4]
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	f003 0307 	and.w	r3, r3, #7
 8001a2e:	60fb      	str	r3, [r7, #12]
 8001a30:	4b0c      	ldr	r3, [pc, #48]	; (8001a64 <__NVIC_SetPriorityGrouping+0x44>)
 8001a32:	68db      	ldr	r3, [r3, #12]
 8001a34:	60bb      	str	r3, [r7, #8]
 8001a36:	68ba      	ldr	r2, [r7, #8]
 8001a38:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001a3c:	4013      	ands	r3, r2
 8001a3e:	60bb      	str	r3, [r7, #8]
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	021a      	lsls	r2, r3, #8
 8001a44:	68bb      	ldr	r3, [r7, #8]
 8001a46:	4313      	orrs	r3, r2
 8001a48:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001a4c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a50:	60bb      	str	r3, [r7, #8]
 8001a52:	4a04      	ldr	r2, [pc, #16]	; (8001a64 <__NVIC_SetPriorityGrouping+0x44>)
 8001a54:	68bb      	ldr	r3, [r7, #8]
 8001a56:	60d3      	str	r3, [r2, #12]
 8001a58:	bf00      	nop
 8001a5a:	3714      	adds	r7, #20
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	bc80      	pop	{r7}
 8001a60:	4770      	bx	lr
 8001a62:	bf00      	nop
 8001a64:	e000ed00 	.word	0xe000ed00

08001a68 <__NVIC_GetPriorityGrouping>:
 8001a68:	b480      	push	{r7}
 8001a6a:	af00      	add	r7, sp, #0
 8001a6c:	4b04      	ldr	r3, [pc, #16]	; (8001a80 <__NVIC_GetPriorityGrouping+0x18>)
 8001a6e:	68db      	ldr	r3, [r3, #12]
 8001a70:	0a1b      	lsrs	r3, r3, #8
 8001a72:	f003 0307 	and.w	r3, r3, #7
 8001a76:	4618      	mov	r0, r3
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bc80      	pop	{r7}
 8001a7c:	4770      	bx	lr
 8001a7e:	bf00      	nop
 8001a80:	e000ed00 	.word	0xe000ed00

08001a84 <__NVIC_EnableIRQ>:
 8001a84:	b480      	push	{r7}
 8001a86:	b083      	sub	sp, #12
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	4603      	mov	r3, r0
 8001a8c:	71fb      	strb	r3, [r7, #7]
 8001a8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	db0b      	blt.n	8001aae <__NVIC_EnableIRQ+0x2a>
 8001a96:	79fb      	ldrb	r3, [r7, #7]
 8001a98:	f003 021f 	and.w	r2, r3, #31
 8001a9c:	4906      	ldr	r1, [pc, #24]	; (8001ab8 <__NVIC_EnableIRQ+0x34>)
 8001a9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001aa2:	095b      	lsrs	r3, r3, #5
 8001aa4:	2001      	movs	r0, #1
 8001aa6:	fa00 f202 	lsl.w	r2, r0, r2
 8001aaa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001aae:	bf00      	nop
 8001ab0:	370c      	adds	r7, #12
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	bc80      	pop	{r7}
 8001ab6:	4770      	bx	lr
 8001ab8:	e000e100 	.word	0xe000e100

08001abc <__NVIC_SetPriority>:
 8001abc:	b480      	push	{r7}
 8001abe:	b083      	sub	sp, #12
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	4603      	mov	r3, r0
 8001ac4:	6039      	str	r1, [r7, #0]
 8001ac6:	71fb      	strb	r3, [r7, #7]
 8001ac8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001acc:	2b00      	cmp	r3, #0
 8001ace:	db0a      	blt.n	8001ae6 <__NVIC_SetPriority+0x2a>
 8001ad0:	683b      	ldr	r3, [r7, #0]
 8001ad2:	b2da      	uxtb	r2, r3
 8001ad4:	490c      	ldr	r1, [pc, #48]	; (8001b08 <__NVIC_SetPriority+0x4c>)
 8001ad6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ada:	0112      	lsls	r2, r2, #4
 8001adc:	b2d2      	uxtb	r2, r2
 8001ade:	440b      	add	r3, r1
 8001ae0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001ae4:	e00a      	b.n	8001afc <__NVIC_SetPriority+0x40>
 8001ae6:	683b      	ldr	r3, [r7, #0]
 8001ae8:	b2da      	uxtb	r2, r3
 8001aea:	4908      	ldr	r1, [pc, #32]	; (8001b0c <__NVIC_SetPriority+0x50>)
 8001aec:	79fb      	ldrb	r3, [r7, #7]
 8001aee:	f003 030f 	and.w	r3, r3, #15
 8001af2:	3b04      	subs	r3, #4
 8001af4:	0112      	lsls	r2, r2, #4
 8001af6:	b2d2      	uxtb	r2, r2
 8001af8:	440b      	add	r3, r1
 8001afa:	761a      	strb	r2, [r3, #24]
 8001afc:	bf00      	nop
 8001afe:	370c      	adds	r7, #12
 8001b00:	46bd      	mov	sp, r7
 8001b02:	bc80      	pop	{r7}
 8001b04:	4770      	bx	lr
 8001b06:	bf00      	nop
 8001b08:	e000e100 	.word	0xe000e100
 8001b0c:	e000ed00 	.word	0xe000ed00

08001b10 <NVIC_EncodePriority>:
 8001b10:	b480      	push	{r7}
 8001b12:	b089      	sub	sp, #36	; 0x24
 8001b14:	af00      	add	r7, sp, #0
 8001b16:	60f8      	str	r0, [r7, #12]
 8001b18:	60b9      	str	r1, [r7, #8]
 8001b1a:	607a      	str	r2, [r7, #4]
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	f003 0307 	and.w	r3, r3, #7
 8001b22:	61fb      	str	r3, [r7, #28]
 8001b24:	69fb      	ldr	r3, [r7, #28]
 8001b26:	f1c3 0307 	rsb	r3, r3, #7
 8001b2a:	2b04      	cmp	r3, #4
 8001b2c:	bf28      	it	cs
 8001b2e:	2304      	movcs	r3, #4
 8001b30:	61bb      	str	r3, [r7, #24]
 8001b32:	69fb      	ldr	r3, [r7, #28]
 8001b34:	3304      	adds	r3, #4
 8001b36:	2b06      	cmp	r3, #6
 8001b38:	d902      	bls.n	8001b40 <NVIC_EncodePriority+0x30>
 8001b3a:	69fb      	ldr	r3, [r7, #28]
 8001b3c:	3b03      	subs	r3, #3
 8001b3e:	e000      	b.n	8001b42 <NVIC_EncodePriority+0x32>
 8001b40:	2300      	movs	r3, #0
 8001b42:	617b      	str	r3, [r7, #20]
 8001b44:	f04f 32ff 	mov.w	r2, #4294967295
 8001b48:	69bb      	ldr	r3, [r7, #24]
 8001b4a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b4e:	43da      	mvns	r2, r3
 8001b50:	68bb      	ldr	r3, [r7, #8]
 8001b52:	401a      	ands	r2, r3
 8001b54:	697b      	ldr	r3, [r7, #20]
 8001b56:	409a      	lsls	r2, r3
 8001b58:	f04f 31ff 	mov.w	r1, #4294967295
 8001b5c:	697b      	ldr	r3, [r7, #20]
 8001b5e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b62:	43d9      	mvns	r1, r3
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	400b      	ands	r3, r1
 8001b68:	4313      	orrs	r3, r2
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	3724      	adds	r7, #36	; 0x24
 8001b6e:	46bd      	mov	sp, r7
 8001b70:	bc80      	pop	{r7}
 8001b72:	4770      	bx	lr

08001b74 <SysTick_Config>:
 8001b74:	b580      	push	{r7, lr}
 8001b76:	b082      	sub	sp, #8
 8001b78:	af00      	add	r7, sp, #0
 8001b7a:	6078      	str	r0, [r7, #4]
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	3b01      	subs	r3, #1
 8001b80:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001b84:	d301      	bcc.n	8001b8a <SysTick_Config+0x16>
 8001b86:	2301      	movs	r3, #1
 8001b88:	e00f      	b.n	8001baa <SysTick_Config+0x36>
 8001b8a:	4a0a      	ldr	r2, [pc, #40]	; (8001bb4 <SysTick_Config+0x40>)
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	3b01      	subs	r3, #1
 8001b90:	6053      	str	r3, [r2, #4]
 8001b92:	210f      	movs	r1, #15
 8001b94:	f04f 30ff 	mov.w	r0, #4294967295
 8001b98:	f7ff ff90 	bl	8001abc <__NVIC_SetPriority>
 8001b9c:	4b05      	ldr	r3, [pc, #20]	; (8001bb4 <SysTick_Config+0x40>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	609a      	str	r2, [r3, #8]
 8001ba2:	4b04      	ldr	r3, [pc, #16]	; (8001bb4 <SysTick_Config+0x40>)
 8001ba4:	2207      	movs	r2, #7
 8001ba6:	601a      	str	r2, [r3, #0]
 8001ba8:	2300      	movs	r3, #0
 8001baa:	4618      	mov	r0, r3
 8001bac:	3708      	adds	r7, #8
 8001bae:	46bd      	mov	sp, r7
 8001bb0:	bd80      	pop	{r7, pc}
 8001bb2:	bf00      	nop
 8001bb4:	e000e010 	.word	0xe000e010

08001bb8 <HAL_NVIC_SetPriorityGrouping>:
 8001bb8:	b580      	push	{r7, lr}
 8001bba:	b082      	sub	sp, #8
 8001bbc:	af00      	add	r7, sp, #0
 8001bbe:	6078      	str	r0, [r7, #4]
 8001bc0:	6878      	ldr	r0, [r7, #4]
 8001bc2:	f7ff ff2d 	bl	8001a20 <__NVIC_SetPriorityGrouping>
 8001bc6:	bf00      	nop
 8001bc8:	3708      	adds	r7, #8
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bd80      	pop	{r7, pc}

08001bce <HAL_NVIC_SetPriority>:
 8001bce:	b580      	push	{r7, lr}
 8001bd0:	b086      	sub	sp, #24
 8001bd2:	af00      	add	r7, sp, #0
 8001bd4:	4603      	mov	r3, r0
 8001bd6:	60b9      	str	r1, [r7, #8]
 8001bd8:	607a      	str	r2, [r7, #4]
 8001bda:	73fb      	strb	r3, [r7, #15]
 8001bdc:	2300      	movs	r3, #0
 8001bde:	617b      	str	r3, [r7, #20]
 8001be0:	f7ff ff42 	bl	8001a68 <__NVIC_GetPriorityGrouping>
 8001be4:	6178      	str	r0, [r7, #20]
 8001be6:	687a      	ldr	r2, [r7, #4]
 8001be8:	68b9      	ldr	r1, [r7, #8]
 8001bea:	6978      	ldr	r0, [r7, #20]
 8001bec:	f7ff ff90 	bl	8001b10 <NVIC_EncodePriority>
 8001bf0:	4602      	mov	r2, r0
 8001bf2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bf6:	4611      	mov	r1, r2
 8001bf8:	4618      	mov	r0, r3
 8001bfa:	f7ff ff5f 	bl	8001abc <__NVIC_SetPriority>
 8001bfe:	bf00      	nop
 8001c00:	3718      	adds	r7, #24
 8001c02:	46bd      	mov	sp, r7
 8001c04:	bd80      	pop	{r7, pc}

08001c06 <HAL_NVIC_EnableIRQ>:
 8001c06:	b580      	push	{r7, lr}
 8001c08:	b082      	sub	sp, #8
 8001c0a:	af00      	add	r7, sp, #0
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	71fb      	strb	r3, [r7, #7]
 8001c10:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c14:	4618      	mov	r0, r3
 8001c16:	f7ff ff35 	bl	8001a84 <__NVIC_EnableIRQ>
 8001c1a:	bf00      	nop
 8001c1c:	3708      	adds	r7, #8
 8001c1e:	46bd      	mov	sp, r7
 8001c20:	bd80      	pop	{r7, pc}

08001c22 <HAL_SYSTICK_Config>:
 8001c22:	b580      	push	{r7, lr}
 8001c24:	b082      	sub	sp, #8
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	6078      	str	r0, [r7, #4]
 8001c2a:	6878      	ldr	r0, [r7, #4]
 8001c2c:	f7ff ffa2 	bl	8001b74 <SysTick_Config>
 8001c30:	4603      	mov	r3, r0
 8001c32:	4618      	mov	r0, r3
 8001c34:	3708      	adds	r7, #8
 8001c36:	46bd      	mov	sp, r7
 8001c38:	bd80      	pop	{r7, pc}
	...

08001c3c <HAL_GPIO_Init>:
 8001c3c:	b480      	push	{r7}
 8001c3e:	b08b      	sub	sp, #44	; 0x2c
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	6039      	str	r1, [r7, #0]
 8001c46:	2300      	movs	r3, #0
 8001c48:	627b      	str	r3, [r7, #36]	; 0x24
 8001c4a:	2300      	movs	r3, #0
 8001c4c:	623b      	str	r3, [r7, #32]
 8001c4e:	e169      	b.n	8001f24 <HAL_GPIO_Init+0x2e8>
 8001c50:	2201      	movs	r2, #1
 8001c52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c54:	fa02 f303 	lsl.w	r3, r2, r3
 8001c58:	61fb      	str	r3, [r7, #28]
 8001c5a:	683b      	ldr	r3, [r7, #0]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	69fa      	ldr	r2, [r7, #28]
 8001c60:	4013      	ands	r3, r2
 8001c62:	61bb      	str	r3, [r7, #24]
 8001c64:	69ba      	ldr	r2, [r7, #24]
 8001c66:	69fb      	ldr	r3, [r7, #28]
 8001c68:	429a      	cmp	r2, r3
 8001c6a:	f040 8158 	bne.w	8001f1e <HAL_GPIO_Init+0x2e2>
 8001c6e:	683b      	ldr	r3, [r7, #0]
 8001c70:	685b      	ldr	r3, [r3, #4]
 8001c72:	4a9a      	ldr	r2, [pc, #616]	; (8001edc <HAL_GPIO_Init+0x2a0>)
 8001c74:	4293      	cmp	r3, r2
 8001c76:	d05e      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001c78:	4a98      	ldr	r2, [pc, #608]	; (8001edc <HAL_GPIO_Init+0x2a0>)
 8001c7a:	4293      	cmp	r3, r2
 8001c7c:	d875      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001c7e:	4a98      	ldr	r2, [pc, #608]	; (8001ee0 <HAL_GPIO_Init+0x2a4>)
 8001c80:	4293      	cmp	r3, r2
 8001c82:	d058      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001c84:	4a96      	ldr	r2, [pc, #600]	; (8001ee0 <HAL_GPIO_Init+0x2a4>)
 8001c86:	4293      	cmp	r3, r2
 8001c88:	d86f      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001c8a:	4a96      	ldr	r2, [pc, #600]	; (8001ee4 <HAL_GPIO_Init+0x2a8>)
 8001c8c:	4293      	cmp	r3, r2
 8001c8e:	d052      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001c90:	4a94      	ldr	r2, [pc, #592]	; (8001ee4 <HAL_GPIO_Init+0x2a8>)
 8001c92:	4293      	cmp	r3, r2
 8001c94:	d869      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001c96:	4a94      	ldr	r2, [pc, #592]	; (8001ee8 <HAL_GPIO_Init+0x2ac>)
 8001c98:	4293      	cmp	r3, r2
 8001c9a:	d04c      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001c9c:	4a92      	ldr	r2, [pc, #584]	; (8001ee8 <HAL_GPIO_Init+0x2ac>)
 8001c9e:	4293      	cmp	r3, r2
 8001ca0:	d863      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001ca2:	4a92      	ldr	r2, [pc, #584]	; (8001eec <HAL_GPIO_Init+0x2b0>)
 8001ca4:	4293      	cmp	r3, r2
 8001ca6:	d046      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001ca8:	4a90      	ldr	r2, [pc, #576]	; (8001eec <HAL_GPIO_Init+0x2b0>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d85d      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001cae:	2b12      	cmp	r3, #18
 8001cb0:	d82a      	bhi.n	8001d08 <HAL_GPIO_Init+0xcc>
 8001cb2:	2b12      	cmp	r3, #18
 8001cb4:	d859      	bhi.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001cb6:	a201      	add	r2, pc, #4	; (adr r2, 8001cbc <HAL_GPIO_Init+0x80>)
 8001cb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cbc:	08001d37 	.word	0x08001d37
 8001cc0:	08001d11 	.word	0x08001d11
 8001cc4:	08001d23 	.word	0x08001d23
 8001cc8:	08001d65 	.word	0x08001d65
 8001ccc:	08001d6b 	.word	0x08001d6b
 8001cd0:	08001d6b 	.word	0x08001d6b
 8001cd4:	08001d6b 	.word	0x08001d6b
 8001cd8:	08001d6b 	.word	0x08001d6b
 8001cdc:	08001d6b 	.word	0x08001d6b
 8001ce0:	08001d6b 	.word	0x08001d6b
 8001ce4:	08001d6b 	.word	0x08001d6b
 8001ce8:	08001d6b 	.word	0x08001d6b
 8001cec:	08001d6b 	.word	0x08001d6b
 8001cf0:	08001d6b 	.word	0x08001d6b
 8001cf4:	08001d6b 	.word	0x08001d6b
 8001cf8:	08001d6b 	.word	0x08001d6b
 8001cfc:	08001d6b 	.word	0x08001d6b
 8001d00:	08001d19 	.word	0x08001d19
 8001d04:	08001d2d 	.word	0x08001d2d
 8001d08:	4a79      	ldr	r2, [pc, #484]	; (8001ef0 <HAL_GPIO_Init+0x2b4>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d013      	beq.n	8001d36 <HAL_GPIO_Init+0xfa>
 8001d0e:	e02c      	b.n	8001d6a <HAL_GPIO_Init+0x12e>
 8001d10:	683b      	ldr	r3, [r7, #0]
 8001d12:	68db      	ldr	r3, [r3, #12]
 8001d14:	623b      	str	r3, [r7, #32]
 8001d16:	e029      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d18:	683b      	ldr	r3, [r7, #0]
 8001d1a:	68db      	ldr	r3, [r3, #12]
 8001d1c:	3304      	adds	r3, #4
 8001d1e:	623b      	str	r3, [r7, #32]
 8001d20:	e024      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d22:	683b      	ldr	r3, [r7, #0]
 8001d24:	68db      	ldr	r3, [r3, #12]
 8001d26:	3308      	adds	r3, #8
 8001d28:	623b      	str	r3, [r7, #32]
 8001d2a:	e01f      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d2c:	683b      	ldr	r3, [r7, #0]
 8001d2e:	68db      	ldr	r3, [r3, #12]
 8001d30:	330c      	adds	r3, #12
 8001d32:	623b      	str	r3, [r7, #32]
 8001d34:	e01a      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d36:	683b      	ldr	r3, [r7, #0]
 8001d38:	689b      	ldr	r3, [r3, #8]
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d102      	bne.n	8001d44 <HAL_GPIO_Init+0x108>
 8001d3e:	2304      	movs	r3, #4
 8001d40:	623b      	str	r3, [r7, #32]
 8001d42:	e013      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d44:	683b      	ldr	r3, [r7, #0]
 8001d46:	689b      	ldr	r3, [r3, #8]
 8001d48:	2b01      	cmp	r3, #1
 8001d4a:	d105      	bne.n	8001d58 <HAL_GPIO_Init+0x11c>
 8001d4c:	2308      	movs	r3, #8
 8001d4e:	623b      	str	r3, [r7, #32]
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	69fa      	ldr	r2, [r7, #28]
 8001d54:	611a      	str	r2, [r3, #16]
 8001d56:	e009      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d58:	2308      	movs	r3, #8
 8001d5a:	623b      	str	r3, [r7, #32]
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	69fa      	ldr	r2, [r7, #28]
 8001d60:	615a      	str	r2, [r3, #20]
 8001d62:	e003      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d64:	2300      	movs	r3, #0
 8001d66:	623b      	str	r3, [r7, #32]
 8001d68:	e000      	b.n	8001d6c <HAL_GPIO_Init+0x130>
 8001d6a:	bf00      	nop
 8001d6c:	69bb      	ldr	r3, [r7, #24]
 8001d6e:	2bff      	cmp	r3, #255	; 0xff
 8001d70:	d801      	bhi.n	8001d76 <HAL_GPIO_Init+0x13a>
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	e001      	b.n	8001d7a <HAL_GPIO_Init+0x13e>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	3304      	adds	r3, #4
 8001d7a:	617b      	str	r3, [r7, #20]
 8001d7c:	69bb      	ldr	r3, [r7, #24]
 8001d7e:	2bff      	cmp	r3, #255	; 0xff
 8001d80:	d802      	bhi.n	8001d88 <HAL_GPIO_Init+0x14c>
 8001d82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d84:	009b      	lsls	r3, r3, #2
 8001d86:	e002      	b.n	8001d8e <HAL_GPIO_Init+0x152>
 8001d88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d8a:	3b08      	subs	r3, #8
 8001d8c:	009b      	lsls	r3, r3, #2
 8001d8e:	613b      	str	r3, [r7, #16]
 8001d90:	697b      	ldr	r3, [r7, #20]
 8001d92:	681a      	ldr	r2, [r3, #0]
 8001d94:	210f      	movs	r1, #15
 8001d96:	693b      	ldr	r3, [r7, #16]
 8001d98:	fa01 f303 	lsl.w	r3, r1, r3
 8001d9c:	43db      	mvns	r3, r3
 8001d9e:	401a      	ands	r2, r3
 8001da0:	6a39      	ldr	r1, [r7, #32]
 8001da2:	693b      	ldr	r3, [r7, #16]
 8001da4:	fa01 f303 	lsl.w	r3, r1, r3
 8001da8:	431a      	orrs	r2, r3
 8001daa:	697b      	ldr	r3, [r7, #20]
 8001dac:	601a      	str	r2, [r3, #0]
 8001dae:	683b      	ldr	r3, [r7, #0]
 8001db0:	685b      	ldr	r3, [r3, #4]
 8001db2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	f000 80b1 	beq.w	8001f1e <HAL_GPIO_Init+0x2e2>
 8001dbc:	4b4d      	ldr	r3, [pc, #308]	; (8001ef4 <HAL_GPIO_Init+0x2b8>)
 8001dbe:	699b      	ldr	r3, [r3, #24]
 8001dc0:	4a4c      	ldr	r2, [pc, #304]	; (8001ef4 <HAL_GPIO_Init+0x2b8>)
 8001dc2:	f043 0301 	orr.w	r3, r3, #1
 8001dc6:	6193      	str	r3, [r2, #24]
 8001dc8:	4b4a      	ldr	r3, [pc, #296]	; (8001ef4 <HAL_GPIO_Init+0x2b8>)
 8001dca:	699b      	ldr	r3, [r3, #24]
 8001dcc:	f003 0301 	and.w	r3, r3, #1
 8001dd0:	60bb      	str	r3, [r7, #8]
 8001dd2:	68bb      	ldr	r3, [r7, #8]
 8001dd4:	4a48      	ldr	r2, [pc, #288]	; (8001ef8 <HAL_GPIO_Init+0x2bc>)
 8001dd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dd8:	089b      	lsrs	r3, r3, #2
 8001dda:	3302      	adds	r3, #2
 8001ddc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001de0:	60fb      	str	r3, [r7, #12]
 8001de2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001de4:	f003 0303 	and.w	r3, r3, #3
 8001de8:	009b      	lsls	r3, r3, #2
 8001dea:	220f      	movs	r2, #15
 8001dec:	fa02 f303 	lsl.w	r3, r2, r3
 8001df0:	43db      	mvns	r3, r3
 8001df2:	68fa      	ldr	r2, [r7, #12]
 8001df4:	4013      	ands	r3, r2
 8001df6:	60fb      	str	r3, [r7, #12]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	4a40      	ldr	r2, [pc, #256]	; (8001efc <HAL_GPIO_Init+0x2c0>)
 8001dfc:	4293      	cmp	r3, r2
 8001dfe:	d013      	beq.n	8001e28 <HAL_GPIO_Init+0x1ec>
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	4a3f      	ldr	r2, [pc, #252]	; (8001f00 <HAL_GPIO_Init+0x2c4>)
 8001e04:	4293      	cmp	r3, r2
 8001e06:	d00d      	beq.n	8001e24 <HAL_GPIO_Init+0x1e8>
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	4a3e      	ldr	r2, [pc, #248]	; (8001f04 <HAL_GPIO_Init+0x2c8>)
 8001e0c:	4293      	cmp	r3, r2
 8001e0e:	d007      	beq.n	8001e20 <HAL_GPIO_Init+0x1e4>
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	4a3d      	ldr	r2, [pc, #244]	; (8001f08 <HAL_GPIO_Init+0x2cc>)
 8001e14:	4293      	cmp	r3, r2
 8001e16:	d101      	bne.n	8001e1c <HAL_GPIO_Init+0x1e0>
 8001e18:	2303      	movs	r3, #3
 8001e1a:	e006      	b.n	8001e2a <HAL_GPIO_Init+0x1ee>
 8001e1c:	2304      	movs	r3, #4
 8001e1e:	e004      	b.n	8001e2a <HAL_GPIO_Init+0x1ee>
 8001e20:	2302      	movs	r3, #2
 8001e22:	e002      	b.n	8001e2a <HAL_GPIO_Init+0x1ee>
 8001e24:	2301      	movs	r3, #1
 8001e26:	e000      	b.n	8001e2a <HAL_GPIO_Init+0x1ee>
 8001e28:	2300      	movs	r3, #0
 8001e2a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001e2c:	f002 0203 	and.w	r2, r2, #3
 8001e30:	0092      	lsls	r2, r2, #2
 8001e32:	4093      	lsls	r3, r2
 8001e34:	68fa      	ldr	r2, [r7, #12]
 8001e36:	4313      	orrs	r3, r2
 8001e38:	60fb      	str	r3, [r7, #12]
 8001e3a:	492f      	ldr	r1, [pc, #188]	; (8001ef8 <HAL_GPIO_Init+0x2bc>)
 8001e3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e3e:	089b      	lsrs	r3, r3, #2
 8001e40:	3302      	adds	r3, #2
 8001e42:	68fa      	ldr	r2, [r7, #12]
 8001e44:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001e48:	683b      	ldr	r3, [r7, #0]
 8001e4a:	685b      	ldr	r3, [r3, #4]
 8001e4c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001e50:	2b00      	cmp	r3, #0
 8001e52:	d006      	beq.n	8001e62 <HAL_GPIO_Init+0x226>
 8001e54:	4b2d      	ldr	r3, [pc, #180]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e56:	689a      	ldr	r2, [r3, #8]
 8001e58:	492c      	ldr	r1, [pc, #176]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e5a:	69bb      	ldr	r3, [r7, #24]
 8001e5c:	4313      	orrs	r3, r2
 8001e5e:	608b      	str	r3, [r1, #8]
 8001e60:	e006      	b.n	8001e70 <HAL_GPIO_Init+0x234>
 8001e62:	4b2a      	ldr	r3, [pc, #168]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e64:	689a      	ldr	r2, [r3, #8]
 8001e66:	69bb      	ldr	r3, [r7, #24]
 8001e68:	43db      	mvns	r3, r3
 8001e6a:	4928      	ldr	r1, [pc, #160]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e6c:	4013      	ands	r3, r2
 8001e6e:	608b      	str	r3, [r1, #8]
 8001e70:	683b      	ldr	r3, [r7, #0]
 8001e72:	685b      	ldr	r3, [r3, #4]
 8001e74:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e78:	2b00      	cmp	r3, #0
 8001e7a:	d006      	beq.n	8001e8a <HAL_GPIO_Init+0x24e>
 8001e7c:	4b23      	ldr	r3, [pc, #140]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e7e:	68da      	ldr	r2, [r3, #12]
 8001e80:	4922      	ldr	r1, [pc, #136]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e82:	69bb      	ldr	r3, [r7, #24]
 8001e84:	4313      	orrs	r3, r2
 8001e86:	60cb      	str	r3, [r1, #12]
 8001e88:	e006      	b.n	8001e98 <HAL_GPIO_Init+0x25c>
 8001e8a:	4b20      	ldr	r3, [pc, #128]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e8c:	68da      	ldr	r2, [r3, #12]
 8001e8e:	69bb      	ldr	r3, [r7, #24]
 8001e90:	43db      	mvns	r3, r3
 8001e92:	491e      	ldr	r1, [pc, #120]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001e94:	4013      	ands	r3, r2
 8001e96:	60cb      	str	r3, [r1, #12]
 8001e98:	683b      	ldr	r3, [r7, #0]
 8001e9a:	685b      	ldr	r3, [r3, #4]
 8001e9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d006      	beq.n	8001eb2 <HAL_GPIO_Init+0x276>
 8001ea4:	4b19      	ldr	r3, [pc, #100]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001ea6:	685a      	ldr	r2, [r3, #4]
 8001ea8:	4918      	ldr	r1, [pc, #96]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001eaa:	69bb      	ldr	r3, [r7, #24]
 8001eac:	4313      	orrs	r3, r2
 8001eae:	604b      	str	r3, [r1, #4]
 8001eb0:	e006      	b.n	8001ec0 <HAL_GPIO_Init+0x284>
 8001eb2:	4b16      	ldr	r3, [pc, #88]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001eb4:	685a      	ldr	r2, [r3, #4]
 8001eb6:	69bb      	ldr	r3, [r7, #24]
 8001eb8:	43db      	mvns	r3, r3
 8001eba:	4914      	ldr	r1, [pc, #80]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001ebc:	4013      	ands	r3, r2
 8001ebe:	604b      	str	r3, [r1, #4]
 8001ec0:	683b      	ldr	r3, [r7, #0]
 8001ec2:	685b      	ldr	r3, [r3, #4]
 8001ec4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	d021      	beq.n	8001f10 <HAL_GPIO_Init+0x2d4>
 8001ecc:	4b0f      	ldr	r3, [pc, #60]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001ece:	681a      	ldr	r2, [r3, #0]
 8001ed0:	490e      	ldr	r1, [pc, #56]	; (8001f0c <HAL_GPIO_Init+0x2d0>)
 8001ed2:	69bb      	ldr	r3, [r7, #24]
 8001ed4:	4313      	orrs	r3, r2
 8001ed6:	600b      	str	r3, [r1, #0]
 8001ed8:	e021      	b.n	8001f1e <HAL_GPIO_Init+0x2e2>
 8001eda:	bf00      	nop
 8001edc:	10320000 	.word	0x10320000
 8001ee0:	10310000 	.word	0x10310000
 8001ee4:	10220000 	.word	0x10220000
 8001ee8:	10210000 	.word	0x10210000
 8001eec:	10120000 	.word	0x10120000
 8001ef0:	10110000 	.word	0x10110000
 8001ef4:	40021000 	.word	0x40021000
 8001ef8:	40010000 	.word	0x40010000
 8001efc:	40010800 	.word	0x40010800
 8001f00:	40010c00 	.word	0x40010c00
 8001f04:	40011000 	.word	0x40011000
 8001f08:	40011400 	.word	0x40011400
 8001f0c:	40010400 	.word	0x40010400
 8001f10:	4b0b      	ldr	r3, [pc, #44]	; (8001f40 <HAL_GPIO_Init+0x304>)
 8001f12:	681a      	ldr	r2, [r3, #0]
 8001f14:	69bb      	ldr	r3, [r7, #24]
 8001f16:	43db      	mvns	r3, r3
 8001f18:	4909      	ldr	r1, [pc, #36]	; (8001f40 <HAL_GPIO_Init+0x304>)
 8001f1a:	4013      	ands	r3, r2
 8001f1c:	600b      	str	r3, [r1, #0]
 8001f1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f20:	3301      	adds	r3, #1
 8001f22:	627b      	str	r3, [r7, #36]	; 0x24
 8001f24:	683b      	ldr	r3, [r7, #0]
 8001f26:	681a      	ldr	r2, [r3, #0]
 8001f28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f2a:	fa22 f303 	lsr.w	r3, r2, r3
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	f47f ae8e 	bne.w	8001c50 <HAL_GPIO_Init+0x14>
 8001f34:	bf00      	nop
 8001f36:	bf00      	nop
 8001f38:	372c      	adds	r7, #44	; 0x2c
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bc80      	pop	{r7}
 8001f3e:	4770      	bx	lr
 8001f40:	40010400 	.word	0x40010400

08001f44 <HAL_GPIO_ReadPin>:
 8001f44:	b480      	push	{r7}
 8001f46:	b085      	sub	sp, #20
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	6078      	str	r0, [r7, #4]
 8001f4c:	460b      	mov	r3, r1
 8001f4e:	807b      	strh	r3, [r7, #2]
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	689a      	ldr	r2, [r3, #8]
 8001f54:	887b      	ldrh	r3, [r7, #2]
 8001f56:	4013      	ands	r3, r2
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d002      	beq.n	8001f62 <HAL_GPIO_ReadPin+0x1e>
 8001f5c:	2301      	movs	r3, #1
 8001f5e:	73fb      	strb	r3, [r7, #15]
 8001f60:	e001      	b.n	8001f66 <HAL_GPIO_ReadPin+0x22>
 8001f62:	2300      	movs	r3, #0
 8001f64:	73fb      	strb	r3, [r7, #15]
 8001f66:	7bfb      	ldrb	r3, [r7, #15]
 8001f68:	4618      	mov	r0, r3
 8001f6a:	3714      	adds	r7, #20
 8001f6c:	46bd      	mov	sp, r7
 8001f6e:	bc80      	pop	{r7}
 8001f70:	4770      	bx	lr

08001f72 <HAL_GPIO_WritePin>:
 8001f72:	b480      	push	{r7}
 8001f74:	b083      	sub	sp, #12
 8001f76:	af00      	add	r7, sp, #0
 8001f78:	6078      	str	r0, [r7, #4]
 8001f7a:	460b      	mov	r3, r1
 8001f7c:	807b      	strh	r3, [r7, #2]
 8001f7e:	4613      	mov	r3, r2
 8001f80:	707b      	strb	r3, [r7, #1]
 8001f82:	787b      	ldrb	r3, [r7, #1]
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	d003      	beq.n	8001f90 <HAL_GPIO_WritePin+0x1e>
 8001f88:	887a      	ldrh	r2, [r7, #2]
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	611a      	str	r2, [r3, #16]
 8001f8e:	e003      	b.n	8001f98 <HAL_GPIO_WritePin+0x26>
 8001f90:	887b      	ldrh	r3, [r7, #2]
 8001f92:	041a      	lsls	r2, r3, #16
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	611a      	str	r2, [r3, #16]
 8001f98:	bf00      	nop
 8001f9a:	370c      	adds	r7, #12
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	bc80      	pop	{r7}
 8001fa0:	4770      	bx	lr
	...

08001fa4 <HAL_GPIO_EXTI_IRQHandler>:
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	b082      	sub	sp, #8
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	4603      	mov	r3, r0
 8001fac:	80fb      	strh	r3, [r7, #6]
 8001fae:	4b08      	ldr	r3, [pc, #32]	; (8001fd0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001fb0:	695a      	ldr	r2, [r3, #20]
 8001fb2:	88fb      	ldrh	r3, [r7, #6]
 8001fb4:	4013      	ands	r3, r2
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d006      	beq.n	8001fc8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001fba:	4a05      	ldr	r2, [pc, #20]	; (8001fd0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001fbc:	88fb      	ldrh	r3, [r7, #6]
 8001fbe:	6153      	str	r3, [r2, #20]
 8001fc0:	88fb      	ldrh	r3, [r7, #6]
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	f000 f806 	bl	8001fd4 <HAL_GPIO_EXTI_Callback>
 8001fc8:	bf00      	nop
 8001fca:	3708      	adds	r7, #8
 8001fcc:	46bd      	mov	sp, r7
 8001fce:	bd80      	pop	{r7, pc}
 8001fd0:	40010400 	.word	0x40010400

08001fd4 <HAL_GPIO_EXTI_Callback>:
 8001fd4:	b480      	push	{r7}
 8001fd6:	b083      	sub	sp, #12
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	4603      	mov	r3, r0
 8001fdc:	80fb      	strh	r3, [r7, #6]
 8001fde:	bf00      	nop
 8001fe0:	370c      	adds	r7, #12
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bc80      	pop	{r7}
 8001fe6:	4770      	bx	lr

08001fe8 <HAL_I2C_Init>:
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b084      	sub	sp, #16
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	2b00      	cmp	r3, #0
 8001ff4:	d101      	bne.n	8001ffa <HAL_I2C_Init+0x12>
 8001ff6:	2301      	movs	r3, #1
 8001ff8:	e12b      	b.n	8002252 <HAL_I2C_Init+0x26a>
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002000:	b2db      	uxtb	r3, r3
 8002002:	2b00      	cmp	r3, #0
 8002004:	d106      	bne.n	8002014 <HAL_I2C_Init+0x2c>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	2200      	movs	r2, #0
 800200a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800200e:	6878      	ldr	r0, [r7, #4]
 8002010:	f7ff fb32 	bl	8001678 <HAL_I2C_MspInit>
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	2224      	movs	r2, #36	; 0x24
 8002018:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	681a      	ldr	r2, [r3, #0]
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	f022 0201 	bic.w	r2, r2, #1
 800202a:	601a      	str	r2, [r3, #0]
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	681a      	ldr	r2, [r3, #0]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800203a:	601a      	str	r2, [r3, #0]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	681a      	ldr	r2, [r3, #0]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800204a:	601a      	str	r2, [r3, #0]
 800204c:	f001 f830 	bl	80030b0 <HAL_RCC_GetPCLK1Freq>
 8002050:	60f8      	str	r0, [r7, #12]
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	685b      	ldr	r3, [r3, #4]
 8002056:	4a81      	ldr	r2, [pc, #516]	; (800225c <HAL_I2C_Init+0x274>)
 8002058:	4293      	cmp	r3, r2
 800205a:	d807      	bhi.n	800206c <HAL_I2C_Init+0x84>
 800205c:	68fb      	ldr	r3, [r7, #12]
 800205e:	4a80      	ldr	r2, [pc, #512]	; (8002260 <HAL_I2C_Init+0x278>)
 8002060:	4293      	cmp	r3, r2
 8002062:	bf94      	ite	ls
 8002064:	2301      	movls	r3, #1
 8002066:	2300      	movhi	r3, #0
 8002068:	b2db      	uxtb	r3, r3
 800206a:	e006      	b.n	800207a <HAL_I2C_Init+0x92>
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	4a7d      	ldr	r2, [pc, #500]	; (8002264 <HAL_I2C_Init+0x27c>)
 8002070:	4293      	cmp	r3, r2
 8002072:	bf94      	ite	ls
 8002074:	2301      	movls	r3, #1
 8002076:	2300      	movhi	r3, #0
 8002078:	b2db      	uxtb	r3, r3
 800207a:	2b00      	cmp	r3, #0
 800207c:	d001      	beq.n	8002082 <HAL_I2C_Init+0x9a>
 800207e:	2301      	movs	r3, #1
 8002080:	e0e7      	b.n	8002252 <HAL_I2C_Init+0x26a>
 8002082:	68fb      	ldr	r3, [r7, #12]
 8002084:	4a78      	ldr	r2, [pc, #480]	; (8002268 <HAL_I2C_Init+0x280>)
 8002086:	fba2 2303 	umull	r2, r3, r2, r3
 800208a:	0c9b      	lsrs	r3, r3, #18
 800208c:	60bb      	str	r3, [r7, #8]
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	685b      	ldr	r3, [r3, #4]
 8002094:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	68ba      	ldr	r2, [r7, #8]
 800209e:	430a      	orrs	r2, r1
 80020a0:	605a      	str	r2, [r3, #4]
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	6a1b      	ldr	r3, [r3, #32]
 80020a8:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	685b      	ldr	r3, [r3, #4]
 80020b0:	4a6a      	ldr	r2, [pc, #424]	; (800225c <HAL_I2C_Init+0x274>)
 80020b2:	4293      	cmp	r3, r2
 80020b4:	d802      	bhi.n	80020bc <HAL_I2C_Init+0xd4>
 80020b6:	68bb      	ldr	r3, [r7, #8]
 80020b8:	3301      	adds	r3, #1
 80020ba:	e009      	b.n	80020d0 <HAL_I2C_Init+0xe8>
 80020bc:	68bb      	ldr	r3, [r7, #8]
 80020be:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80020c2:	fb02 f303 	mul.w	r3, r2, r3
 80020c6:	4a69      	ldr	r2, [pc, #420]	; (800226c <HAL_I2C_Init+0x284>)
 80020c8:	fba2 2303 	umull	r2, r3, r2, r3
 80020cc:	099b      	lsrs	r3, r3, #6
 80020ce:	3301      	adds	r3, #1
 80020d0:	687a      	ldr	r2, [r7, #4]
 80020d2:	6812      	ldr	r2, [r2, #0]
 80020d4:	430b      	orrs	r3, r1
 80020d6:	6213      	str	r3, [r2, #32]
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	681b      	ldr	r3, [r3, #0]
 80020dc:	69db      	ldr	r3, [r3, #28]
 80020de:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80020e2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	685b      	ldr	r3, [r3, #4]
 80020ea:	495c      	ldr	r1, [pc, #368]	; (800225c <HAL_I2C_Init+0x274>)
 80020ec:	428b      	cmp	r3, r1
 80020ee:	d819      	bhi.n	8002124 <HAL_I2C_Init+0x13c>
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	1e59      	subs	r1, r3, #1
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	685b      	ldr	r3, [r3, #4]
 80020f8:	005b      	lsls	r3, r3, #1
 80020fa:	fbb1 f3f3 	udiv	r3, r1, r3
 80020fe:	1c59      	adds	r1, r3, #1
 8002100:	f640 73fc 	movw	r3, #4092	; 0xffc
 8002104:	400b      	ands	r3, r1
 8002106:	2b00      	cmp	r3, #0
 8002108:	d00a      	beq.n	8002120 <HAL_I2C_Init+0x138>
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	1e59      	subs	r1, r3, #1
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	685b      	ldr	r3, [r3, #4]
 8002112:	005b      	lsls	r3, r3, #1
 8002114:	fbb1 f3f3 	udiv	r3, r1, r3
 8002118:	3301      	adds	r3, #1
 800211a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800211e:	e051      	b.n	80021c4 <HAL_I2C_Init+0x1dc>
 8002120:	2304      	movs	r3, #4
 8002122:	e04f      	b.n	80021c4 <HAL_I2C_Init+0x1dc>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	689b      	ldr	r3, [r3, #8]
 8002128:	2b00      	cmp	r3, #0
 800212a:	d111      	bne.n	8002150 <HAL_I2C_Init+0x168>
 800212c:	68fb      	ldr	r3, [r7, #12]
 800212e:	1e58      	subs	r0, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	6859      	ldr	r1, [r3, #4]
 8002134:	460b      	mov	r3, r1
 8002136:	005b      	lsls	r3, r3, #1
 8002138:	440b      	add	r3, r1
 800213a:	fbb0 f3f3 	udiv	r3, r0, r3
 800213e:	3301      	adds	r3, #1
 8002140:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002144:	2b00      	cmp	r3, #0
 8002146:	bf0c      	ite	eq
 8002148:	2301      	moveq	r3, #1
 800214a:	2300      	movne	r3, #0
 800214c:	b2db      	uxtb	r3, r3
 800214e:	e012      	b.n	8002176 <HAL_I2C_Init+0x18e>
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	1e58      	subs	r0, r3, #1
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	6859      	ldr	r1, [r3, #4]
 8002158:	460b      	mov	r3, r1
 800215a:	009b      	lsls	r3, r3, #2
 800215c:	440b      	add	r3, r1
 800215e:	0099      	lsls	r1, r3, #2
 8002160:	440b      	add	r3, r1
 8002162:	fbb0 f3f3 	udiv	r3, r0, r3
 8002166:	3301      	adds	r3, #1
 8002168:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800216c:	2b00      	cmp	r3, #0
 800216e:	bf0c      	ite	eq
 8002170:	2301      	moveq	r3, #1
 8002172:	2300      	movne	r3, #0
 8002174:	b2db      	uxtb	r3, r3
 8002176:	2b00      	cmp	r3, #0
 8002178:	d001      	beq.n	800217e <HAL_I2C_Init+0x196>
 800217a:	2301      	movs	r3, #1
 800217c:	e022      	b.n	80021c4 <HAL_I2C_Init+0x1dc>
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	689b      	ldr	r3, [r3, #8]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d10e      	bne.n	80021a4 <HAL_I2C_Init+0x1bc>
 8002186:	68fb      	ldr	r3, [r7, #12]
 8002188:	1e58      	subs	r0, r3, #1
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	6859      	ldr	r1, [r3, #4]
 800218e:	460b      	mov	r3, r1
 8002190:	005b      	lsls	r3, r3, #1
 8002192:	440b      	add	r3, r1
 8002194:	fbb0 f3f3 	udiv	r3, r0, r3
 8002198:	3301      	adds	r3, #1
 800219a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800219e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80021a2:	e00f      	b.n	80021c4 <HAL_I2C_Init+0x1dc>
 80021a4:	68fb      	ldr	r3, [r7, #12]
 80021a6:	1e58      	subs	r0, r3, #1
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	6859      	ldr	r1, [r3, #4]
 80021ac:	460b      	mov	r3, r1
 80021ae:	009b      	lsls	r3, r3, #2
 80021b0:	440b      	add	r3, r1
 80021b2:	0099      	lsls	r1, r3, #2
 80021b4:	440b      	add	r3, r1
 80021b6:	fbb0 f3f3 	udiv	r3, r0, r3
 80021ba:	3301      	adds	r3, #1
 80021bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80021c0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80021c4:	6879      	ldr	r1, [r7, #4]
 80021c6:	6809      	ldr	r1, [r1, #0]
 80021c8:	4313      	orrs	r3, r2
 80021ca:	61cb      	str	r3, [r1, #28]
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	69da      	ldr	r2, [r3, #28]
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	6a1b      	ldr	r3, [r3, #32]
 80021de:	431a      	orrs	r2, r3
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	430a      	orrs	r2, r1
 80021e6:	601a      	str	r2, [r3, #0]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	689b      	ldr	r3, [r3, #8]
 80021ee:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80021f2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80021f6:	687a      	ldr	r2, [r7, #4]
 80021f8:	6911      	ldr	r1, [r2, #16]
 80021fa:	687a      	ldr	r2, [r7, #4]
 80021fc:	68d2      	ldr	r2, [r2, #12]
 80021fe:	4311      	orrs	r1, r2
 8002200:	687a      	ldr	r2, [r7, #4]
 8002202:	6812      	ldr	r2, [r2, #0]
 8002204:	430b      	orrs	r3, r1
 8002206:	6093      	str	r3, [r2, #8]
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	681b      	ldr	r3, [r3, #0]
 800220c:	68db      	ldr	r3, [r3, #12]
 800220e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	695a      	ldr	r2, [r3, #20]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	699b      	ldr	r3, [r3, #24]
 800221a:	431a      	orrs	r2, r3
 800221c:	687b      	ldr	r3, [r7, #4]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	430a      	orrs	r2, r1
 8002222:	60da      	str	r2, [r3, #12]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	681a      	ldr	r2, [r3, #0]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	f042 0201 	orr.w	r2, r2, #1
 8002232:	601a      	str	r2, [r3, #0]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2200      	movs	r2, #0
 8002238:	641a      	str	r2, [r3, #64]	; 0x40
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	2220      	movs	r2, #32
 800223e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	2200      	movs	r2, #0
 8002246:	631a      	str	r2, [r3, #48]	; 0x30
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	2200      	movs	r2, #0
 800224c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002250:	2300      	movs	r3, #0
 8002252:	4618      	mov	r0, r3
 8002254:	3710      	adds	r7, #16
 8002256:	46bd      	mov	sp, r7
 8002258:	bd80      	pop	{r7, pc}
 800225a:	bf00      	nop
 800225c:	000186a0 	.word	0x000186a0
 8002260:	001e847f 	.word	0x001e847f
 8002264:	003d08ff 	.word	0x003d08ff
 8002268:	431bde83 	.word	0x431bde83
 800226c:	10624dd3 	.word	0x10624dd3

08002270 <HAL_I2C_Master_Transmit>:
 8002270:	b580      	push	{r7, lr}
 8002272:	b088      	sub	sp, #32
 8002274:	af02      	add	r7, sp, #8
 8002276:	60f8      	str	r0, [r7, #12]
 8002278:	607a      	str	r2, [r7, #4]
 800227a:	461a      	mov	r2, r3
 800227c:	460b      	mov	r3, r1
 800227e:	817b      	strh	r3, [r7, #10]
 8002280:	4613      	mov	r3, r2
 8002282:	813b      	strh	r3, [r7, #8]
 8002284:	f7ff fb9e 	bl	80019c4 <HAL_GetTick>
 8002288:	6178      	str	r0, [r7, #20]
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002290:	b2db      	uxtb	r3, r3
 8002292:	2b20      	cmp	r3, #32
 8002294:	f040 80e0 	bne.w	8002458 <HAL_I2C_Master_Transmit+0x1e8>
 8002298:	697b      	ldr	r3, [r7, #20]
 800229a:	9300      	str	r3, [sp, #0]
 800229c:	2319      	movs	r3, #25
 800229e:	2201      	movs	r2, #1
 80022a0:	4970      	ldr	r1, [pc, #448]	; (8002464 <HAL_I2C_Master_Transmit+0x1f4>)
 80022a2:	68f8      	ldr	r0, [r7, #12]
 80022a4:	f000 f964 	bl	8002570 <I2C_WaitOnFlagUntilTimeout>
 80022a8:	4603      	mov	r3, r0
 80022aa:	2b00      	cmp	r3, #0
 80022ac:	d001      	beq.n	80022b2 <HAL_I2C_Master_Transmit+0x42>
 80022ae:	2302      	movs	r3, #2
 80022b0:	e0d3      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80022b8:	2b01      	cmp	r3, #1
 80022ba:	d101      	bne.n	80022c0 <HAL_I2C_Master_Transmit+0x50>
 80022bc:	2302      	movs	r3, #2
 80022be:	e0cc      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 80022c0:	68fb      	ldr	r3, [r7, #12]
 80022c2:	2201      	movs	r2, #1
 80022c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022c8:	68fb      	ldr	r3, [r7, #12]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	f003 0301 	and.w	r3, r3, #1
 80022d2:	2b01      	cmp	r3, #1
 80022d4:	d007      	beq.n	80022e6 <HAL_I2C_Master_Transmit+0x76>
 80022d6:	68fb      	ldr	r3, [r7, #12]
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	681a      	ldr	r2, [r3, #0]
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	f042 0201 	orr.w	r2, r2, #1
 80022e4:	601a      	str	r2, [r3, #0]
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	681a      	ldr	r2, [r3, #0]
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80022f4:	601a      	str	r2, [r3, #0]
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	2221      	movs	r2, #33	; 0x21
 80022fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	2210      	movs	r2, #16
 8002302:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	2200      	movs	r2, #0
 800230a:	641a      	str	r2, [r3, #64]	; 0x40
 800230c:	68fb      	ldr	r3, [r7, #12]
 800230e:	687a      	ldr	r2, [r7, #4]
 8002310:	625a      	str	r2, [r3, #36]	; 0x24
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	893a      	ldrh	r2, [r7, #8]
 8002316:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800231c:	b29a      	uxth	r2, r3
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	851a      	strh	r2, [r3, #40]	; 0x28
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	4a50      	ldr	r2, [pc, #320]	; (8002468 <HAL_I2C_Master_Transmit+0x1f8>)
 8002326:	62da      	str	r2, [r3, #44]	; 0x2c
 8002328:	8979      	ldrh	r1, [r7, #10]
 800232a:	697b      	ldr	r3, [r7, #20]
 800232c:	6a3a      	ldr	r2, [r7, #32]
 800232e:	68f8      	ldr	r0, [r7, #12]
 8002330:	f000 f89c 	bl	800246c <I2C_MasterRequestWrite>
 8002334:	4603      	mov	r3, r0
 8002336:	2b00      	cmp	r3, #0
 8002338:	d001      	beq.n	800233e <HAL_I2C_Master_Transmit+0xce>
 800233a:	2301      	movs	r3, #1
 800233c:	e08d      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 800233e:	2300      	movs	r3, #0
 8002340:	613b      	str	r3, [r7, #16]
 8002342:	68fb      	ldr	r3, [r7, #12]
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	695b      	ldr	r3, [r3, #20]
 8002348:	613b      	str	r3, [r7, #16]
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	699b      	ldr	r3, [r3, #24]
 8002350:	613b      	str	r3, [r7, #16]
 8002352:	693b      	ldr	r3, [r7, #16]
 8002354:	e066      	b.n	8002424 <HAL_I2C_Master_Transmit+0x1b4>
 8002356:	697a      	ldr	r2, [r7, #20]
 8002358:	6a39      	ldr	r1, [r7, #32]
 800235a:	68f8      	ldr	r0, [r7, #12]
 800235c:	f000 fa22 	bl	80027a4 <I2C_WaitOnTXEFlagUntilTimeout>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d00d      	beq.n	8002382 <HAL_I2C_Master_Transmit+0x112>
 8002366:	68fb      	ldr	r3, [r7, #12]
 8002368:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800236a:	2b04      	cmp	r3, #4
 800236c:	d107      	bne.n	800237e <HAL_I2C_Master_Transmit+0x10e>
 800236e:	68fb      	ldr	r3, [r7, #12]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	681a      	ldr	r2, [r3, #0]
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800237c:	601a      	str	r2, [r3, #0]
 800237e:	2301      	movs	r3, #1
 8002380:	e06b      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 8002382:	68fb      	ldr	r3, [r7, #12]
 8002384:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002386:	781a      	ldrb	r2, [r3, #0]
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	611a      	str	r2, [r3, #16]
 800238e:	68fb      	ldr	r3, [r7, #12]
 8002390:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002392:	1c5a      	adds	r2, r3, #1
 8002394:	68fb      	ldr	r3, [r7, #12]
 8002396:	625a      	str	r2, [r3, #36]	; 0x24
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800239c:	b29b      	uxth	r3, r3
 800239e:	3b01      	subs	r3, #1
 80023a0:	b29a      	uxth	r2, r3
 80023a2:	68fb      	ldr	r3, [r7, #12]
 80023a4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80023a6:	68fb      	ldr	r3, [r7, #12]
 80023a8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80023aa:	3b01      	subs	r3, #1
 80023ac:	b29a      	uxth	r2, r3
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	851a      	strh	r2, [r3, #40]	; 0x28
 80023b2:	68fb      	ldr	r3, [r7, #12]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	695b      	ldr	r3, [r3, #20]
 80023b8:	f003 0304 	and.w	r3, r3, #4
 80023bc:	2b04      	cmp	r3, #4
 80023be:	d11b      	bne.n	80023f8 <HAL_I2C_Master_Transmit+0x188>
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	d017      	beq.n	80023f8 <HAL_I2C_Master_Transmit+0x188>
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023cc:	781a      	ldrb	r2, [r3, #0]
 80023ce:	68fb      	ldr	r3, [r7, #12]
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	611a      	str	r2, [r3, #16]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023d8:	1c5a      	adds	r2, r3, #1
 80023da:	68fb      	ldr	r3, [r7, #12]
 80023dc:	625a      	str	r2, [r3, #36]	; 0x24
 80023de:	68fb      	ldr	r3, [r7, #12]
 80023e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80023e2:	b29b      	uxth	r3, r3
 80023e4:	3b01      	subs	r3, #1
 80023e6:	b29a      	uxth	r2, r3
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	855a      	strh	r2, [r3, #42]	; 0x2a
 80023ec:	68fb      	ldr	r3, [r7, #12]
 80023ee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80023f0:	3b01      	subs	r3, #1
 80023f2:	b29a      	uxth	r2, r3
 80023f4:	68fb      	ldr	r3, [r7, #12]
 80023f6:	851a      	strh	r2, [r3, #40]	; 0x28
 80023f8:	697a      	ldr	r2, [r7, #20]
 80023fa:	6a39      	ldr	r1, [r7, #32]
 80023fc:	68f8      	ldr	r0, [r7, #12]
 80023fe:	f000 fa19 	bl	8002834 <I2C_WaitOnBTFFlagUntilTimeout>
 8002402:	4603      	mov	r3, r0
 8002404:	2b00      	cmp	r3, #0
 8002406:	d00d      	beq.n	8002424 <HAL_I2C_Master_Transmit+0x1b4>
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800240c:	2b04      	cmp	r3, #4
 800240e:	d107      	bne.n	8002420 <HAL_I2C_Master_Transmit+0x1b0>
 8002410:	68fb      	ldr	r3, [r7, #12]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	681a      	ldr	r2, [r3, #0]
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800241e:	601a      	str	r2, [r3, #0]
 8002420:	2301      	movs	r3, #1
 8002422:	e01a      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002428:	2b00      	cmp	r3, #0
 800242a:	d194      	bne.n	8002356 <HAL_I2C_Master_Transmit+0xe6>
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	681a      	ldr	r2, [r3, #0]
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	2220      	movs	r2, #32
 8002440:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002444:	68fb      	ldr	r3, [r7, #12]
 8002446:	2200      	movs	r2, #0
 8002448:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	2200      	movs	r2, #0
 8002450:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002454:	2300      	movs	r3, #0
 8002456:	e000      	b.n	800245a <HAL_I2C_Master_Transmit+0x1ea>
 8002458:	2302      	movs	r3, #2
 800245a:	4618      	mov	r0, r3
 800245c:	3718      	adds	r7, #24
 800245e:	46bd      	mov	sp, r7
 8002460:	bd80      	pop	{r7, pc}
 8002462:	bf00      	nop
 8002464:	00100002 	.word	0x00100002
 8002468:	ffff0000 	.word	0xffff0000

0800246c <I2C_MasterRequestWrite>:
 800246c:	b580      	push	{r7, lr}
 800246e:	b088      	sub	sp, #32
 8002470:	af02      	add	r7, sp, #8
 8002472:	60f8      	str	r0, [r7, #12]
 8002474:	607a      	str	r2, [r7, #4]
 8002476:	603b      	str	r3, [r7, #0]
 8002478:	460b      	mov	r3, r1
 800247a:	817b      	strh	r3, [r7, #10]
 800247c:	68fb      	ldr	r3, [r7, #12]
 800247e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002480:	617b      	str	r3, [r7, #20]
 8002482:	697b      	ldr	r3, [r7, #20]
 8002484:	2b08      	cmp	r3, #8
 8002486:	d006      	beq.n	8002496 <I2C_MasterRequestWrite+0x2a>
 8002488:	697b      	ldr	r3, [r7, #20]
 800248a:	2b01      	cmp	r3, #1
 800248c:	d003      	beq.n	8002496 <I2C_MasterRequestWrite+0x2a>
 800248e:	697b      	ldr	r3, [r7, #20]
 8002490:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8002494:	d108      	bne.n	80024a8 <I2C_MasterRequestWrite+0x3c>
 8002496:	68fb      	ldr	r3, [r7, #12]
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	681a      	ldr	r2, [r3, #0]
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80024a4:	601a      	str	r2, [r3, #0]
 80024a6:	e00b      	b.n	80024c0 <I2C_MasterRequestWrite+0x54>
 80024a8:	68fb      	ldr	r3, [r7, #12]
 80024aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024ac:	2b12      	cmp	r3, #18
 80024ae:	d107      	bne.n	80024c0 <I2C_MasterRequestWrite+0x54>
 80024b0:	68fb      	ldr	r3, [r7, #12]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	681a      	ldr	r2, [r3, #0]
 80024b6:	68fb      	ldr	r3, [r7, #12]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80024be:	601a      	str	r2, [r3, #0]
 80024c0:	683b      	ldr	r3, [r7, #0]
 80024c2:	9300      	str	r3, [sp, #0]
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	2200      	movs	r2, #0
 80024c8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80024cc:	68f8      	ldr	r0, [r7, #12]
 80024ce:	f000 f84f 	bl	8002570 <I2C_WaitOnFlagUntilTimeout>
 80024d2:	4603      	mov	r3, r0
 80024d4:	2b00      	cmp	r3, #0
 80024d6:	d00d      	beq.n	80024f4 <I2C_MasterRequestWrite+0x88>
 80024d8:	68fb      	ldr	r3, [r7, #12]
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024e2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80024e6:	d103      	bne.n	80024f0 <I2C_MasterRequestWrite+0x84>
 80024e8:	68fb      	ldr	r3, [r7, #12]
 80024ea:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024ee:	641a      	str	r2, [r3, #64]	; 0x40
 80024f0:	2303      	movs	r3, #3
 80024f2:	e035      	b.n	8002560 <I2C_MasterRequestWrite+0xf4>
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	691b      	ldr	r3, [r3, #16]
 80024f8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80024fc:	d108      	bne.n	8002510 <I2C_MasterRequestWrite+0xa4>
 80024fe:	897b      	ldrh	r3, [r7, #10]
 8002500:	b2db      	uxtb	r3, r3
 8002502:	461a      	mov	r2, r3
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800250c:	611a      	str	r2, [r3, #16]
 800250e:	e01b      	b.n	8002548 <I2C_MasterRequestWrite+0xdc>
 8002510:	897b      	ldrh	r3, [r7, #10]
 8002512:	11db      	asrs	r3, r3, #7
 8002514:	b2db      	uxtb	r3, r3
 8002516:	f003 0306 	and.w	r3, r3, #6
 800251a:	b2db      	uxtb	r3, r3
 800251c:	f063 030f 	orn	r3, r3, #15
 8002520:	b2da      	uxtb	r2, r3
 8002522:	68fb      	ldr	r3, [r7, #12]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	611a      	str	r2, [r3, #16]
 8002528:	683b      	ldr	r3, [r7, #0]
 800252a:	687a      	ldr	r2, [r7, #4]
 800252c:	490e      	ldr	r1, [pc, #56]	; (8002568 <I2C_MasterRequestWrite+0xfc>)
 800252e:	68f8      	ldr	r0, [r7, #12]
 8002530:	f000 f898 	bl	8002664 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002534:	4603      	mov	r3, r0
 8002536:	2b00      	cmp	r3, #0
 8002538:	d001      	beq.n	800253e <I2C_MasterRequestWrite+0xd2>
 800253a:	2301      	movs	r3, #1
 800253c:	e010      	b.n	8002560 <I2C_MasterRequestWrite+0xf4>
 800253e:	897b      	ldrh	r3, [r7, #10]
 8002540:	b2da      	uxtb	r2, r3
 8002542:	68fb      	ldr	r3, [r7, #12]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	611a      	str	r2, [r3, #16]
 8002548:	683b      	ldr	r3, [r7, #0]
 800254a:	687a      	ldr	r2, [r7, #4]
 800254c:	4907      	ldr	r1, [pc, #28]	; (800256c <I2C_MasterRequestWrite+0x100>)
 800254e:	68f8      	ldr	r0, [r7, #12]
 8002550:	f000 f888 	bl	8002664 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002554:	4603      	mov	r3, r0
 8002556:	2b00      	cmp	r3, #0
 8002558:	d001      	beq.n	800255e <I2C_MasterRequestWrite+0xf2>
 800255a:	2301      	movs	r3, #1
 800255c:	e000      	b.n	8002560 <I2C_MasterRequestWrite+0xf4>
 800255e:	2300      	movs	r3, #0
 8002560:	4618      	mov	r0, r3
 8002562:	3718      	adds	r7, #24
 8002564:	46bd      	mov	sp, r7
 8002566:	bd80      	pop	{r7, pc}
 8002568:	00010008 	.word	0x00010008
 800256c:	00010002 	.word	0x00010002

08002570 <I2C_WaitOnFlagUntilTimeout>:
 8002570:	b580      	push	{r7, lr}
 8002572:	b084      	sub	sp, #16
 8002574:	af00      	add	r7, sp, #0
 8002576:	60f8      	str	r0, [r7, #12]
 8002578:	60b9      	str	r1, [r7, #8]
 800257a:	603b      	str	r3, [r7, #0]
 800257c:	4613      	mov	r3, r2
 800257e:	71fb      	strb	r3, [r7, #7]
 8002580:	e048      	b.n	8002614 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002582:	683b      	ldr	r3, [r7, #0]
 8002584:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002588:	d044      	beq.n	8002614 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800258a:	f7ff fa1b 	bl	80019c4 <HAL_GetTick>
 800258e:	4602      	mov	r2, r0
 8002590:	69bb      	ldr	r3, [r7, #24]
 8002592:	1ad3      	subs	r3, r2, r3
 8002594:	683a      	ldr	r2, [r7, #0]
 8002596:	429a      	cmp	r2, r3
 8002598:	d302      	bcc.n	80025a0 <I2C_WaitOnFlagUntilTimeout+0x30>
 800259a:	683b      	ldr	r3, [r7, #0]
 800259c:	2b00      	cmp	r3, #0
 800259e:	d139      	bne.n	8002614 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80025a0:	68bb      	ldr	r3, [r7, #8]
 80025a2:	0c1b      	lsrs	r3, r3, #16
 80025a4:	b2db      	uxtb	r3, r3
 80025a6:	2b01      	cmp	r3, #1
 80025a8:	d10d      	bne.n	80025c6 <I2C_WaitOnFlagUntilTimeout+0x56>
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	695b      	ldr	r3, [r3, #20]
 80025b0:	43da      	mvns	r2, r3
 80025b2:	68bb      	ldr	r3, [r7, #8]
 80025b4:	4013      	ands	r3, r2
 80025b6:	b29b      	uxth	r3, r3
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	bf0c      	ite	eq
 80025bc:	2301      	moveq	r3, #1
 80025be:	2300      	movne	r3, #0
 80025c0:	b2db      	uxtb	r3, r3
 80025c2:	461a      	mov	r2, r3
 80025c4:	e00c      	b.n	80025e0 <I2C_WaitOnFlagUntilTimeout+0x70>
 80025c6:	68fb      	ldr	r3, [r7, #12]
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	699b      	ldr	r3, [r3, #24]
 80025cc:	43da      	mvns	r2, r3
 80025ce:	68bb      	ldr	r3, [r7, #8]
 80025d0:	4013      	ands	r3, r2
 80025d2:	b29b      	uxth	r3, r3
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	bf0c      	ite	eq
 80025d8:	2301      	moveq	r3, #1
 80025da:	2300      	movne	r3, #0
 80025dc:	b2db      	uxtb	r3, r3
 80025de:	461a      	mov	r2, r3
 80025e0:	79fb      	ldrb	r3, [r7, #7]
 80025e2:	429a      	cmp	r2, r3
 80025e4:	d116      	bne.n	8002614 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80025e6:	68fb      	ldr	r3, [r7, #12]
 80025e8:	2200      	movs	r2, #0
 80025ea:	631a      	str	r2, [r3, #48]	; 0x30
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	2220      	movs	r2, #32
 80025f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80025f4:	68fb      	ldr	r3, [r7, #12]
 80025f6:	2200      	movs	r2, #0
 80025f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80025fc:	68fb      	ldr	r3, [r7, #12]
 80025fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002600:	f043 0220 	orr.w	r2, r3, #32
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	641a      	str	r2, [r3, #64]	; 0x40
 8002608:	68fb      	ldr	r3, [r7, #12]
 800260a:	2200      	movs	r2, #0
 800260c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002610:	2301      	movs	r3, #1
 8002612:	e023      	b.n	800265c <I2C_WaitOnFlagUntilTimeout+0xec>
 8002614:	68bb      	ldr	r3, [r7, #8]
 8002616:	0c1b      	lsrs	r3, r3, #16
 8002618:	b2db      	uxtb	r3, r3
 800261a:	2b01      	cmp	r3, #1
 800261c:	d10d      	bne.n	800263a <I2C_WaitOnFlagUntilTimeout+0xca>
 800261e:	68fb      	ldr	r3, [r7, #12]
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	695b      	ldr	r3, [r3, #20]
 8002624:	43da      	mvns	r2, r3
 8002626:	68bb      	ldr	r3, [r7, #8]
 8002628:	4013      	ands	r3, r2
 800262a:	b29b      	uxth	r3, r3
 800262c:	2b00      	cmp	r3, #0
 800262e:	bf0c      	ite	eq
 8002630:	2301      	moveq	r3, #1
 8002632:	2300      	movne	r3, #0
 8002634:	b2db      	uxtb	r3, r3
 8002636:	461a      	mov	r2, r3
 8002638:	e00c      	b.n	8002654 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800263a:	68fb      	ldr	r3, [r7, #12]
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	699b      	ldr	r3, [r3, #24]
 8002640:	43da      	mvns	r2, r3
 8002642:	68bb      	ldr	r3, [r7, #8]
 8002644:	4013      	ands	r3, r2
 8002646:	b29b      	uxth	r3, r3
 8002648:	2b00      	cmp	r3, #0
 800264a:	bf0c      	ite	eq
 800264c:	2301      	moveq	r3, #1
 800264e:	2300      	movne	r3, #0
 8002650:	b2db      	uxtb	r3, r3
 8002652:	461a      	mov	r2, r3
 8002654:	79fb      	ldrb	r3, [r7, #7]
 8002656:	429a      	cmp	r2, r3
 8002658:	d093      	beq.n	8002582 <I2C_WaitOnFlagUntilTimeout+0x12>
 800265a:	2300      	movs	r3, #0
 800265c:	4618      	mov	r0, r3
 800265e:	3710      	adds	r7, #16
 8002660:	46bd      	mov	sp, r7
 8002662:	bd80      	pop	{r7, pc}

08002664 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002664:	b580      	push	{r7, lr}
 8002666:	b084      	sub	sp, #16
 8002668:	af00      	add	r7, sp, #0
 800266a:	60f8      	str	r0, [r7, #12]
 800266c:	60b9      	str	r1, [r7, #8]
 800266e:	607a      	str	r2, [r7, #4]
 8002670:	603b      	str	r3, [r7, #0]
 8002672:	e071      	b.n	8002758 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	695b      	ldr	r3, [r3, #20]
 800267a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800267e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002682:	d123      	bne.n	80026cc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	681a      	ldr	r2, [r3, #0]
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002692:	601a      	str	r2, [r3, #0]
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800269c:	615a      	str	r2, [r3, #20]
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	2200      	movs	r2, #0
 80026a2:	631a      	str	r2, [r3, #48]	; 0x30
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	2220      	movs	r2, #32
 80026a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026ac:	68fb      	ldr	r3, [r7, #12]
 80026ae:	2200      	movs	r2, #0
 80026b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80026b4:	68fb      	ldr	r3, [r7, #12]
 80026b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026b8:	f043 0204 	orr.w	r2, r3, #4
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	641a      	str	r2, [r3, #64]	; 0x40
 80026c0:	68fb      	ldr	r3, [r7, #12]
 80026c2:	2200      	movs	r2, #0
 80026c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026c8:	2301      	movs	r3, #1
 80026ca:	e067      	b.n	800279c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80026d2:	d041      	beq.n	8002758 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80026d4:	f7ff f976 	bl	80019c4 <HAL_GetTick>
 80026d8:	4602      	mov	r2, r0
 80026da:	683b      	ldr	r3, [r7, #0]
 80026dc:	1ad3      	subs	r3, r2, r3
 80026de:	687a      	ldr	r2, [r7, #4]
 80026e0:	429a      	cmp	r2, r3
 80026e2:	d302      	bcc.n	80026ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d136      	bne.n	8002758 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80026ea:	68bb      	ldr	r3, [r7, #8]
 80026ec:	0c1b      	lsrs	r3, r3, #16
 80026ee:	b2db      	uxtb	r3, r3
 80026f0:	2b01      	cmp	r3, #1
 80026f2:	d10c      	bne.n	800270e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	695b      	ldr	r3, [r3, #20]
 80026fa:	43da      	mvns	r2, r3
 80026fc:	68bb      	ldr	r3, [r7, #8]
 80026fe:	4013      	ands	r3, r2
 8002700:	b29b      	uxth	r3, r3
 8002702:	2b00      	cmp	r3, #0
 8002704:	bf14      	ite	ne
 8002706:	2301      	movne	r3, #1
 8002708:	2300      	moveq	r3, #0
 800270a:	b2db      	uxtb	r3, r3
 800270c:	e00b      	b.n	8002726 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	699b      	ldr	r3, [r3, #24]
 8002714:	43da      	mvns	r2, r3
 8002716:	68bb      	ldr	r3, [r7, #8]
 8002718:	4013      	ands	r3, r2
 800271a:	b29b      	uxth	r3, r3
 800271c:	2b00      	cmp	r3, #0
 800271e:	bf14      	ite	ne
 8002720:	2301      	movne	r3, #1
 8002722:	2300      	moveq	r3, #0
 8002724:	b2db      	uxtb	r3, r3
 8002726:	2b00      	cmp	r3, #0
 8002728:	d016      	beq.n	8002758 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800272a:	68fb      	ldr	r3, [r7, #12]
 800272c:	2200      	movs	r2, #0
 800272e:	631a      	str	r2, [r3, #48]	; 0x30
 8002730:	68fb      	ldr	r3, [r7, #12]
 8002732:	2220      	movs	r2, #32
 8002734:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	2200      	movs	r2, #0
 800273c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002744:	f043 0220 	orr.w	r2, r3, #32
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	641a      	str	r2, [r3, #64]	; 0x40
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	2200      	movs	r2, #0
 8002750:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002754:	2301      	movs	r3, #1
 8002756:	e021      	b.n	800279c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	0c1b      	lsrs	r3, r3, #16
 800275c:	b2db      	uxtb	r3, r3
 800275e:	2b01      	cmp	r3, #1
 8002760:	d10c      	bne.n	800277c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8002762:	68fb      	ldr	r3, [r7, #12]
 8002764:	681b      	ldr	r3, [r3, #0]
 8002766:	695b      	ldr	r3, [r3, #20]
 8002768:	43da      	mvns	r2, r3
 800276a:	68bb      	ldr	r3, [r7, #8]
 800276c:	4013      	ands	r3, r2
 800276e:	b29b      	uxth	r3, r3
 8002770:	2b00      	cmp	r3, #0
 8002772:	bf14      	ite	ne
 8002774:	2301      	movne	r3, #1
 8002776:	2300      	moveq	r3, #0
 8002778:	b2db      	uxtb	r3, r3
 800277a:	e00b      	b.n	8002794 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	699b      	ldr	r3, [r3, #24]
 8002782:	43da      	mvns	r2, r3
 8002784:	68bb      	ldr	r3, [r7, #8]
 8002786:	4013      	ands	r3, r2
 8002788:	b29b      	uxth	r3, r3
 800278a:	2b00      	cmp	r3, #0
 800278c:	bf14      	ite	ne
 800278e:	2301      	movne	r3, #1
 8002790:	2300      	moveq	r3, #0
 8002792:	b2db      	uxtb	r3, r3
 8002794:	2b00      	cmp	r3, #0
 8002796:	f47f af6d 	bne.w	8002674 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800279a:	2300      	movs	r3, #0
 800279c:	4618      	mov	r0, r3
 800279e:	3710      	adds	r7, #16
 80027a0:	46bd      	mov	sp, r7
 80027a2:	bd80      	pop	{r7, pc}

080027a4 <I2C_WaitOnTXEFlagUntilTimeout>:
 80027a4:	b580      	push	{r7, lr}
 80027a6:	b084      	sub	sp, #16
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	60f8      	str	r0, [r7, #12]
 80027ac:	60b9      	str	r1, [r7, #8]
 80027ae:	607a      	str	r2, [r7, #4]
 80027b0:	e034      	b.n	800281c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80027b2:	68f8      	ldr	r0, [r7, #12]
 80027b4:	f000 f886 	bl	80028c4 <I2C_IsAcknowledgeFailed>
 80027b8:	4603      	mov	r3, r0
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d001      	beq.n	80027c2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80027be:	2301      	movs	r3, #1
 80027c0:	e034      	b.n	800282c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80027c2:	68bb      	ldr	r3, [r7, #8]
 80027c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027c8:	d028      	beq.n	800281c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80027ca:	f7ff f8fb 	bl	80019c4 <HAL_GetTick>
 80027ce:	4602      	mov	r2, r0
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	1ad3      	subs	r3, r2, r3
 80027d4:	68ba      	ldr	r2, [r7, #8]
 80027d6:	429a      	cmp	r2, r3
 80027d8:	d302      	bcc.n	80027e0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80027da:	68bb      	ldr	r3, [r7, #8]
 80027dc:	2b00      	cmp	r3, #0
 80027de:	d11d      	bne.n	800281c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	695b      	ldr	r3, [r3, #20]
 80027e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027ea:	2b80      	cmp	r3, #128	; 0x80
 80027ec:	d016      	beq.n	800281c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	2200      	movs	r2, #0
 80027f2:	631a      	str	r2, [r3, #48]	; 0x30
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	2220      	movs	r2, #32
 80027f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	2200      	movs	r2, #0
 8002800:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002808:	f043 0220 	orr.w	r2, r3, #32
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	641a      	str	r2, [r3, #64]	; 0x40
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	2200      	movs	r2, #0
 8002814:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002818:	2301      	movs	r3, #1
 800281a:	e007      	b.n	800282c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	695b      	ldr	r3, [r3, #20]
 8002822:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002826:	2b80      	cmp	r3, #128	; 0x80
 8002828:	d1c3      	bne.n	80027b2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800282a:	2300      	movs	r3, #0
 800282c:	4618      	mov	r0, r3
 800282e:	3710      	adds	r7, #16
 8002830:	46bd      	mov	sp, r7
 8002832:	bd80      	pop	{r7, pc}

08002834 <I2C_WaitOnBTFFlagUntilTimeout>:
 8002834:	b580      	push	{r7, lr}
 8002836:	b084      	sub	sp, #16
 8002838:	af00      	add	r7, sp, #0
 800283a:	60f8      	str	r0, [r7, #12]
 800283c:	60b9      	str	r1, [r7, #8]
 800283e:	607a      	str	r2, [r7, #4]
 8002840:	e034      	b.n	80028ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002842:	68f8      	ldr	r0, [r7, #12]
 8002844:	f000 f83e 	bl	80028c4 <I2C_IsAcknowledgeFailed>
 8002848:	4603      	mov	r3, r0
 800284a:	2b00      	cmp	r3, #0
 800284c:	d001      	beq.n	8002852 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800284e:	2301      	movs	r3, #1
 8002850:	e034      	b.n	80028bc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002852:	68bb      	ldr	r3, [r7, #8]
 8002854:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002858:	d028      	beq.n	80028ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800285a:	f7ff f8b3 	bl	80019c4 <HAL_GetTick>
 800285e:	4602      	mov	r2, r0
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	1ad3      	subs	r3, r2, r3
 8002864:	68ba      	ldr	r2, [r7, #8]
 8002866:	429a      	cmp	r2, r3
 8002868:	d302      	bcc.n	8002870 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800286a:	68bb      	ldr	r3, [r7, #8]
 800286c:	2b00      	cmp	r3, #0
 800286e:	d11d      	bne.n	80028ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002870:	68fb      	ldr	r3, [r7, #12]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	695b      	ldr	r3, [r3, #20]
 8002876:	f003 0304 	and.w	r3, r3, #4
 800287a:	2b04      	cmp	r3, #4
 800287c:	d016      	beq.n	80028ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	2200      	movs	r2, #0
 8002882:	631a      	str	r2, [r3, #48]	; 0x30
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	2220      	movs	r2, #32
 8002888:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800288c:	68fb      	ldr	r3, [r7, #12]
 800288e:	2200      	movs	r2, #0
 8002890:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002898:	f043 0220 	orr.w	r2, r3, #32
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	2200      	movs	r2, #0
 80028a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028a8:	2301      	movs	r3, #1
 80028aa:	e007      	b.n	80028bc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	695b      	ldr	r3, [r3, #20]
 80028b2:	f003 0304 	and.w	r3, r3, #4
 80028b6:	2b04      	cmp	r3, #4
 80028b8:	d1c3      	bne.n	8002842 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80028ba:	2300      	movs	r3, #0
 80028bc:	4618      	mov	r0, r3
 80028be:	3710      	adds	r7, #16
 80028c0:	46bd      	mov	sp, r7
 80028c2:	bd80      	pop	{r7, pc}

080028c4 <I2C_IsAcknowledgeFailed>:
 80028c4:	b480      	push	{r7}
 80028c6:	b083      	sub	sp, #12
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	6078      	str	r0, [r7, #4]
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	695b      	ldr	r3, [r3, #20]
 80028d2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80028d6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80028da:	d11b      	bne.n	8002914 <I2C_IsAcknowledgeFailed+0x50>
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80028e4:	615a      	str	r2, [r3, #20]
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	2200      	movs	r2, #0
 80028ea:	631a      	str	r2, [r3, #48]	; 0x30
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	2220      	movs	r2, #32
 80028f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	2200      	movs	r2, #0
 80028f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002900:	f043 0204 	orr.w	r2, r3, #4
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	641a      	str	r2, [r3, #64]	; 0x40
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	2200      	movs	r2, #0
 800290c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002910:	2301      	movs	r3, #1
 8002912:	e000      	b.n	8002916 <I2C_IsAcknowledgeFailed+0x52>
 8002914:	2300      	movs	r3, #0
 8002916:	4618      	mov	r0, r3
 8002918:	370c      	adds	r7, #12
 800291a:	46bd      	mov	sp, r7
 800291c:	bc80      	pop	{r7}
 800291e:	4770      	bx	lr

08002920 <HAL_RCC_OscConfig>:
 8002920:	b580      	push	{r7, lr}
 8002922:	b086      	sub	sp, #24
 8002924:	af00      	add	r7, sp, #0
 8002926:	6078      	str	r0, [r7, #4]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2b00      	cmp	r3, #0
 800292c:	d101      	bne.n	8002932 <HAL_RCC_OscConfig+0x12>
 800292e:	2301      	movs	r3, #1
 8002930:	e26c      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	f003 0301 	and.w	r3, r3, #1
 800293a:	2b00      	cmp	r3, #0
 800293c:	f000 8087 	beq.w	8002a4e <HAL_RCC_OscConfig+0x12e>
 8002940:	4b92      	ldr	r3, [pc, #584]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	f003 030c 	and.w	r3, r3, #12
 8002948:	2b04      	cmp	r3, #4
 800294a:	d00c      	beq.n	8002966 <HAL_RCC_OscConfig+0x46>
 800294c:	4b8f      	ldr	r3, [pc, #572]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 800294e:	685b      	ldr	r3, [r3, #4]
 8002950:	f003 030c 	and.w	r3, r3, #12
 8002954:	2b08      	cmp	r3, #8
 8002956:	d112      	bne.n	800297e <HAL_RCC_OscConfig+0x5e>
 8002958:	4b8c      	ldr	r3, [pc, #560]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 800295a:	685b      	ldr	r3, [r3, #4]
 800295c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002960:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002964:	d10b      	bne.n	800297e <HAL_RCC_OscConfig+0x5e>
 8002966:	4b89      	ldr	r3, [pc, #548]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800296e:	2b00      	cmp	r3, #0
 8002970:	d06c      	beq.n	8002a4c <HAL_RCC_OscConfig+0x12c>
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	685b      	ldr	r3, [r3, #4]
 8002976:	2b00      	cmp	r3, #0
 8002978:	d168      	bne.n	8002a4c <HAL_RCC_OscConfig+0x12c>
 800297a:	2301      	movs	r3, #1
 800297c:	e246      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	685b      	ldr	r3, [r3, #4]
 8002982:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002986:	d106      	bne.n	8002996 <HAL_RCC_OscConfig+0x76>
 8002988:	4b80      	ldr	r3, [pc, #512]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	4a7f      	ldr	r2, [pc, #508]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 800298e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002992:	6013      	str	r3, [r2, #0]
 8002994:	e02e      	b.n	80029f4 <HAL_RCC_OscConfig+0xd4>
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	685b      	ldr	r3, [r3, #4]
 800299a:	2b00      	cmp	r3, #0
 800299c:	d10c      	bne.n	80029b8 <HAL_RCC_OscConfig+0x98>
 800299e:	4b7b      	ldr	r3, [pc, #492]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	4a7a      	ldr	r2, [pc, #488]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80029a8:	6013      	str	r3, [r2, #0]
 80029aa:	4b78      	ldr	r3, [pc, #480]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	4a77      	ldr	r2, [pc, #476]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029b0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80029b4:	6013      	str	r3, [r2, #0]
 80029b6:	e01d      	b.n	80029f4 <HAL_RCC_OscConfig+0xd4>
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	685b      	ldr	r3, [r3, #4]
 80029bc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80029c0:	d10c      	bne.n	80029dc <HAL_RCC_OscConfig+0xbc>
 80029c2:	4b72      	ldr	r3, [pc, #456]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	4a71      	ldr	r2, [pc, #452]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029c8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80029cc:	6013      	str	r3, [r2, #0]
 80029ce:	4b6f      	ldr	r3, [pc, #444]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	4a6e      	ldr	r2, [pc, #440]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80029d8:	6013      	str	r3, [r2, #0]
 80029da:	e00b      	b.n	80029f4 <HAL_RCC_OscConfig+0xd4>
 80029dc:	4b6b      	ldr	r3, [pc, #428]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a6a      	ldr	r2, [pc, #424]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029e2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80029e6:	6013      	str	r3, [r2, #0]
 80029e8:	4b68      	ldr	r3, [pc, #416]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	4a67      	ldr	r2, [pc, #412]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 80029ee:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80029f2:	6013      	str	r3, [r2, #0]
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	685b      	ldr	r3, [r3, #4]
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d013      	beq.n	8002a24 <HAL_RCC_OscConfig+0x104>
 80029fc:	f7fe ffe2 	bl	80019c4 <HAL_GetTick>
 8002a00:	6138      	str	r0, [r7, #16]
 8002a02:	e008      	b.n	8002a16 <HAL_RCC_OscConfig+0xf6>
 8002a04:	f7fe ffde 	bl	80019c4 <HAL_GetTick>
 8002a08:	4602      	mov	r2, r0
 8002a0a:	693b      	ldr	r3, [r7, #16]
 8002a0c:	1ad3      	subs	r3, r2, r3
 8002a0e:	2b64      	cmp	r3, #100	; 0x64
 8002a10:	d901      	bls.n	8002a16 <HAL_RCC_OscConfig+0xf6>
 8002a12:	2303      	movs	r3, #3
 8002a14:	e1fa      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002a16:	4b5d      	ldr	r3, [pc, #372]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d0f0      	beq.n	8002a04 <HAL_RCC_OscConfig+0xe4>
 8002a22:	e014      	b.n	8002a4e <HAL_RCC_OscConfig+0x12e>
 8002a24:	f7fe ffce 	bl	80019c4 <HAL_GetTick>
 8002a28:	6138      	str	r0, [r7, #16]
 8002a2a:	e008      	b.n	8002a3e <HAL_RCC_OscConfig+0x11e>
 8002a2c:	f7fe ffca 	bl	80019c4 <HAL_GetTick>
 8002a30:	4602      	mov	r2, r0
 8002a32:	693b      	ldr	r3, [r7, #16]
 8002a34:	1ad3      	subs	r3, r2, r3
 8002a36:	2b64      	cmp	r3, #100	; 0x64
 8002a38:	d901      	bls.n	8002a3e <HAL_RCC_OscConfig+0x11e>
 8002a3a:	2303      	movs	r3, #3
 8002a3c:	e1e6      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002a3e:	4b53      	ldr	r3, [pc, #332]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d1f0      	bne.n	8002a2c <HAL_RCC_OscConfig+0x10c>
 8002a4a:	e000      	b.n	8002a4e <HAL_RCC_OscConfig+0x12e>
 8002a4c:	bf00      	nop
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f003 0302 	and.w	r3, r3, #2
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d063      	beq.n	8002b22 <HAL_RCC_OscConfig+0x202>
 8002a5a:	4b4c      	ldr	r3, [pc, #304]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a5c:	685b      	ldr	r3, [r3, #4]
 8002a5e:	f003 030c 	and.w	r3, r3, #12
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d00b      	beq.n	8002a7e <HAL_RCC_OscConfig+0x15e>
 8002a66:	4b49      	ldr	r3, [pc, #292]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a68:	685b      	ldr	r3, [r3, #4]
 8002a6a:	f003 030c 	and.w	r3, r3, #12
 8002a6e:	2b08      	cmp	r3, #8
 8002a70:	d11c      	bne.n	8002aac <HAL_RCC_OscConfig+0x18c>
 8002a72:	4b46      	ldr	r3, [pc, #280]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a74:	685b      	ldr	r3, [r3, #4]
 8002a76:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d116      	bne.n	8002aac <HAL_RCC_OscConfig+0x18c>
 8002a7e:	4b43      	ldr	r3, [pc, #268]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	f003 0302 	and.w	r3, r3, #2
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d005      	beq.n	8002a96 <HAL_RCC_OscConfig+0x176>
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	691b      	ldr	r3, [r3, #16]
 8002a8e:	2b01      	cmp	r3, #1
 8002a90:	d001      	beq.n	8002a96 <HAL_RCC_OscConfig+0x176>
 8002a92:	2301      	movs	r3, #1
 8002a94:	e1ba      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002a96:	4b3d      	ldr	r3, [pc, #244]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	695b      	ldr	r3, [r3, #20]
 8002aa2:	00db      	lsls	r3, r3, #3
 8002aa4:	4939      	ldr	r1, [pc, #228]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002aa6:	4313      	orrs	r3, r2
 8002aa8:	600b      	str	r3, [r1, #0]
 8002aaa:	e03a      	b.n	8002b22 <HAL_RCC_OscConfig+0x202>
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	691b      	ldr	r3, [r3, #16]
 8002ab0:	2b00      	cmp	r3, #0
 8002ab2:	d020      	beq.n	8002af6 <HAL_RCC_OscConfig+0x1d6>
 8002ab4:	4b36      	ldr	r3, [pc, #216]	; (8002b90 <HAL_RCC_OscConfig+0x270>)
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	601a      	str	r2, [r3, #0]
 8002aba:	f7fe ff83 	bl	80019c4 <HAL_GetTick>
 8002abe:	6138      	str	r0, [r7, #16]
 8002ac0:	e008      	b.n	8002ad4 <HAL_RCC_OscConfig+0x1b4>
 8002ac2:	f7fe ff7f 	bl	80019c4 <HAL_GetTick>
 8002ac6:	4602      	mov	r2, r0
 8002ac8:	693b      	ldr	r3, [r7, #16]
 8002aca:	1ad3      	subs	r3, r2, r3
 8002acc:	2b02      	cmp	r3, #2
 8002ace:	d901      	bls.n	8002ad4 <HAL_RCC_OscConfig+0x1b4>
 8002ad0:	2303      	movs	r3, #3
 8002ad2:	e19b      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002ad4:	4b2d      	ldr	r3, [pc, #180]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f003 0302 	and.w	r3, r3, #2
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	d0f0      	beq.n	8002ac2 <HAL_RCC_OscConfig+0x1a2>
 8002ae0:	4b2a      	ldr	r3, [pc, #168]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002ae2:	681b      	ldr	r3, [r3, #0]
 8002ae4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	695b      	ldr	r3, [r3, #20]
 8002aec:	00db      	lsls	r3, r3, #3
 8002aee:	4927      	ldr	r1, [pc, #156]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002af0:	4313      	orrs	r3, r2
 8002af2:	600b      	str	r3, [r1, #0]
 8002af4:	e015      	b.n	8002b22 <HAL_RCC_OscConfig+0x202>
 8002af6:	4b26      	ldr	r3, [pc, #152]	; (8002b90 <HAL_RCC_OscConfig+0x270>)
 8002af8:	2200      	movs	r2, #0
 8002afa:	601a      	str	r2, [r3, #0]
 8002afc:	f7fe ff62 	bl	80019c4 <HAL_GetTick>
 8002b00:	6138      	str	r0, [r7, #16]
 8002b02:	e008      	b.n	8002b16 <HAL_RCC_OscConfig+0x1f6>
 8002b04:	f7fe ff5e 	bl	80019c4 <HAL_GetTick>
 8002b08:	4602      	mov	r2, r0
 8002b0a:	693b      	ldr	r3, [r7, #16]
 8002b0c:	1ad3      	subs	r3, r2, r3
 8002b0e:	2b02      	cmp	r3, #2
 8002b10:	d901      	bls.n	8002b16 <HAL_RCC_OscConfig+0x1f6>
 8002b12:	2303      	movs	r3, #3
 8002b14:	e17a      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002b16:	4b1d      	ldr	r3, [pc, #116]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	f003 0302 	and.w	r3, r3, #2
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d1f0      	bne.n	8002b04 <HAL_RCC_OscConfig+0x1e4>
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	f003 0308 	and.w	r3, r3, #8
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d03a      	beq.n	8002ba4 <HAL_RCC_OscConfig+0x284>
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	699b      	ldr	r3, [r3, #24]
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d019      	beq.n	8002b6a <HAL_RCC_OscConfig+0x24a>
 8002b36:	4b17      	ldr	r3, [pc, #92]	; (8002b94 <HAL_RCC_OscConfig+0x274>)
 8002b38:	2201      	movs	r2, #1
 8002b3a:	601a      	str	r2, [r3, #0]
 8002b3c:	f7fe ff42 	bl	80019c4 <HAL_GetTick>
 8002b40:	6138      	str	r0, [r7, #16]
 8002b42:	e008      	b.n	8002b56 <HAL_RCC_OscConfig+0x236>
 8002b44:	f7fe ff3e 	bl	80019c4 <HAL_GetTick>
 8002b48:	4602      	mov	r2, r0
 8002b4a:	693b      	ldr	r3, [r7, #16]
 8002b4c:	1ad3      	subs	r3, r2, r3
 8002b4e:	2b02      	cmp	r3, #2
 8002b50:	d901      	bls.n	8002b56 <HAL_RCC_OscConfig+0x236>
 8002b52:	2303      	movs	r3, #3
 8002b54:	e15a      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002b56:	4b0d      	ldr	r3, [pc, #52]	; (8002b8c <HAL_RCC_OscConfig+0x26c>)
 8002b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b5a:	f003 0302 	and.w	r3, r3, #2
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d0f0      	beq.n	8002b44 <HAL_RCC_OscConfig+0x224>
 8002b62:	2001      	movs	r0, #1
 8002b64:	f000 facc 	bl	8003100 <RCC_Delay>
 8002b68:	e01c      	b.n	8002ba4 <HAL_RCC_OscConfig+0x284>
 8002b6a:	4b0a      	ldr	r3, [pc, #40]	; (8002b94 <HAL_RCC_OscConfig+0x274>)
 8002b6c:	2200      	movs	r2, #0
 8002b6e:	601a      	str	r2, [r3, #0]
 8002b70:	f7fe ff28 	bl	80019c4 <HAL_GetTick>
 8002b74:	6138      	str	r0, [r7, #16]
 8002b76:	e00f      	b.n	8002b98 <HAL_RCC_OscConfig+0x278>
 8002b78:	f7fe ff24 	bl	80019c4 <HAL_GetTick>
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	693b      	ldr	r3, [r7, #16]
 8002b80:	1ad3      	subs	r3, r2, r3
 8002b82:	2b02      	cmp	r3, #2
 8002b84:	d908      	bls.n	8002b98 <HAL_RCC_OscConfig+0x278>
 8002b86:	2303      	movs	r3, #3
 8002b88:	e140      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002b8a:	bf00      	nop
 8002b8c:	40021000 	.word	0x40021000
 8002b90:	42420000 	.word	0x42420000
 8002b94:	42420480 	.word	0x42420480
 8002b98:	4b9e      	ldr	r3, [pc, #632]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b9c:	f003 0302 	and.w	r3, r3, #2
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	d1e9      	bne.n	8002b78 <HAL_RCC_OscConfig+0x258>
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	f003 0304 	and.w	r3, r3, #4
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	f000 80a6 	beq.w	8002cfe <HAL_RCC_OscConfig+0x3de>
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	75fb      	strb	r3, [r7, #23]
 8002bb6:	4b97      	ldr	r3, [pc, #604]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002bb8:	69db      	ldr	r3, [r3, #28]
 8002bba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d10d      	bne.n	8002bde <HAL_RCC_OscConfig+0x2be>
 8002bc2:	4b94      	ldr	r3, [pc, #592]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002bc4:	69db      	ldr	r3, [r3, #28]
 8002bc6:	4a93      	ldr	r2, [pc, #588]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002bc8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002bcc:	61d3      	str	r3, [r2, #28]
 8002bce:	4b91      	ldr	r3, [pc, #580]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002bd0:	69db      	ldr	r3, [r3, #28]
 8002bd2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002bd6:	60bb      	str	r3, [r7, #8]
 8002bd8:	68bb      	ldr	r3, [r7, #8]
 8002bda:	2301      	movs	r3, #1
 8002bdc:	75fb      	strb	r3, [r7, #23]
 8002bde:	4b8e      	ldr	r3, [pc, #568]	; (8002e18 <HAL_RCC_OscConfig+0x4f8>)
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d118      	bne.n	8002c1c <HAL_RCC_OscConfig+0x2fc>
 8002bea:	4b8b      	ldr	r3, [pc, #556]	; (8002e18 <HAL_RCC_OscConfig+0x4f8>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	4a8a      	ldr	r2, [pc, #552]	; (8002e18 <HAL_RCC_OscConfig+0x4f8>)
 8002bf0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002bf4:	6013      	str	r3, [r2, #0]
 8002bf6:	f7fe fee5 	bl	80019c4 <HAL_GetTick>
 8002bfa:	6138      	str	r0, [r7, #16]
 8002bfc:	e008      	b.n	8002c10 <HAL_RCC_OscConfig+0x2f0>
 8002bfe:	f7fe fee1 	bl	80019c4 <HAL_GetTick>
 8002c02:	4602      	mov	r2, r0
 8002c04:	693b      	ldr	r3, [r7, #16]
 8002c06:	1ad3      	subs	r3, r2, r3
 8002c08:	2b64      	cmp	r3, #100	; 0x64
 8002c0a:	d901      	bls.n	8002c10 <HAL_RCC_OscConfig+0x2f0>
 8002c0c:	2303      	movs	r3, #3
 8002c0e:	e0fd      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002c10:	4b81      	ldr	r3, [pc, #516]	; (8002e18 <HAL_RCC_OscConfig+0x4f8>)
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d0f0      	beq.n	8002bfe <HAL_RCC_OscConfig+0x2de>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	68db      	ldr	r3, [r3, #12]
 8002c20:	2b01      	cmp	r3, #1
 8002c22:	d106      	bne.n	8002c32 <HAL_RCC_OscConfig+0x312>
 8002c24:	4b7b      	ldr	r3, [pc, #492]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c26:	6a1b      	ldr	r3, [r3, #32]
 8002c28:	4a7a      	ldr	r2, [pc, #488]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c2a:	f043 0301 	orr.w	r3, r3, #1
 8002c2e:	6213      	str	r3, [r2, #32]
 8002c30:	e02d      	b.n	8002c8e <HAL_RCC_OscConfig+0x36e>
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	68db      	ldr	r3, [r3, #12]
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d10c      	bne.n	8002c54 <HAL_RCC_OscConfig+0x334>
 8002c3a:	4b76      	ldr	r3, [pc, #472]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c3c:	6a1b      	ldr	r3, [r3, #32]
 8002c3e:	4a75      	ldr	r2, [pc, #468]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c40:	f023 0301 	bic.w	r3, r3, #1
 8002c44:	6213      	str	r3, [r2, #32]
 8002c46:	4b73      	ldr	r3, [pc, #460]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c48:	6a1b      	ldr	r3, [r3, #32]
 8002c4a:	4a72      	ldr	r2, [pc, #456]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c4c:	f023 0304 	bic.w	r3, r3, #4
 8002c50:	6213      	str	r3, [r2, #32]
 8002c52:	e01c      	b.n	8002c8e <HAL_RCC_OscConfig+0x36e>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	68db      	ldr	r3, [r3, #12]
 8002c58:	2b05      	cmp	r3, #5
 8002c5a:	d10c      	bne.n	8002c76 <HAL_RCC_OscConfig+0x356>
 8002c5c:	4b6d      	ldr	r3, [pc, #436]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c5e:	6a1b      	ldr	r3, [r3, #32]
 8002c60:	4a6c      	ldr	r2, [pc, #432]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c62:	f043 0304 	orr.w	r3, r3, #4
 8002c66:	6213      	str	r3, [r2, #32]
 8002c68:	4b6a      	ldr	r3, [pc, #424]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c6a:	6a1b      	ldr	r3, [r3, #32]
 8002c6c:	4a69      	ldr	r2, [pc, #420]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c6e:	f043 0301 	orr.w	r3, r3, #1
 8002c72:	6213      	str	r3, [r2, #32]
 8002c74:	e00b      	b.n	8002c8e <HAL_RCC_OscConfig+0x36e>
 8002c76:	4b67      	ldr	r3, [pc, #412]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c78:	6a1b      	ldr	r3, [r3, #32]
 8002c7a:	4a66      	ldr	r2, [pc, #408]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c7c:	f023 0301 	bic.w	r3, r3, #1
 8002c80:	6213      	str	r3, [r2, #32]
 8002c82:	4b64      	ldr	r3, [pc, #400]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c84:	6a1b      	ldr	r3, [r3, #32]
 8002c86:	4a63      	ldr	r2, [pc, #396]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002c88:	f023 0304 	bic.w	r3, r3, #4
 8002c8c:	6213      	str	r3, [r2, #32]
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	68db      	ldr	r3, [r3, #12]
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d015      	beq.n	8002cc2 <HAL_RCC_OscConfig+0x3a2>
 8002c96:	f7fe fe95 	bl	80019c4 <HAL_GetTick>
 8002c9a:	6138      	str	r0, [r7, #16]
 8002c9c:	e00a      	b.n	8002cb4 <HAL_RCC_OscConfig+0x394>
 8002c9e:	f7fe fe91 	bl	80019c4 <HAL_GetTick>
 8002ca2:	4602      	mov	r2, r0
 8002ca4:	693b      	ldr	r3, [r7, #16]
 8002ca6:	1ad3      	subs	r3, r2, r3
 8002ca8:	f241 3288 	movw	r2, #5000	; 0x1388
 8002cac:	4293      	cmp	r3, r2
 8002cae:	d901      	bls.n	8002cb4 <HAL_RCC_OscConfig+0x394>
 8002cb0:	2303      	movs	r3, #3
 8002cb2:	e0ab      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002cb4:	4b57      	ldr	r3, [pc, #348]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002cb6:	6a1b      	ldr	r3, [r3, #32]
 8002cb8:	f003 0302 	and.w	r3, r3, #2
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d0ee      	beq.n	8002c9e <HAL_RCC_OscConfig+0x37e>
 8002cc0:	e014      	b.n	8002cec <HAL_RCC_OscConfig+0x3cc>
 8002cc2:	f7fe fe7f 	bl	80019c4 <HAL_GetTick>
 8002cc6:	6138      	str	r0, [r7, #16]
 8002cc8:	e00a      	b.n	8002ce0 <HAL_RCC_OscConfig+0x3c0>
 8002cca:	f7fe fe7b 	bl	80019c4 <HAL_GetTick>
 8002cce:	4602      	mov	r2, r0
 8002cd0:	693b      	ldr	r3, [r7, #16]
 8002cd2:	1ad3      	subs	r3, r2, r3
 8002cd4:	f241 3288 	movw	r2, #5000	; 0x1388
 8002cd8:	4293      	cmp	r3, r2
 8002cda:	d901      	bls.n	8002ce0 <HAL_RCC_OscConfig+0x3c0>
 8002cdc:	2303      	movs	r3, #3
 8002cde:	e095      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002ce0:	4b4c      	ldr	r3, [pc, #304]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002ce2:	6a1b      	ldr	r3, [r3, #32]
 8002ce4:	f003 0302 	and.w	r3, r3, #2
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d1ee      	bne.n	8002cca <HAL_RCC_OscConfig+0x3aa>
 8002cec:	7dfb      	ldrb	r3, [r7, #23]
 8002cee:	2b01      	cmp	r3, #1
 8002cf0:	d105      	bne.n	8002cfe <HAL_RCC_OscConfig+0x3de>
 8002cf2:	4b48      	ldr	r3, [pc, #288]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002cf4:	69db      	ldr	r3, [r3, #28]
 8002cf6:	4a47      	ldr	r2, [pc, #284]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002cf8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002cfc:	61d3      	str	r3, [r2, #28]
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	69db      	ldr	r3, [r3, #28]
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	f000 8081 	beq.w	8002e0a <HAL_RCC_OscConfig+0x4ea>
 8002d08:	4b42      	ldr	r3, [pc, #264]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d0a:	685b      	ldr	r3, [r3, #4]
 8002d0c:	f003 030c 	and.w	r3, r3, #12
 8002d10:	2b08      	cmp	r3, #8
 8002d12:	d061      	beq.n	8002dd8 <HAL_RCC_OscConfig+0x4b8>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	69db      	ldr	r3, [r3, #28]
 8002d18:	2b02      	cmp	r3, #2
 8002d1a:	d146      	bne.n	8002daa <HAL_RCC_OscConfig+0x48a>
 8002d1c:	4b3f      	ldr	r3, [pc, #252]	; (8002e1c <HAL_RCC_OscConfig+0x4fc>)
 8002d1e:	2200      	movs	r2, #0
 8002d20:	601a      	str	r2, [r3, #0]
 8002d22:	f7fe fe4f 	bl	80019c4 <HAL_GetTick>
 8002d26:	6138      	str	r0, [r7, #16]
 8002d28:	e008      	b.n	8002d3c <HAL_RCC_OscConfig+0x41c>
 8002d2a:	f7fe fe4b 	bl	80019c4 <HAL_GetTick>
 8002d2e:	4602      	mov	r2, r0
 8002d30:	693b      	ldr	r3, [r7, #16]
 8002d32:	1ad3      	subs	r3, r2, r3
 8002d34:	2b02      	cmp	r3, #2
 8002d36:	d901      	bls.n	8002d3c <HAL_RCC_OscConfig+0x41c>
 8002d38:	2303      	movs	r3, #3
 8002d3a:	e067      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002d3c:	4b35      	ldr	r3, [pc, #212]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d1f0      	bne.n	8002d2a <HAL_RCC_OscConfig+0x40a>
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	6a1b      	ldr	r3, [r3, #32]
 8002d4c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002d50:	d108      	bne.n	8002d64 <HAL_RCC_OscConfig+0x444>
 8002d52:	4b30      	ldr	r3, [pc, #192]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d54:	685b      	ldr	r3, [r3, #4]
 8002d56:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	689b      	ldr	r3, [r3, #8]
 8002d5e:	492d      	ldr	r1, [pc, #180]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d60:	4313      	orrs	r3, r2
 8002d62:	604b      	str	r3, [r1, #4]
 8002d64:	4b2b      	ldr	r3, [pc, #172]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d66:	685b      	ldr	r3, [r3, #4]
 8002d68:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	6a19      	ldr	r1, [r3, #32]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d74:	430b      	orrs	r3, r1
 8002d76:	4927      	ldr	r1, [pc, #156]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d78:	4313      	orrs	r3, r2
 8002d7a:	604b      	str	r3, [r1, #4]
 8002d7c:	4b27      	ldr	r3, [pc, #156]	; (8002e1c <HAL_RCC_OscConfig+0x4fc>)
 8002d7e:	2201      	movs	r2, #1
 8002d80:	601a      	str	r2, [r3, #0]
 8002d82:	f7fe fe1f 	bl	80019c4 <HAL_GetTick>
 8002d86:	6138      	str	r0, [r7, #16]
 8002d88:	e008      	b.n	8002d9c <HAL_RCC_OscConfig+0x47c>
 8002d8a:	f7fe fe1b 	bl	80019c4 <HAL_GetTick>
 8002d8e:	4602      	mov	r2, r0
 8002d90:	693b      	ldr	r3, [r7, #16]
 8002d92:	1ad3      	subs	r3, r2, r3
 8002d94:	2b02      	cmp	r3, #2
 8002d96:	d901      	bls.n	8002d9c <HAL_RCC_OscConfig+0x47c>
 8002d98:	2303      	movs	r3, #3
 8002d9a:	e037      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002d9c:	4b1d      	ldr	r3, [pc, #116]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d0f0      	beq.n	8002d8a <HAL_RCC_OscConfig+0x46a>
 8002da8:	e02f      	b.n	8002e0a <HAL_RCC_OscConfig+0x4ea>
 8002daa:	4b1c      	ldr	r3, [pc, #112]	; (8002e1c <HAL_RCC_OscConfig+0x4fc>)
 8002dac:	2200      	movs	r2, #0
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	f7fe fe08 	bl	80019c4 <HAL_GetTick>
 8002db4:	6138      	str	r0, [r7, #16]
 8002db6:	e008      	b.n	8002dca <HAL_RCC_OscConfig+0x4aa>
 8002db8:	f7fe fe04 	bl	80019c4 <HAL_GetTick>
 8002dbc:	4602      	mov	r2, r0
 8002dbe:	693b      	ldr	r3, [r7, #16]
 8002dc0:	1ad3      	subs	r3, r2, r3
 8002dc2:	2b02      	cmp	r3, #2
 8002dc4:	d901      	bls.n	8002dca <HAL_RCC_OscConfig+0x4aa>
 8002dc6:	2303      	movs	r3, #3
 8002dc8:	e020      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002dca:	4b12      	ldr	r3, [pc, #72]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d1f0      	bne.n	8002db8 <HAL_RCC_OscConfig+0x498>
 8002dd6:	e018      	b.n	8002e0a <HAL_RCC_OscConfig+0x4ea>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	69db      	ldr	r3, [r3, #28]
 8002ddc:	2b01      	cmp	r3, #1
 8002dde:	d101      	bne.n	8002de4 <HAL_RCC_OscConfig+0x4c4>
 8002de0:	2301      	movs	r3, #1
 8002de2:	e013      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002de4:	4b0b      	ldr	r3, [pc, #44]	; (8002e14 <HAL_RCC_OscConfig+0x4f4>)
 8002de6:	685b      	ldr	r3, [r3, #4]
 8002de8:	60fb      	str	r3, [r7, #12]
 8002dea:	68fb      	ldr	r3, [r7, #12]
 8002dec:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	6a1b      	ldr	r3, [r3, #32]
 8002df4:	429a      	cmp	r2, r3
 8002df6:	d106      	bne.n	8002e06 <HAL_RCC_OscConfig+0x4e6>
 8002df8:	68fb      	ldr	r3, [r7, #12]
 8002dfa:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e02:	429a      	cmp	r2, r3
 8002e04:	d001      	beq.n	8002e0a <HAL_RCC_OscConfig+0x4ea>
 8002e06:	2301      	movs	r3, #1
 8002e08:	e000      	b.n	8002e0c <HAL_RCC_OscConfig+0x4ec>
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	4618      	mov	r0, r3
 8002e0e:	3718      	adds	r7, #24
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	40021000 	.word	0x40021000
 8002e18:	40007000 	.word	0x40007000
 8002e1c:	42420060 	.word	0x42420060

08002e20 <HAL_RCC_ClockConfig>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	b084      	sub	sp, #16
 8002e24:	af00      	add	r7, sp, #0
 8002e26:	6078      	str	r0, [r7, #4]
 8002e28:	6039      	str	r1, [r7, #0]
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d101      	bne.n	8002e34 <HAL_RCC_ClockConfig+0x14>
 8002e30:	2301      	movs	r3, #1
 8002e32:	e0d0      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002e34:	4b6a      	ldr	r3, [pc, #424]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	f003 0307 	and.w	r3, r3, #7
 8002e3c:	683a      	ldr	r2, [r7, #0]
 8002e3e:	429a      	cmp	r2, r3
 8002e40:	d910      	bls.n	8002e64 <HAL_RCC_ClockConfig+0x44>
 8002e42:	4b67      	ldr	r3, [pc, #412]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	f023 0207 	bic.w	r2, r3, #7
 8002e4a:	4965      	ldr	r1, [pc, #404]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002e4c:	683b      	ldr	r3, [r7, #0]
 8002e4e:	4313      	orrs	r3, r2
 8002e50:	600b      	str	r3, [r1, #0]
 8002e52:	4b63      	ldr	r3, [pc, #396]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	f003 0307 	and.w	r3, r3, #7
 8002e5a:	683a      	ldr	r2, [r7, #0]
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d001      	beq.n	8002e64 <HAL_RCC_ClockConfig+0x44>
 8002e60:	2301      	movs	r3, #1
 8002e62:	e0b8      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	f003 0302 	and.w	r3, r3, #2
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	d020      	beq.n	8002eb2 <HAL_RCC_ClockConfig+0x92>
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f003 0304 	and.w	r3, r3, #4
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d005      	beq.n	8002e88 <HAL_RCC_ClockConfig+0x68>
 8002e7c:	4b59      	ldr	r3, [pc, #356]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002e7e:	685b      	ldr	r3, [r3, #4]
 8002e80:	4a58      	ldr	r2, [pc, #352]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002e82:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002e86:	6053      	str	r3, [r2, #4]
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	f003 0308 	and.w	r3, r3, #8
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d005      	beq.n	8002ea0 <HAL_RCC_ClockConfig+0x80>
 8002e94:	4b53      	ldr	r3, [pc, #332]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002e96:	685b      	ldr	r3, [r3, #4]
 8002e98:	4a52      	ldr	r2, [pc, #328]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002e9a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002e9e:	6053      	str	r3, [r2, #4]
 8002ea0:	4b50      	ldr	r3, [pc, #320]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002ea2:	685b      	ldr	r3, [r3, #4]
 8002ea4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	689b      	ldr	r3, [r3, #8]
 8002eac:	494d      	ldr	r1, [pc, #308]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002eae:	4313      	orrs	r3, r2
 8002eb0:	604b      	str	r3, [r1, #4]
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	f003 0301 	and.w	r3, r3, #1
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d040      	beq.n	8002f40 <HAL_RCC_ClockConfig+0x120>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	685b      	ldr	r3, [r3, #4]
 8002ec2:	2b01      	cmp	r3, #1
 8002ec4:	d107      	bne.n	8002ed6 <HAL_RCC_ClockConfig+0xb6>
 8002ec6:	4b47      	ldr	r3, [pc, #284]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d115      	bne.n	8002efe <HAL_RCC_ClockConfig+0xde>
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	e07f      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	685b      	ldr	r3, [r3, #4]
 8002eda:	2b02      	cmp	r3, #2
 8002edc:	d107      	bne.n	8002eee <HAL_RCC_ClockConfig+0xce>
 8002ede:	4b41      	ldr	r3, [pc, #260]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d109      	bne.n	8002efe <HAL_RCC_ClockConfig+0xde>
 8002eea:	2301      	movs	r3, #1
 8002eec:	e073      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002eee:	4b3d      	ldr	r3, [pc, #244]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	f003 0302 	and.w	r3, r3, #2
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d101      	bne.n	8002efe <HAL_RCC_ClockConfig+0xde>
 8002efa:	2301      	movs	r3, #1
 8002efc:	e06b      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002efe:	4b39      	ldr	r3, [pc, #228]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f00:	685b      	ldr	r3, [r3, #4]
 8002f02:	f023 0203 	bic.w	r2, r3, #3
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	685b      	ldr	r3, [r3, #4]
 8002f0a:	4936      	ldr	r1, [pc, #216]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f0c:	4313      	orrs	r3, r2
 8002f0e:	604b      	str	r3, [r1, #4]
 8002f10:	f7fe fd58 	bl	80019c4 <HAL_GetTick>
 8002f14:	60f8      	str	r0, [r7, #12]
 8002f16:	e00a      	b.n	8002f2e <HAL_RCC_ClockConfig+0x10e>
 8002f18:	f7fe fd54 	bl	80019c4 <HAL_GetTick>
 8002f1c:	4602      	mov	r2, r0
 8002f1e:	68fb      	ldr	r3, [r7, #12]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	f241 3288 	movw	r2, #5000	; 0x1388
 8002f26:	4293      	cmp	r3, r2
 8002f28:	d901      	bls.n	8002f2e <HAL_RCC_ClockConfig+0x10e>
 8002f2a:	2303      	movs	r3, #3
 8002f2c:	e053      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002f2e:	4b2d      	ldr	r3, [pc, #180]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f30:	685b      	ldr	r3, [r3, #4]
 8002f32:	f003 020c 	and.w	r2, r3, #12
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	685b      	ldr	r3, [r3, #4]
 8002f3a:	009b      	lsls	r3, r3, #2
 8002f3c:	429a      	cmp	r2, r3
 8002f3e:	d1eb      	bne.n	8002f18 <HAL_RCC_ClockConfig+0xf8>
 8002f40:	4b27      	ldr	r3, [pc, #156]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	f003 0307 	and.w	r3, r3, #7
 8002f48:	683a      	ldr	r2, [r7, #0]
 8002f4a:	429a      	cmp	r2, r3
 8002f4c:	d210      	bcs.n	8002f70 <HAL_RCC_ClockConfig+0x150>
 8002f4e:	4b24      	ldr	r3, [pc, #144]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	f023 0207 	bic.w	r2, r3, #7
 8002f56:	4922      	ldr	r1, [pc, #136]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	4313      	orrs	r3, r2
 8002f5c:	600b      	str	r3, [r1, #0]
 8002f5e:	4b20      	ldr	r3, [pc, #128]	; (8002fe0 <HAL_RCC_ClockConfig+0x1c0>)
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f003 0307 	and.w	r3, r3, #7
 8002f66:	683a      	ldr	r2, [r7, #0]
 8002f68:	429a      	cmp	r2, r3
 8002f6a:	d001      	beq.n	8002f70 <HAL_RCC_ClockConfig+0x150>
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	e032      	b.n	8002fd6 <HAL_RCC_ClockConfig+0x1b6>
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	f003 0304 	and.w	r3, r3, #4
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	d008      	beq.n	8002f8e <HAL_RCC_ClockConfig+0x16e>
 8002f7c:	4b19      	ldr	r3, [pc, #100]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f7e:	685b      	ldr	r3, [r3, #4]
 8002f80:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	68db      	ldr	r3, [r3, #12]
 8002f88:	4916      	ldr	r1, [pc, #88]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f8a:	4313      	orrs	r3, r2
 8002f8c:	604b      	str	r3, [r1, #4]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	f003 0308 	and.w	r3, r3, #8
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d009      	beq.n	8002fae <HAL_RCC_ClockConfig+0x18e>
 8002f9a:	4b12      	ldr	r3, [pc, #72]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002f9c:	685b      	ldr	r3, [r3, #4]
 8002f9e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	691b      	ldr	r3, [r3, #16]
 8002fa6:	00db      	lsls	r3, r3, #3
 8002fa8:	490e      	ldr	r1, [pc, #56]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002faa:	4313      	orrs	r3, r2
 8002fac:	604b      	str	r3, [r1, #4]
 8002fae:	f000 f821 	bl	8002ff4 <HAL_RCC_GetSysClockFreq>
 8002fb2:	4602      	mov	r2, r0
 8002fb4:	4b0b      	ldr	r3, [pc, #44]	; (8002fe4 <HAL_RCC_ClockConfig+0x1c4>)
 8002fb6:	685b      	ldr	r3, [r3, #4]
 8002fb8:	091b      	lsrs	r3, r3, #4
 8002fba:	f003 030f 	and.w	r3, r3, #15
 8002fbe:	490a      	ldr	r1, [pc, #40]	; (8002fe8 <HAL_RCC_ClockConfig+0x1c8>)
 8002fc0:	5ccb      	ldrb	r3, [r1, r3]
 8002fc2:	fa22 f303 	lsr.w	r3, r2, r3
 8002fc6:	4a09      	ldr	r2, [pc, #36]	; (8002fec <HAL_RCC_ClockConfig+0x1cc>)
 8002fc8:	6013      	str	r3, [r2, #0]
 8002fca:	4b09      	ldr	r3, [pc, #36]	; (8002ff0 <HAL_RCC_ClockConfig+0x1d0>)
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	4618      	mov	r0, r3
 8002fd0:	f7fe fcb6 	bl	8001940 <HAL_InitTick>
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	4618      	mov	r0, r3
 8002fd8:	3710      	adds	r7, #16
 8002fda:	46bd      	mov	sp, r7
 8002fdc:	bd80      	pop	{r7, pc}
 8002fde:	bf00      	nop
 8002fe0:	40022000 	.word	0x40022000
 8002fe4:	40021000 	.word	0x40021000
 8002fe8:	08004430 	.word	0x08004430
 8002fec:	20000040 	.word	0x20000040
 8002ff0:	20000044 	.word	0x20000044

08002ff4 <HAL_RCC_GetSysClockFreq>:
 8002ff4:	b480      	push	{r7}
 8002ff6:	b087      	sub	sp, #28
 8002ff8:	af00      	add	r7, sp, #0
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	60fb      	str	r3, [r7, #12]
 8002ffe:	2300      	movs	r3, #0
 8003000:	60bb      	str	r3, [r7, #8]
 8003002:	2300      	movs	r3, #0
 8003004:	617b      	str	r3, [r7, #20]
 8003006:	2300      	movs	r3, #0
 8003008:	607b      	str	r3, [r7, #4]
 800300a:	2300      	movs	r3, #0
 800300c:	613b      	str	r3, [r7, #16]
 800300e:	4b1e      	ldr	r3, [pc, #120]	; (8003088 <HAL_RCC_GetSysClockFreq+0x94>)
 8003010:	685b      	ldr	r3, [r3, #4]
 8003012:	60fb      	str	r3, [r7, #12]
 8003014:	68fb      	ldr	r3, [r7, #12]
 8003016:	f003 030c 	and.w	r3, r3, #12
 800301a:	2b04      	cmp	r3, #4
 800301c:	d002      	beq.n	8003024 <HAL_RCC_GetSysClockFreq+0x30>
 800301e:	2b08      	cmp	r3, #8
 8003020:	d003      	beq.n	800302a <HAL_RCC_GetSysClockFreq+0x36>
 8003022:	e027      	b.n	8003074 <HAL_RCC_GetSysClockFreq+0x80>
 8003024:	4b19      	ldr	r3, [pc, #100]	; (800308c <HAL_RCC_GetSysClockFreq+0x98>)
 8003026:	613b      	str	r3, [r7, #16]
 8003028:	e027      	b.n	800307a <HAL_RCC_GetSysClockFreq+0x86>
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	0c9b      	lsrs	r3, r3, #18
 800302e:	f003 030f 	and.w	r3, r3, #15
 8003032:	4a17      	ldr	r2, [pc, #92]	; (8003090 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003034:	5cd3      	ldrb	r3, [r2, r3]
 8003036:	607b      	str	r3, [r7, #4]
 8003038:	68fb      	ldr	r3, [r7, #12]
 800303a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800303e:	2b00      	cmp	r3, #0
 8003040:	d010      	beq.n	8003064 <HAL_RCC_GetSysClockFreq+0x70>
 8003042:	4b11      	ldr	r3, [pc, #68]	; (8003088 <HAL_RCC_GetSysClockFreq+0x94>)
 8003044:	685b      	ldr	r3, [r3, #4]
 8003046:	0c5b      	lsrs	r3, r3, #17
 8003048:	f003 0301 	and.w	r3, r3, #1
 800304c:	4a11      	ldr	r2, [pc, #68]	; (8003094 <HAL_RCC_GetSysClockFreq+0xa0>)
 800304e:	5cd3      	ldrb	r3, [r2, r3]
 8003050:	60bb      	str	r3, [r7, #8]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	4a0d      	ldr	r2, [pc, #52]	; (800308c <HAL_RCC_GetSysClockFreq+0x98>)
 8003056:	fb02 f203 	mul.w	r2, r2, r3
 800305a:	68bb      	ldr	r3, [r7, #8]
 800305c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003060:	617b      	str	r3, [r7, #20]
 8003062:	e004      	b.n	800306e <HAL_RCC_GetSysClockFreq+0x7a>
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	4a0c      	ldr	r2, [pc, #48]	; (8003098 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003068:	fb02 f303 	mul.w	r3, r2, r3
 800306c:	617b      	str	r3, [r7, #20]
 800306e:	697b      	ldr	r3, [r7, #20]
 8003070:	613b      	str	r3, [r7, #16]
 8003072:	e002      	b.n	800307a <HAL_RCC_GetSysClockFreq+0x86>
 8003074:	4b05      	ldr	r3, [pc, #20]	; (800308c <HAL_RCC_GetSysClockFreq+0x98>)
 8003076:	613b      	str	r3, [r7, #16]
 8003078:	bf00      	nop
 800307a:	693b      	ldr	r3, [r7, #16]
 800307c:	4618      	mov	r0, r3
 800307e:	371c      	adds	r7, #28
 8003080:	46bd      	mov	sp, r7
 8003082:	bc80      	pop	{r7}
 8003084:	4770      	bx	lr
 8003086:	bf00      	nop
 8003088:	40021000 	.word	0x40021000
 800308c:	007a1200 	.word	0x007a1200
 8003090:	08004448 	.word	0x08004448
 8003094:	08004458 	.word	0x08004458
 8003098:	003d0900 	.word	0x003d0900

0800309c <HAL_RCC_GetHCLKFreq>:
 800309c:	b480      	push	{r7}
 800309e:	af00      	add	r7, sp, #0
 80030a0:	4b02      	ldr	r3, [pc, #8]	; (80030ac <HAL_RCC_GetHCLKFreq+0x10>)
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	4618      	mov	r0, r3
 80030a6:	46bd      	mov	sp, r7
 80030a8:	bc80      	pop	{r7}
 80030aa:	4770      	bx	lr
 80030ac:	20000040 	.word	0x20000040

080030b0 <HAL_RCC_GetPCLK1Freq>:
 80030b0:	b580      	push	{r7, lr}
 80030b2:	af00      	add	r7, sp, #0
 80030b4:	f7ff fff2 	bl	800309c <HAL_RCC_GetHCLKFreq>
 80030b8:	4602      	mov	r2, r0
 80030ba:	4b05      	ldr	r3, [pc, #20]	; (80030d0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80030bc:	685b      	ldr	r3, [r3, #4]
 80030be:	0a1b      	lsrs	r3, r3, #8
 80030c0:	f003 0307 	and.w	r3, r3, #7
 80030c4:	4903      	ldr	r1, [pc, #12]	; (80030d4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80030c6:	5ccb      	ldrb	r3, [r1, r3]
 80030c8:	fa22 f303 	lsr.w	r3, r2, r3
 80030cc:	4618      	mov	r0, r3
 80030ce:	bd80      	pop	{r7, pc}
 80030d0:	40021000 	.word	0x40021000
 80030d4:	08004440 	.word	0x08004440

080030d8 <HAL_RCC_GetPCLK2Freq>:
 80030d8:	b580      	push	{r7, lr}
 80030da:	af00      	add	r7, sp, #0
 80030dc:	f7ff ffde 	bl	800309c <HAL_RCC_GetHCLKFreq>
 80030e0:	4602      	mov	r2, r0
 80030e2:	4b05      	ldr	r3, [pc, #20]	; (80030f8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80030e4:	685b      	ldr	r3, [r3, #4]
 80030e6:	0adb      	lsrs	r3, r3, #11
 80030e8:	f003 0307 	and.w	r3, r3, #7
 80030ec:	4903      	ldr	r1, [pc, #12]	; (80030fc <HAL_RCC_GetPCLK2Freq+0x24>)
 80030ee:	5ccb      	ldrb	r3, [r1, r3]
 80030f0:	fa22 f303 	lsr.w	r3, r2, r3
 80030f4:	4618      	mov	r0, r3
 80030f6:	bd80      	pop	{r7, pc}
 80030f8:	40021000 	.word	0x40021000
 80030fc:	08004440 	.word	0x08004440

08003100 <RCC_Delay>:
 8003100:	b480      	push	{r7}
 8003102:	b085      	sub	sp, #20
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
 8003108:	4b0a      	ldr	r3, [pc, #40]	; (8003134 <RCC_Delay+0x34>)
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	4a0a      	ldr	r2, [pc, #40]	; (8003138 <RCC_Delay+0x38>)
 800310e:	fba2 2303 	umull	r2, r3, r2, r3
 8003112:	0a5b      	lsrs	r3, r3, #9
 8003114:	687a      	ldr	r2, [r7, #4]
 8003116:	fb02 f303 	mul.w	r3, r2, r3
 800311a:	60fb      	str	r3, [r7, #12]
 800311c:	bf00      	nop
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	1e5a      	subs	r2, r3, #1
 8003122:	60fa      	str	r2, [r7, #12]
 8003124:	2b00      	cmp	r3, #0
 8003126:	d1f9      	bne.n	800311c <RCC_Delay+0x1c>
 8003128:	bf00      	nop
 800312a:	bf00      	nop
 800312c:	3714      	adds	r7, #20
 800312e:	46bd      	mov	sp, r7
 8003130:	bc80      	pop	{r7}
 8003132:	4770      	bx	lr
 8003134:	20000040 	.word	0x20000040
 8003138:	10624dd3 	.word	0x10624dd3

0800313c <HAL_TIM_Base_Init>:
 800313c:	b580      	push	{r7, lr}
 800313e:	b082      	sub	sp, #8
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2b00      	cmp	r3, #0
 8003148:	d101      	bne.n	800314e <HAL_TIM_Base_Init+0x12>
 800314a:	2301      	movs	r3, #1
 800314c:	e041      	b.n	80031d2 <HAL_TIM_Base_Init+0x96>
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003154:	b2db      	uxtb	r3, r3
 8003156:	2b00      	cmp	r3, #0
 8003158:	d106      	bne.n	8003168 <HAL_TIM_Base_Init+0x2c>
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	2200      	movs	r2, #0
 800315e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003162:	6878      	ldr	r0, [r7, #4]
 8003164:	f7fe fad8 	bl	8001718 <HAL_TIM_Base_MspInit>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	2202      	movs	r2, #2
 800316c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	681a      	ldr	r2, [r3, #0]
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	3304      	adds	r3, #4
 8003178:	4619      	mov	r1, r3
 800317a:	4610      	mov	r0, r2
 800317c:	f000 fa5c 	bl	8003638 <TIM_Base_SetConfig>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	2201      	movs	r2, #1
 8003184:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	2201      	movs	r2, #1
 800318c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	2201      	movs	r2, #1
 8003194:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	2201      	movs	r2, #1
 800319c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	2201      	movs	r2, #1
 80031a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	2201      	movs	r2, #1
 80031ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2201      	movs	r2, #1
 80031b4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	2201      	movs	r2, #1
 80031bc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	2201      	movs	r2, #1
 80031c4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	2201      	movs	r2, #1
 80031cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031d0:	2300      	movs	r3, #0
 80031d2:	4618      	mov	r0, r3
 80031d4:	3708      	adds	r7, #8
 80031d6:	46bd      	mov	sp, r7
 80031d8:	bd80      	pop	{r7, pc}
	...

080031dc <HAL_TIM_Base_Start_IT>:
 80031dc:	b480      	push	{r7}
 80031de:	b085      	sub	sp, #20
 80031e0:	af00      	add	r7, sp, #0
 80031e2:	6078      	str	r0, [r7, #4]
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80031ea:	b2db      	uxtb	r3, r3
 80031ec:	2b01      	cmp	r3, #1
 80031ee:	d001      	beq.n	80031f4 <HAL_TIM_Base_Start_IT+0x18>
 80031f0:	2301      	movs	r3, #1
 80031f2:	e03a      	b.n	800326a <HAL_TIM_Base_Start_IT+0x8e>
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	2202      	movs	r2, #2
 80031f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	68da      	ldr	r2, [r3, #12]
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	f042 0201 	orr.w	r2, r2, #1
 800320a:	60da      	str	r2, [r3, #12]
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	4a18      	ldr	r2, [pc, #96]	; (8003274 <HAL_TIM_Base_Start_IT+0x98>)
 8003212:	4293      	cmp	r3, r2
 8003214:	d00e      	beq.n	8003234 <HAL_TIM_Base_Start_IT+0x58>
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800321e:	d009      	beq.n	8003234 <HAL_TIM_Base_Start_IT+0x58>
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	4a14      	ldr	r2, [pc, #80]	; (8003278 <HAL_TIM_Base_Start_IT+0x9c>)
 8003226:	4293      	cmp	r3, r2
 8003228:	d004      	beq.n	8003234 <HAL_TIM_Base_Start_IT+0x58>
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	4a13      	ldr	r2, [pc, #76]	; (800327c <HAL_TIM_Base_Start_IT+0xa0>)
 8003230:	4293      	cmp	r3, r2
 8003232:	d111      	bne.n	8003258 <HAL_TIM_Base_Start_IT+0x7c>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	689b      	ldr	r3, [r3, #8]
 800323a:	f003 0307 	and.w	r3, r3, #7
 800323e:	60fb      	str	r3, [r7, #12]
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	2b06      	cmp	r3, #6
 8003244:	d010      	beq.n	8003268 <HAL_TIM_Base_Start_IT+0x8c>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	681a      	ldr	r2, [r3, #0]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f042 0201 	orr.w	r2, r2, #1
 8003254:	601a      	str	r2, [r3, #0]
 8003256:	e007      	b.n	8003268 <HAL_TIM_Base_Start_IT+0x8c>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	681a      	ldr	r2, [r3, #0]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	f042 0201 	orr.w	r2, r2, #1
 8003266:	601a      	str	r2, [r3, #0]
 8003268:	2300      	movs	r3, #0
 800326a:	4618      	mov	r0, r3
 800326c:	3714      	adds	r7, #20
 800326e:	46bd      	mov	sp, r7
 8003270:	bc80      	pop	{r7}
 8003272:	4770      	bx	lr
 8003274:	40012c00 	.word	0x40012c00
 8003278:	40000400 	.word	0x40000400
 800327c:	40000800 	.word	0x40000800

08003280 <HAL_TIM_IRQHandler>:
 8003280:	b580      	push	{r7, lr}
 8003282:	b084      	sub	sp, #16
 8003284:	af00      	add	r7, sp, #0
 8003286:	6078      	str	r0, [r7, #4]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	68db      	ldr	r3, [r3, #12]
 800328e:	60fb      	str	r3, [r7, #12]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	691b      	ldr	r3, [r3, #16]
 8003296:	60bb      	str	r3, [r7, #8]
 8003298:	68bb      	ldr	r3, [r7, #8]
 800329a:	f003 0302 	and.w	r3, r3, #2
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d020      	beq.n	80032e4 <HAL_TIM_IRQHandler+0x64>
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	f003 0302 	and.w	r3, r3, #2
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	d01b      	beq.n	80032e4 <HAL_TIM_IRQHandler+0x64>
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f06f 0202 	mvn.w	r2, #2
 80032b4:	611a      	str	r2, [r3, #16]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2201      	movs	r2, #1
 80032ba:	771a      	strb	r2, [r3, #28]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	699b      	ldr	r3, [r3, #24]
 80032c2:	f003 0303 	and.w	r3, r3, #3
 80032c6:	2b00      	cmp	r3, #0
 80032c8:	d003      	beq.n	80032d2 <HAL_TIM_IRQHandler+0x52>
 80032ca:	6878      	ldr	r0, [r7, #4]
 80032cc:	f000 f998 	bl	8003600 <HAL_TIM_IC_CaptureCallback>
 80032d0:	e005      	b.n	80032de <HAL_TIM_IRQHandler+0x5e>
 80032d2:	6878      	ldr	r0, [r7, #4]
 80032d4:	f000 f98b 	bl	80035ee <HAL_TIM_OC_DelayElapsedCallback>
 80032d8:	6878      	ldr	r0, [r7, #4]
 80032da:	f000 f99a 	bl	8003612 <HAL_TIM_PWM_PulseFinishedCallback>
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	2200      	movs	r2, #0
 80032e2:	771a      	strb	r2, [r3, #28]
 80032e4:	68bb      	ldr	r3, [r7, #8]
 80032e6:	f003 0304 	and.w	r3, r3, #4
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d020      	beq.n	8003330 <HAL_TIM_IRQHandler+0xb0>
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	f003 0304 	and.w	r3, r3, #4
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d01b      	beq.n	8003330 <HAL_TIM_IRQHandler+0xb0>
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	f06f 0204 	mvn.w	r2, #4
 8003300:	611a      	str	r2, [r3, #16]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	2202      	movs	r2, #2
 8003306:	771a      	strb	r2, [r3, #28]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	699b      	ldr	r3, [r3, #24]
 800330e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003312:	2b00      	cmp	r3, #0
 8003314:	d003      	beq.n	800331e <HAL_TIM_IRQHandler+0x9e>
 8003316:	6878      	ldr	r0, [r7, #4]
 8003318:	f000 f972 	bl	8003600 <HAL_TIM_IC_CaptureCallback>
 800331c:	e005      	b.n	800332a <HAL_TIM_IRQHandler+0xaa>
 800331e:	6878      	ldr	r0, [r7, #4]
 8003320:	f000 f965 	bl	80035ee <HAL_TIM_OC_DelayElapsedCallback>
 8003324:	6878      	ldr	r0, [r7, #4]
 8003326:	f000 f974 	bl	8003612 <HAL_TIM_PWM_PulseFinishedCallback>
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	2200      	movs	r2, #0
 800332e:	771a      	strb	r2, [r3, #28]
 8003330:	68bb      	ldr	r3, [r7, #8]
 8003332:	f003 0308 	and.w	r3, r3, #8
 8003336:	2b00      	cmp	r3, #0
 8003338:	d020      	beq.n	800337c <HAL_TIM_IRQHandler+0xfc>
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	f003 0308 	and.w	r3, r3, #8
 8003340:	2b00      	cmp	r3, #0
 8003342:	d01b      	beq.n	800337c <HAL_TIM_IRQHandler+0xfc>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	f06f 0208 	mvn.w	r2, #8
 800334c:	611a      	str	r2, [r3, #16]
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	2204      	movs	r2, #4
 8003352:	771a      	strb	r2, [r3, #28]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	69db      	ldr	r3, [r3, #28]
 800335a:	f003 0303 	and.w	r3, r3, #3
 800335e:	2b00      	cmp	r3, #0
 8003360:	d003      	beq.n	800336a <HAL_TIM_IRQHandler+0xea>
 8003362:	6878      	ldr	r0, [r7, #4]
 8003364:	f000 f94c 	bl	8003600 <HAL_TIM_IC_CaptureCallback>
 8003368:	e005      	b.n	8003376 <HAL_TIM_IRQHandler+0xf6>
 800336a:	6878      	ldr	r0, [r7, #4]
 800336c:	f000 f93f 	bl	80035ee <HAL_TIM_OC_DelayElapsedCallback>
 8003370:	6878      	ldr	r0, [r7, #4]
 8003372:	f000 f94e 	bl	8003612 <HAL_TIM_PWM_PulseFinishedCallback>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	2200      	movs	r2, #0
 800337a:	771a      	strb	r2, [r3, #28]
 800337c:	68bb      	ldr	r3, [r7, #8]
 800337e:	f003 0310 	and.w	r3, r3, #16
 8003382:	2b00      	cmp	r3, #0
 8003384:	d020      	beq.n	80033c8 <HAL_TIM_IRQHandler+0x148>
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	f003 0310 	and.w	r3, r3, #16
 800338c:	2b00      	cmp	r3, #0
 800338e:	d01b      	beq.n	80033c8 <HAL_TIM_IRQHandler+0x148>
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	f06f 0210 	mvn.w	r2, #16
 8003398:	611a      	str	r2, [r3, #16]
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	2208      	movs	r2, #8
 800339e:	771a      	strb	r2, [r3, #28]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	69db      	ldr	r3, [r3, #28]
 80033a6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d003      	beq.n	80033b6 <HAL_TIM_IRQHandler+0x136>
 80033ae:	6878      	ldr	r0, [r7, #4]
 80033b0:	f000 f926 	bl	8003600 <HAL_TIM_IC_CaptureCallback>
 80033b4:	e005      	b.n	80033c2 <HAL_TIM_IRQHandler+0x142>
 80033b6:	6878      	ldr	r0, [r7, #4]
 80033b8:	f000 f919 	bl	80035ee <HAL_TIM_OC_DelayElapsedCallback>
 80033bc:	6878      	ldr	r0, [r7, #4]
 80033be:	f000 f928 	bl	8003612 <HAL_TIM_PWM_PulseFinishedCallback>
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	2200      	movs	r2, #0
 80033c6:	771a      	strb	r2, [r3, #28]
 80033c8:	68bb      	ldr	r3, [r7, #8]
 80033ca:	f003 0301 	and.w	r3, r3, #1
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	d00c      	beq.n	80033ec <HAL_TIM_IRQHandler+0x16c>
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	f003 0301 	and.w	r3, r3, #1
 80033d8:	2b00      	cmp	r3, #0
 80033da:	d007      	beq.n	80033ec <HAL_TIM_IRQHandler+0x16c>
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	f06f 0201 	mvn.w	r2, #1
 80033e4:	611a      	str	r2, [r3, #16]
 80033e6:	6878      	ldr	r0, [r7, #4]
 80033e8:	f7fe f8b2 	bl	8001550 <HAL_TIM_PeriodElapsedCallback>
 80033ec:	68bb      	ldr	r3, [r7, #8]
 80033ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d00c      	beq.n	8003410 <HAL_TIM_IRQHandler+0x190>
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d007      	beq.n	8003410 <HAL_TIM_IRQHandler+0x190>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003408:	611a      	str	r2, [r3, #16]
 800340a:	6878      	ldr	r0, [r7, #4]
 800340c:	f000 fa7f 	bl	800390e <HAL_TIMEx_BreakCallback>
 8003410:	68bb      	ldr	r3, [r7, #8]
 8003412:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003416:	2b00      	cmp	r3, #0
 8003418:	d00c      	beq.n	8003434 <HAL_TIM_IRQHandler+0x1b4>
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003420:	2b00      	cmp	r3, #0
 8003422:	d007      	beq.n	8003434 <HAL_TIM_IRQHandler+0x1b4>
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800342c:	611a      	str	r2, [r3, #16]
 800342e:	6878      	ldr	r0, [r7, #4]
 8003430:	f000 f8f8 	bl	8003624 <HAL_TIM_TriggerCallback>
 8003434:	68bb      	ldr	r3, [r7, #8]
 8003436:	f003 0320 	and.w	r3, r3, #32
 800343a:	2b00      	cmp	r3, #0
 800343c:	d00c      	beq.n	8003458 <HAL_TIM_IRQHandler+0x1d8>
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	f003 0320 	and.w	r3, r3, #32
 8003444:	2b00      	cmp	r3, #0
 8003446:	d007      	beq.n	8003458 <HAL_TIM_IRQHandler+0x1d8>
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	f06f 0220 	mvn.w	r2, #32
 8003450:	611a      	str	r2, [r3, #16]
 8003452:	6878      	ldr	r0, [r7, #4]
 8003454:	f000 fa52 	bl	80038fc <HAL_TIMEx_CommutCallback>
 8003458:	bf00      	nop
 800345a:	3710      	adds	r7, #16
 800345c:	46bd      	mov	sp, r7
 800345e:	bd80      	pop	{r7, pc}

08003460 <HAL_TIM_ConfigClockSource>:
 8003460:	b580      	push	{r7, lr}
 8003462:	b084      	sub	sp, #16
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
 8003468:	6039      	str	r1, [r7, #0]
 800346a:	2300      	movs	r3, #0
 800346c:	73fb      	strb	r3, [r7, #15]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003474:	2b01      	cmp	r3, #1
 8003476:	d101      	bne.n	800347c <HAL_TIM_ConfigClockSource+0x1c>
 8003478:	2302      	movs	r3, #2
 800347a:	e0b4      	b.n	80035e6 <HAL_TIM_ConfigClockSource+0x186>
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	2201      	movs	r2, #1
 8003480:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	2202      	movs	r2, #2
 8003488:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	689b      	ldr	r3, [r3, #8]
 8003492:	60bb      	str	r3, [r7, #8]
 8003494:	68bb      	ldr	r3, [r7, #8]
 8003496:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800349a:	60bb      	str	r3, [r7, #8]
 800349c:	68bb      	ldr	r3, [r7, #8]
 800349e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80034a2:	60bb      	str	r3, [r7, #8]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	68ba      	ldr	r2, [r7, #8]
 80034aa:	609a      	str	r2, [r3, #8]
 80034ac:	683b      	ldr	r3, [r7, #0]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80034b4:	d03e      	beq.n	8003534 <HAL_TIM_ConfigClockSource+0xd4>
 80034b6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80034ba:	f200 8087 	bhi.w	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034be:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80034c2:	f000 8086 	beq.w	80035d2 <HAL_TIM_ConfigClockSource+0x172>
 80034c6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80034ca:	d87f      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034cc:	2b70      	cmp	r3, #112	; 0x70
 80034ce:	d01a      	beq.n	8003506 <HAL_TIM_ConfigClockSource+0xa6>
 80034d0:	2b70      	cmp	r3, #112	; 0x70
 80034d2:	d87b      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034d4:	2b60      	cmp	r3, #96	; 0x60
 80034d6:	d050      	beq.n	800357a <HAL_TIM_ConfigClockSource+0x11a>
 80034d8:	2b60      	cmp	r3, #96	; 0x60
 80034da:	d877      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034dc:	2b50      	cmp	r3, #80	; 0x50
 80034de:	d03c      	beq.n	800355a <HAL_TIM_ConfigClockSource+0xfa>
 80034e0:	2b50      	cmp	r3, #80	; 0x50
 80034e2:	d873      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034e4:	2b40      	cmp	r3, #64	; 0x40
 80034e6:	d058      	beq.n	800359a <HAL_TIM_ConfigClockSource+0x13a>
 80034e8:	2b40      	cmp	r3, #64	; 0x40
 80034ea:	d86f      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034ec:	2b30      	cmp	r3, #48	; 0x30
 80034ee:	d064      	beq.n	80035ba <HAL_TIM_ConfigClockSource+0x15a>
 80034f0:	2b30      	cmp	r3, #48	; 0x30
 80034f2:	d86b      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034f4:	2b20      	cmp	r3, #32
 80034f6:	d060      	beq.n	80035ba <HAL_TIM_ConfigClockSource+0x15a>
 80034f8:	2b20      	cmp	r3, #32
 80034fa:	d867      	bhi.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	d05c      	beq.n	80035ba <HAL_TIM_ConfigClockSource+0x15a>
 8003500:	2b10      	cmp	r3, #16
 8003502:	d05a      	beq.n	80035ba <HAL_TIM_ConfigClockSource+0x15a>
 8003504:	e062      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x16c>
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	6818      	ldr	r0, [r3, #0]
 800350a:	683b      	ldr	r3, [r7, #0]
 800350c:	6899      	ldr	r1, [r3, #8]
 800350e:	683b      	ldr	r3, [r7, #0]
 8003510:	685a      	ldr	r2, [r3, #4]
 8003512:	683b      	ldr	r3, [r7, #0]
 8003514:	68db      	ldr	r3, [r3, #12]
 8003516:	f000 f974 	bl	8003802 <TIM_ETR_SetConfig>
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	689b      	ldr	r3, [r3, #8]
 8003520:	60bb      	str	r3, [r7, #8]
 8003522:	68bb      	ldr	r3, [r7, #8]
 8003524:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003528:	60bb      	str	r3, [r7, #8]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	68ba      	ldr	r2, [r7, #8]
 8003530:	609a      	str	r2, [r3, #8]
 8003532:	e04f      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	6818      	ldr	r0, [r3, #0]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	6899      	ldr	r1, [r3, #8]
 800353c:	683b      	ldr	r3, [r7, #0]
 800353e:	685a      	ldr	r2, [r3, #4]
 8003540:	683b      	ldr	r3, [r7, #0]
 8003542:	68db      	ldr	r3, [r3, #12]
 8003544:	f000 f95d 	bl	8003802 <TIM_ETR_SetConfig>
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	689a      	ldr	r2, [r3, #8]
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003556:	609a      	str	r2, [r3, #8]
 8003558:	e03c      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	6818      	ldr	r0, [r3, #0]
 800355e:	683b      	ldr	r3, [r7, #0]
 8003560:	6859      	ldr	r1, [r3, #4]
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	68db      	ldr	r3, [r3, #12]
 8003566:	461a      	mov	r2, r3
 8003568:	f000 f8d4 	bl	8003714 <TIM_TI1_ConfigInputStage>
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	2150      	movs	r1, #80	; 0x50
 8003572:	4618      	mov	r0, r3
 8003574:	f000 f92b 	bl	80037ce <TIM_ITRx_SetConfig>
 8003578:	e02c      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	6818      	ldr	r0, [r3, #0]
 800357e:	683b      	ldr	r3, [r7, #0]
 8003580:	6859      	ldr	r1, [r3, #4]
 8003582:	683b      	ldr	r3, [r7, #0]
 8003584:	68db      	ldr	r3, [r3, #12]
 8003586:	461a      	mov	r2, r3
 8003588:	f000 f8f2 	bl	8003770 <TIM_TI2_ConfigInputStage>
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	2160      	movs	r1, #96	; 0x60
 8003592:	4618      	mov	r0, r3
 8003594:	f000 f91b 	bl	80037ce <TIM_ITRx_SetConfig>
 8003598:	e01c      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	6818      	ldr	r0, [r3, #0]
 800359e:	683b      	ldr	r3, [r7, #0]
 80035a0:	6859      	ldr	r1, [r3, #4]
 80035a2:	683b      	ldr	r3, [r7, #0]
 80035a4:	68db      	ldr	r3, [r3, #12]
 80035a6:	461a      	mov	r2, r3
 80035a8:	f000 f8b4 	bl	8003714 <TIM_TI1_ConfigInputStage>
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	2140      	movs	r1, #64	; 0x40
 80035b2:	4618      	mov	r0, r3
 80035b4:	f000 f90b 	bl	80037ce <TIM_ITRx_SetConfig>
 80035b8:	e00c      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	681a      	ldr	r2, [r3, #0]
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	4619      	mov	r1, r3
 80035c4:	4610      	mov	r0, r2
 80035c6:	f000 f902 	bl	80037ce <TIM_ITRx_SetConfig>
 80035ca:	e003      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 80035cc:	2301      	movs	r3, #1
 80035ce:	73fb      	strb	r3, [r7, #15]
 80035d0:	e000      	b.n	80035d4 <HAL_TIM_ConfigClockSource+0x174>
 80035d2:	bf00      	nop
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	2201      	movs	r2, #1
 80035d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	2200      	movs	r2, #0
 80035e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035e4:	7bfb      	ldrb	r3, [r7, #15]
 80035e6:	4618      	mov	r0, r3
 80035e8:	3710      	adds	r7, #16
 80035ea:	46bd      	mov	sp, r7
 80035ec:	bd80      	pop	{r7, pc}

080035ee <HAL_TIM_OC_DelayElapsedCallback>:
 80035ee:	b480      	push	{r7}
 80035f0:	b083      	sub	sp, #12
 80035f2:	af00      	add	r7, sp, #0
 80035f4:	6078      	str	r0, [r7, #4]
 80035f6:	bf00      	nop
 80035f8:	370c      	adds	r7, #12
 80035fa:	46bd      	mov	sp, r7
 80035fc:	bc80      	pop	{r7}
 80035fe:	4770      	bx	lr

08003600 <HAL_TIM_IC_CaptureCallback>:
 8003600:	b480      	push	{r7}
 8003602:	b083      	sub	sp, #12
 8003604:	af00      	add	r7, sp, #0
 8003606:	6078      	str	r0, [r7, #4]
 8003608:	bf00      	nop
 800360a:	370c      	adds	r7, #12
 800360c:	46bd      	mov	sp, r7
 800360e:	bc80      	pop	{r7}
 8003610:	4770      	bx	lr

08003612 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003612:	b480      	push	{r7}
 8003614:	b083      	sub	sp, #12
 8003616:	af00      	add	r7, sp, #0
 8003618:	6078      	str	r0, [r7, #4]
 800361a:	bf00      	nop
 800361c:	370c      	adds	r7, #12
 800361e:	46bd      	mov	sp, r7
 8003620:	bc80      	pop	{r7}
 8003622:	4770      	bx	lr

08003624 <HAL_TIM_TriggerCallback>:
 8003624:	b480      	push	{r7}
 8003626:	b083      	sub	sp, #12
 8003628:	af00      	add	r7, sp, #0
 800362a:	6078      	str	r0, [r7, #4]
 800362c:	bf00      	nop
 800362e:	370c      	adds	r7, #12
 8003630:	46bd      	mov	sp, r7
 8003632:	bc80      	pop	{r7}
 8003634:	4770      	bx	lr
	...

08003638 <TIM_Base_SetConfig>:
 8003638:	b480      	push	{r7}
 800363a:	b085      	sub	sp, #20
 800363c:	af00      	add	r7, sp, #0
 800363e:	6078      	str	r0, [r7, #4]
 8003640:	6039      	str	r1, [r7, #0]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	60fb      	str	r3, [r7, #12]
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	4a2f      	ldr	r2, [pc, #188]	; (8003708 <TIM_Base_SetConfig+0xd0>)
 800364c:	4293      	cmp	r3, r2
 800364e:	d00b      	beq.n	8003668 <TIM_Base_SetConfig+0x30>
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003656:	d007      	beq.n	8003668 <TIM_Base_SetConfig+0x30>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	4a2c      	ldr	r2, [pc, #176]	; (800370c <TIM_Base_SetConfig+0xd4>)
 800365c:	4293      	cmp	r3, r2
 800365e:	d003      	beq.n	8003668 <TIM_Base_SetConfig+0x30>
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	4a2b      	ldr	r2, [pc, #172]	; (8003710 <TIM_Base_SetConfig+0xd8>)
 8003664:	4293      	cmp	r3, r2
 8003666:	d108      	bne.n	800367a <TIM_Base_SetConfig+0x42>
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800366e:	60fb      	str	r3, [r7, #12]
 8003670:	683b      	ldr	r3, [r7, #0]
 8003672:	685b      	ldr	r3, [r3, #4]
 8003674:	68fa      	ldr	r2, [r7, #12]
 8003676:	4313      	orrs	r3, r2
 8003678:	60fb      	str	r3, [r7, #12]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	4a22      	ldr	r2, [pc, #136]	; (8003708 <TIM_Base_SetConfig+0xd0>)
 800367e:	4293      	cmp	r3, r2
 8003680:	d00b      	beq.n	800369a <TIM_Base_SetConfig+0x62>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003688:	d007      	beq.n	800369a <TIM_Base_SetConfig+0x62>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	4a1f      	ldr	r2, [pc, #124]	; (800370c <TIM_Base_SetConfig+0xd4>)
 800368e:	4293      	cmp	r3, r2
 8003690:	d003      	beq.n	800369a <TIM_Base_SetConfig+0x62>
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	4a1e      	ldr	r2, [pc, #120]	; (8003710 <TIM_Base_SetConfig+0xd8>)
 8003696:	4293      	cmp	r3, r2
 8003698:	d108      	bne.n	80036ac <TIM_Base_SetConfig+0x74>
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80036a0:	60fb      	str	r3, [r7, #12]
 80036a2:	683b      	ldr	r3, [r7, #0]
 80036a4:	68db      	ldr	r3, [r3, #12]
 80036a6:	68fa      	ldr	r2, [r7, #12]
 80036a8:	4313      	orrs	r3, r2
 80036aa:	60fb      	str	r3, [r7, #12]
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80036b2:	683b      	ldr	r3, [r7, #0]
 80036b4:	695b      	ldr	r3, [r3, #20]
 80036b6:	4313      	orrs	r3, r2
 80036b8:	60fb      	str	r3, [r7, #12]
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	68fa      	ldr	r2, [r7, #12]
 80036be:	601a      	str	r2, [r3, #0]
 80036c0:	683b      	ldr	r3, [r7, #0]
 80036c2:	689a      	ldr	r2, [r3, #8]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	62da      	str	r2, [r3, #44]	; 0x2c
 80036c8:	683b      	ldr	r3, [r7, #0]
 80036ca:	681a      	ldr	r2, [r3, #0]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	629a      	str	r2, [r3, #40]	; 0x28
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	4a0d      	ldr	r2, [pc, #52]	; (8003708 <TIM_Base_SetConfig+0xd0>)
 80036d4:	4293      	cmp	r3, r2
 80036d6:	d103      	bne.n	80036e0 <TIM_Base_SetConfig+0xa8>
 80036d8:	683b      	ldr	r3, [r7, #0]
 80036da:	691a      	ldr	r2, [r3, #16]
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	631a      	str	r2, [r3, #48]	; 0x30
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	2201      	movs	r2, #1
 80036e4:	615a      	str	r2, [r3, #20]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	691b      	ldr	r3, [r3, #16]
 80036ea:	f003 0301 	and.w	r3, r3, #1
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d005      	beq.n	80036fe <TIM_Base_SetConfig+0xc6>
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	691b      	ldr	r3, [r3, #16]
 80036f6:	f023 0201 	bic.w	r2, r3, #1
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	611a      	str	r2, [r3, #16]
 80036fe:	bf00      	nop
 8003700:	3714      	adds	r7, #20
 8003702:	46bd      	mov	sp, r7
 8003704:	bc80      	pop	{r7}
 8003706:	4770      	bx	lr
 8003708:	40012c00 	.word	0x40012c00
 800370c:	40000400 	.word	0x40000400
 8003710:	40000800 	.word	0x40000800

08003714 <TIM_TI1_ConfigInputStage>:
 8003714:	b480      	push	{r7}
 8003716:	b087      	sub	sp, #28
 8003718:	af00      	add	r7, sp, #0
 800371a:	60f8      	str	r0, [r7, #12]
 800371c:	60b9      	str	r1, [r7, #8]
 800371e:	607a      	str	r2, [r7, #4]
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	6a1b      	ldr	r3, [r3, #32]
 8003724:	617b      	str	r3, [r7, #20]
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	6a1b      	ldr	r3, [r3, #32]
 800372a:	f023 0201 	bic.w	r2, r3, #1
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	621a      	str	r2, [r3, #32]
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	699b      	ldr	r3, [r3, #24]
 8003736:	613b      	str	r3, [r7, #16]
 8003738:	693b      	ldr	r3, [r7, #16]
 800373a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800373e:	613b      	str	r3, [r7, #16]
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	011b      	lsls	r3, r3, #4
 8003744:	693a      	ldr	r2, [r7, #16]
 8003746:	4313      	orrs	r3, r2
 8003748:	613b      	str	r3, [r7, #16]
 800374a:	697b      	ldr	r3, [r7, #20]
 800374c:	f023 030a 	bic.w	r3, r3, #10
 8003750:	617b      	str	r3, [r7, #20]
 8003752:	697a      	ldr	r2, [r7, #20]
 8003754:	68bb      	ldr	r3, [r7, #8]
 8003756:	4313      	orrs	r3, r2
 8003758:	617b      	str	r3, [r7, #20]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	693a      	ldr	r2, [r7, #16]
 800375e:	619a      	str	r2, [r3, #24]
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	697a      	ldr	r2, [r7, #20]
 8003764:	621a      	str	r2, [r3, #32]
 8003766:	bf00      	nop
 8003768:	371c      	adds	r7, #28
 800376a:	46bd      	mov	sp, r7
 800376c:	bc80      	pop	{r7}
 800376e:	4770      	bx	lr

08003770 <TIM_TI2_ConfigInputStage>:
 8003770:	b480      	push	{r7}
 8003772:	b087      	sub	sp, #28
 8003774:	af00      	add	r7, sp, #0
 8003776:	60f8      	str	r0, [r7, #12]
 8003778:	60b9      	str	r1, [r7, #8]
 800377a:	607a      	str	r2, [r7, #4]
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	6a1b      	ldr	r3, [r3, #32]
 8003780:	617b      	str	r3, [r7, #20]
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	6a1b      	ldr	r3, [r3, #32]
 8003786:	f023 0210 	bic.w	r2, r3, #16
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	621a      	str	r2, [r3, #32]
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	699b      	ldr	r3, [r3, #24]
 8003792:	613b      	str	r3, [r7, #16]
 8003794:	693b      	ldr	r3, [r7, #16]
 8003796:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	031b      	lsls	r3, r3, #12
 80037a0:	693a      	ldr	r2, [r7, #16]
 80037a2:	4313      	orrs	r3, r2
 80037a4:	613b      	str	r3, [r7, #16]
 80037a6:	697b      	ldr	r3, [r7, #20]
 80037a8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80037ac:	617b      	str	r3, [r7, #20]
 80037ae:	68bb      	ldr	r3, [r7, #8]
 80037b0:	011b      	lsls	r3, r3, #4
 80037b2:	697a      	ldr	r2, [r7, #20]
 80037b4:	4313      	orrs	r3, r2
 80037b6:	617b      	str	r3, [r7, #20]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	693a      	ldr	r2, [r7, #16]
 80037bc:	619a      	str	r2, [r3, #24]
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	697a      	ldr	r2, [r7, #20]
 80037c2:	621a      	str	r2, [r3, #32]
 80037c4:	bf00      	nop
 80037c6:	371c      	adds	r7, #28
 80037c8:	46bd      	mov	sp, r7
 80037ca:	bc80      	pop	{r7}
 80037cc:	4770      	bx	lr

080037ce <TIM_ITRx_SetConfig>:
 80037ce:	b480      	push	{r7}
 80037d0:	b085      	sub	sp, #20
 80037d2:	af00      	add	r7, sp, #0
 80037d4:	6078      	str	r0, [r7, #4]
 80037d6:	6039      	str	r1, [r7, #0]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	689b      	ldr	r3, [r3, #8]
 80037dc:	60fb      	str	r3, [r7, #12]
 80037de:	68fb      	ldr	r3, [r7, #12]
 80037e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80037e4:	60fb      	str	r3, [r7, #12]
 80037e6:	683a      	ldr	r2, [r7, #0]
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	4313      	orrs	r3, r2
 80037ec:	f043 0307 	orr.w	r3, r3, #7
 80037f0:	60fb      	str	r3, [r7, #12]
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	68fa      	ldr	r2, [r7, #12]
 80037f6:	609a      	str	r2, [r3, #8]
 80037f8:	bf00      	nop
 80037fa:	3714      	adds	r7, #20
 80037fc:	46bd      	mov	sp, r7
 80037fe:	bc80      	pop	{r7}
 8003800:	4770      	bx	lr

08003802 <TIM_ETR_SetConfig>:
 8003802:	b480      	push	{r7}
 8003804:	b087      	sub	sp, #28
 8003806:	af00      	add	r7, sp, #0
 8003808:	60f8      	str	r0, [r7, #12]
 800380a:	60b9      	str	r1, [r7, #8]
 800380c:	607a      	str	r2, [r7, #4]
 800380e:	603b      	str	r3, [r7, #0]
 8003810:	68fb      	ldr	r3, [r7, #12]
 8003812:	689b      	ldr	r3, [r3, #8]
 8003814:	617b      	str	r3, [r7, #20]
 8003816:	697b      	ldr	r3, [r7, #20]
 8003818:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800381c:	617b      	str	r3, [r7, #20]
 800381e:	683b      	ldr	r3, [r7, #0]
 8003820:	021a      	lsls	r2, r3, #8
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	431a      	orrs	r2, r3
 8003826:	68bb      	ldr	r3, [r7, #8]
 8003828:	4313      	orrs	r3, r2
 800382a:	697a      	ldr	r2, [r7, #20]
 800382c:	4313      	orrs	r3, r2
 800382e:	617b      	str	r3, [r7, #20]
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	697a      	ldr	r2, [r7, #20]
 8003834:	609a      	str	r2, [r3, #8]
 8003836:	bf00      	nop
 8003838:	371c      	adds	r7, #28
 800383a:	46bd      	mov	sp, r7
 800383c:	bc80      	pop	{r7}
 800383e:	4770      	bx	lr

08003840 <HAL_TIMEx_MasterConfigSynchronization>:
 8003840:	b480      	push	{r7}
 8003842:	b085      	sub	sp, #20
 8003844:	af00      	add	r7, sp, #0
 8003846:	6078      	str	r0, [r7, #4]
 8003848:	6039      	str	r1, [r7, #0]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003850:	2b01      	cmp	r3, #1
 8003852:	d101      	bne.n	8003858 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003854:	2302      	movs	r3, #2
 8003856:	e046      	b.n	80038e6 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	2201      	movs	r2, #1
 800385c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	2202      	movs	r2, #2
 8003864:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	685b      	ldr	r3, [r3, #4]
 800386e:	60fb      	str	r3, [r7, #12]
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	689b      	ldr	r3, [r3, #8]
 8003876:	60bb      	str	r3, [r7, #8]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800387e:	60fb      	str	r3, [r7, #12]
 8003880:	683b      	ldr	r3, [r7, #0]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	68fa      	ldr	r2, [r7, #12]
 8003886:	4313      	orrs	r3, r2
 8003888:	60fb      	str	r3, [r7, #12]
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	68fa      	ldr	r2, [r7, #12]
 8003890:	605a      	str	r2, [r3, #4]
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	4a16      	ldr	r2, [pc, #88]	; (80038f0 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003898:	4293      	cmp	r3, r2
 800389a:	d00e      	beq.n	80038ba <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80038a4:	d009      	beq.n	80038ba <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	4a12      	ldr	r2, [pc, #72]	; (80038f4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80038ac:	4293      	cmp	r3, r2
 80038ae:	d004      	beq.n	80038ba <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	4a10      	ldr	r2, [pc, #64]	; (80038f8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80038b6:	4293      	cmp	r3, r2
 80038b8:	d10c      	bne.n	80038d4 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80038ba:	68bb      	ldr	r3, [r7, #8]
 80038bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80038c0:	60bb      	str	r3, [r7, #8]
 80038c2:	683b      	ldr	r3, [r7, #0]
 80038c4:	685b      	ldr	r3, [r3, #4]
 80038c6:	68ba      	ldr	r2, [r7, #8]
 80038c8:	4313      	orrs	r3, r2
 80038ca:	60bb      	str	r3, [r7, #8]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	68ba      	ldr	r2, [r7, #8]
 80038d2:	609a      	str	r2, [r3, #8]
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	2201      	movs	r2, #1
 80038d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	2200      	movs	r2, #0
 80038e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038e4:	2300      	movs	r3, #0
 80038e6:	4618      	mov	r0, r3
 80038e8:	3714      	adds	r7, #20
 80038ea:	46bd      	mov	sp, r7
 80038ec:	bc80      	pop	{r7}
 80038ee:	4770      	bx	lr
 80038f0:	40012c00 	.word	0x40012c00
 80038f4:	40000400 	.word	0x40000400
 80038f8:	40000800 	.word	0x40000800

080038fc <HAL_TIMEx_CommutCallback>:
 80038fc:	b480      	push	{r7}
 80038fe:	b083      	sub	sp, #12
 8003900:	af00      	add	r7, sp, #0
 8003902:	6078      	str	r0, [r7, #4]
 8003904:	bf00      	nop
 8003906:	370c      	adds	r7, #12
 8003908:	46bd      	mov	sp, r7
 800390a:	bc80      	pop	{r7}
 800390c:	4770      	bx	lr

0800390e <HAL_TIMEx_BreakCallback>:
 800390e:	b480      	push	{r7}
 8003910:	b083      	sub	sp, #12
 8003912:	af00      	add	r7, sp, #0
 8003914:	6078      	str	r0, [r7, #4]
 8003916:	bf00      	nop
 8003918:	370c      	adds	r7, #12
 800391a:	46bd      	mov	sp, r7
 800391c:	bc80      	pop	{r7}
 800391e:	4770      	bx	lr

08003920 <HAL_UART_Init>:
 8003920:	b580      	push	{r7, lr}
 8003922:	b082      	sub	sp, #8
 8003924:	af00      	add	r7, sp, #0
 8003926:	6078      	str	r0, [r7, #4]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	2b00      	cmp	r3, #0
 800392c:	d101      	bne.n	8003932 <HAL_UART_Init+0x12>
 800392e:	2301      	movs	r3, #1
 8003930:	e042      	b.n	80039b8 <HAL_UART_Init+0x98>
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003938:	b2db      	uxtb	r3, r3
 800393a:	2b00      	cmp	r3, #0
 800393c:	d106      	bne.n	800394c <HAL_UART_Init+0x2c>
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	2200      	movs	r2, #0
 8003942:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003946:	6878      	ldr	r0, [r7, #4]
 8003948:	f7fd ff0a 	bl	8001760 <HAL_UART_MspInit>
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	2224      	movs	r2, #36	; 0x24
 8003950:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	68da      	ldr	r2, [r3, #12]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003962:	60da      	str	r2, [r3, #12]
 8003964:	6878      	ldr	r0, [r7, #4]
 8003966:	f000 f82b 	bl	80039c0 <UART_SetConfig>
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	691a      	ldr	r2, [r3, #16]
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003978:	611a      	str	r2, [r3, #16]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	695a      	ldr	r2, [r3, #20]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003988:	615a      	str	r2, [r3, #20]
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	68da      	ldr	r2, [r3, #12]
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003998:	60da      	str	r2, [r3, #12]
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	2200      	movs	r2, #0
 800399e:	645a      	str	r2, [r3, #68]	; 0x44
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	2220      	movs	r2, #32
 80039a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	2220      	movs	r2, #32
 80039ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	2200      	movs	r2, #0
 80039b4:	635a      	str	r2, [r3, #52]	; 0x34
 80039b6:	2300      	movs	r3, #0
 80039b8:	4618      	mov	r0, r3
 80039ba:	3708      	adds	r7, #8
 80039bc:	46bd      	mov	sp, r7
 80039be:	bd80      	pop	{r7, pc}

080039c0 <UART_SetConfig>:
 80039c0:	b580      	push	{r7, lr}
 80039c2:	b084      	sub	sp, #16
 80039c4:	af00      	add	r7, sp, #0
 80039c6:	6078      	str	r0, [r7, #4]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	691b      	ldr	r3, [r3, #16]
 80039ce:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	68da      	ldr	r2, [r3, #12]
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	430a      	orrs	r2, r1
 80039dc:	611a      	str	r2, [r3, #16]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	689a      	ldr	r2, [r3, #8]
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	691b      	ldr	r3, [r3, #16]
 80039e6:	431a      	orrs	r2, r3
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	695b      	ldr	r3, [r3, #20]
 80039ec:	4313      	orrs	r3, r2
 80039ee:	60bb      	str	r3, [r7, #8]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	68db      	ldr	r3, [r3, #12]
 80039f6:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80039fa:	f023 030c 	bic.w	r3, r3, #12
 80039fe:	687a      	ldr	r2, [r7, #4]
 8003a00:	6812      	ldr	r2, [r2, #0]
 8003a02:	68b9      	ldr	r1, [r7, #8]
 8003a04:	430b      	orrs	r3, r1
 8003a06:	60d3      	str	r3, [r2, #12]
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	695b      	ldr	r3, [r3, #20]
 8003a0e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	699a      	ldr	r2, [r3, #24]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	430a      	orrs	r2, r1
 8003a1c:	615a      	str	r2, [r3, #20]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	4a2c      	ldr	r2, [pc, #176]	; (8003ad4 <UART_SetConfig+0x114>)
 8003a24:	4293      	cmp	r3, r2
 8003a26:	d103      	bne.n	8003a30 <UART_SetConfig+0x70>
 8003a28:	f7ff fb56 	bl	80030d8 <HAL_RCC_GetPCLK2Freq>
 8003a2c:	60f8      	str	r0, [r7, #12]
 8003a2e:	e002      	b.n	8003a36 <UART_SetConfig+0x76>
 8003a30:	f7ff fb3e 	bl	80030b0 <HAL_RCC_GetPCLK1Freq>
 8003a34:	60f8      	str	r0, [r7, #12]
 8003a36:	68fa      	ldr	r2, [r7, #12]
 8003a38:	4613      	mov	r3, r2
 8003a3a:	009b      	lsls	r3, r3, #2
 8003a3c:	4413      	add	r3, r2
 8003a3e:	009a      	lsls	r2, r3, #2
 8003a40:	441a      	add	r2, r3
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	685b      	ldr	r3, [r3, #4]
 8003a46:	009b      	lsls	r3, r3, #2
 8003a48:	fbb2 f3f3 	udiv	r3, r2, r3
 8003a4c:	4a22      	ldr	r2, [pc, #136]	; (8003ad8 <UART_SetConfig+0x118>)
 8003a4e:	fba2 2303 	umull	r2, r3, r2, r3
 8003a52:	095b      	lsrs	r3, r3, #5
 8003a54:	0119      	lsls	r1, r3, #4
 8003a56:	68fa      	ldr	r2, [r7, #12]
 8003a58:	4613      	mov	r3, r2
 8003a5a:	009b      	lsls	r3, r3, #2
 8003a5c:	4413      	add	r3, r2
 8003a5e:	009a      	lsls	r2, r3, #2
 8003a60:	441a      	add	r2, r3
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	685b      	ldr	r3, [r3, #4]
 8003a66:	009b      	lsls	r3, r3, #2
 8003a68:	fbb2 f2f3 	udiv	r2, r2, r3
 8003a6c:	4b1a      	ldr	r3, [pc, #104]	; (8003ad8 <UART_SetConfig+0x118>)
 8003a6e:	fba3 0302 	umull	r0, r3, r3, r2
 8003a72:	095b      	lsrs	r3, r3, #5
 8003a74:	2064      	movs	r0, #100	; 0x64
 8003a76:	fb00 f303 	mul.w	r3, r0, r3
 8003a7a:	1ad3      	subs	r3, r2, r3
 8003a7c:	011b      	lsls	r3, r3, #4
 8003a7e:	3332      	adds	r3, #50	; 0x32
 8003a80:	4a15      	ldr	r2, [pc, #84]	; (8003ad8 <UART_SetConfig+0x118>)
 8003a82:	fba2 2303 	umull	r2, r3, r2, r3
 8003a86:	095b      	lsrs	r3, r3, #5
 8003a88:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003a8c:	4419      	add	r1, r3
 8003a8e:	68fa      	ldr	r2, [r7, #12]
 8003a90:	4613      	mov	r3, r2
 8003a92:	009b      	lsls	r3, r3, #2
 8003a94:	4413      	add	r3, r2
 8003a96:	009a      	lsls	r2, r3, #2
 8003a98:	441a      	add	r2, r3
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	685b      	ldr	r3, [r3, #4]
 8003a9e:	009b      	lsls	r3, r3, #2
 8003aa0:	fbb2 f2f3 	udiv	r2, r2, r3
 8003aa4:	4b0c      	ldr	r3, [pc, #48]	; (8003ad8 <UART_SetConfig+0x118>)
 8003aa6:	fba3 0302 	umull	r0, r3, r3, r2
 8003aaa:	095b      	lsrs	r3, r3, #5
 8003aac:	2064      	movs	r0, #100	; 0x64
 8003aae:	fb00 f303 	mul.w	r3, r0, r3
 8003ab2:	1ad3      	subs	r3, r2, r3
 8003ab4:	011b      	lsls	r3, r3, #4
 8003ab6:	3332      	adds	r3, #50	; 0x32
 8003ab8:	4a07      	ldr	r2, [pc, #28]	; (8003ad8 <UART_SetConfig+0x118>)
 8003aba:	fba2 2303 	umull	r2, r3, r2, r3
 8003abe:	095b      	lsrs	r3, r3, #5
 8003ac0:	f003 020f 	and.w	r2, r3, #15
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	440a      	add	r2, r1
 8003aca:	609a      	str	r2, [r3, #8]
 8003acc:	bf00      	nop
 8003ace:	3710      	adds	r7, #16
 8003ad0:	46bd      	mov	sp, r7
 8003ad2:	bd80      	pop	{r7, pc}
 8003ad4:	40013800 	.word	0x40013800
 8003ad8:	51eb851f 	.word	0x51eb851f

08003adc <__errno>:
 8003adc:	4b01      	ldr	r3, [pc, #4]	; (8003ae4 <__errno+0x8>)
 8003ade:	6818      	ldr	r0, [r3, #0]
 8003ae0:	4770      	bx	lr
 8003ae2:	bf00      	nop
 8003ae4:	2000004c 	.word	0x2000004c

08003ae8 <__libc_init_array>:
 8003ae8:	b570      	push	{r4, r5, r6, lr}
 8003aea:	2600      	movs	r6, #0
 8003aec:	4d0c      	ldr	r5, [pc, #48]	; (8003b20 <__libc_init_array+0x38>)
 8003aee:	4c0d      	ldr	r4, [pc, #52]	; (8003b24 <__libc_init_array+0x3c>)
 8003af0:	1b64      	subs	r4, r4, r5
 8003af2:	10a4      	asrs	r4, r4, #2
 8003af4:	42a6      	cmp	r6, r4
 8003af6:	d109      	bne.n	8003b0c <__libc_init_array+0x24>
 8003af8:	f000 fc5c 	bl	80043b4 <_init>
 8003afc:	2600      	movs	r6, #0
 8003afe:	4d0a      	ldr	r5, [pc, #40]	; (8003b28 <__libc_init_array+0x40>)
 8003b00:	4c0a      	ldr	r4, [pc, #40]	; (8003b2c <__libc_init_array+0x44>)
 8003b02:	1b64      	subs	r4, r4, r5
 8003b04:	10a4      	asrs	r4, r4, #2
 8003b06:	42a6      	cmp	r6, r4
 8003b08:	d105      	bne.n	8003b16 <__libc_init_array+0x2e>
 8003b0a:	bd70      	pop	{r4, r5, r6, pc}
 8003b0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b10:	4798      	blx	r3
 8003b12:	3601      	adds	r6, #1
 8003b14:	e7ee      	b.n	8003af4 <__libc_init_array+0xc>
 8003b16:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b1a:	4798      	blx	r3
 8003b1c:	3601      	adds	r6, #1
 8003b1e:	e7f2      	b.n	8003b06 <__libc_init_array+0x1e>
 8003b20:	08004490 	.word	0x08004490
 8003b24:	08004490 	.word	0x08004490
 8003b28:	08004490 	.word	0x08004490
 8003b2c:	08004494 	.word	0x08004494

08003b30 <memset>:
 8003b30:	4603      	mov	r3, r0
 8003b32:	4402      	add	r2, r0
 8003b34:	4293      	cmp	r3, r2
 8003b36:	d100      	bne.n	8003b3a <memset+0xa>
 8003b38:	4770      	bx	lr
 8003b3a:	f803 1b01 	strb.w	r1, [r3], #1
 8003b3e:	e7f9      	b.n	8003b34 <memset+0x4>

08003b40 <siprintf>:
 8003b40:	b40e      	push	{r1, r2, r3}
 8003b42:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003b46:	b500      	push	{lr}
 8003b48:	b09c      	sub	sp, #112	; 0x70
 8003b4a:	ab1d      	add	r3, sp, #116	; 0x74
 8003b4c:	9002      	str	r0, [sp, #8]
 8003b4e:	9006      	str	r0, [sp, #24]
 8003b50:	9107      	str	r1, [sp, #28]
 8003b52:	9104      	str	r1, [sp, #16]
 8003b54:	4808      	ldr	r0, [pc, #32]	; (8003b78 <siprintf+0x38>)
 8003b56:	4909      	ldr	r1, [pc, #36]	; (8003b7c <siprintf+0x3c>)
 8003b58:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b5c:	9105      	str	r1, [sp, #20]
 8003b5e:	6800      	ldr	r0, [r0, #0]
 8003b60:	a902      	add	r1, sp, #8
 8003b62:	9301      	str	r3, [sp, #4]
 8003b64:	f000 f868 	bl	8003c38 <_svfiprintf_r>
 8003b68:	2200      	movs	r2, #0
 8003b6a:	9b02      	ldr	r3, [sp, #8]
 8003b6c:	701a      	strb	r2, [r3, #0]
 8003b6e:	b01c      	add	sp, #112	; 0x70
 8003b70:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b74:	b003      	add	sp, #12
 8003b76:	4770      	bx	lr
 8003b78:	2000004c 	.word	0x2000004c
 8003b7c:	ffff0208 	.word	0xffff0208

08003b80 <__ssputs_r>:
 8003b80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b84:	688e      	ldr	r6, [r1, #8]
 8003b86:	4682      	mov	sl, r0
 8003b88:	429e      	cmp	r6, r3
 8003b8a:	460c      	mov	r4, r1
 8003b8c:	4690      	mov	r8, r2
 8003b8e:	461f      	mov	r7, r3
 8003b90:	d838      	bhi.n	8003c04 <__ssputs_r+0x84>
 8003b92:	898a      	ldrh	r2, [r1, #12]
 8003b94:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003b98:	d032      	beq.n	8003c00 <__ssputs_r+0x80>
 8003b9a:	6825      	ldr	r5, [r4, #0]
 8003b9c:	6909      	ldr	r1, [r1, #16]
 8003b9e:	3301      	adds	r3, #1
 8003ba0:	eba5 0901 	sub.w	r9, r5, r1
 8003ba4:	6965      	ldr	r5, [r4, #20]
 8003ba6:	444b      	add	r3, r9
 8003ba8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bb0:	106d      	asrs	r5, r5, #1
 8003bb2:	429d      	cmp	r5, r3
 8003bb4:	bf38      	it	cc
 8003bb6:	461d      	movcc	r5, r3
 8003bb8:	0553      	lsls	r3, r2, #21
 8003bba:	d531      	bpl.n	8003c20 <__ssputs_r+0xa0>
 8003bbc:	4629      	mov	r1, r5
 8003bbe:	f000 fb53 	bl	8004268 <_malloc_r>
 8003bc2:	4606      	mov	r6, r0
 8003bc4:	b950      	cbnz	r0, 8003bdc <__ssputs_r+0x5c>
 8003bc6:	230c      	movs	r3, #12
 8003bc8:	f04f 30ff 	mov.w	r0, #4294967295
 8003bcc:	f8ca 3000 	str.w	r3, [sl]
 8003bd0:	89a3      	ldrh	r3, [r4, #12]
 8003bd2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003bd6:	81a3      	strh	r3, [r4, #12]
 8003bd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003bdc:	464a      	mov	r2, r9
 8003bde:	6921      	ldr	r1, [r4, #16]
 8003be0:	f000 face 	bl	8004180 <memcpy>
 8003be4:	89a3      	ldrh	r3, [r4, #12]
 8003be6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003bea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003bee:	81a3      	strh	r3, [r4, #12]
 8003bf0:	6126      	str	r6, [r4, #16]
 8003bf2:	444e      	add	r6, r9
 8003bf4:	6026      	str	r6, [r4, #0]
 8003bf6:	463e      	mov	r6, r7
 8003bf8:	6165      	str	r5, [r4, #20]
 8003bfa:	eba5 0509 	sub.w	r5, r5, r9
 8003bfe:	60a5      	str	r5, [r4, #8]
 8003c00:	42be      	cmp	r6, r7
 8003c02:	d900      	bls.n	8003c06 <__ssputs_r+0x86>
 8003c04:	463e      	mov	r6, r7
 8003c06:	4632      	mov	r2, r6
 8003c08:	4641      	mov	r1, r8
 8003c0a:	6820      	ldr	r0, [r4, #0]
 8003c0c:	f000 fac6 	bl	800419c <memmove>
 8003c10:	68a3      	ldr	r3, [r4, #8]
 8003c12:	6822      	ldr	r2, [r4, #0]
 8003c14:	1b9b      	subs	r3, r3, r6
 8003c16:	4432      	add	r2, r6
 8003c18:	2000      	movs	r0, #0
 8003c1a:	60a3      	str	r3, [r4, #8]
 8003c1c:	6022      	str	r2, [r4, #0]
 8003c1e:	e7db      	b.n	8003bd8 <__ssputs_r+0x58>
 8003c20:	462a      	mov	r2, r5
 8003c22:	f000 fb7b 	bl	800431c <_realloc_r>
 8003c26:	4606      	mov	r6, r0
 8003c28:	2800      	cmp	r0, #0
 8003c2a:	d1e1      	bne.n	8003bf0 <__ssputs_r+0x70>
 8003c2c:	4650      	mov	r0, sl
 8003c2e:	6921      	ldr	r1, [r4, #16]
 8003c30:	f000 face 	bl	80041d0 <_free_r>
 8003c34:	e7c7      	b.n	8003bc6 <__ssputs_r+0x46>
	...

08003c38 <_svfiprintf_r>:
 8003c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c3c:	4698      	mov	r8, r3
 8003c3e:	898b      	ldrh	r3, [r1, #12]
 8003c40:	4607      	mov	r7, r0
 8003c42:	061b      	lsls	r3, r3, #24
 8003c44:	460d      	mov	r5, r1
 8003c46:	4614      	mov	r4, r2
 8003c48:	b09d      	sub	sp, #116	; 0x74
 8003c4a:	d50e      	bpl.n	8003c6a <_svfiprintf_r+0x32>
 8003c4c:	690b      	ldr	r3, [r1, #16]
 8003c4e:	b963      	cbnz	r3, 8003c6a <_svfiprintf_r+0x32>
 8003c50:	2140      	movs	r1, #64	; 0x40
 8003c52:	f000 fb09 	bl	8004268 <_malloc_r>
 8003c56:	6028      	str	r0, [r5, #0]
 8003c58:	6128      	str	r0, [r5, #16]
 8003c5a:	b920      	cbnz	r0, 8003c66 <_svfiprintf_r+0x2e>
 8003c5c:	230c      	movs	r3, #12
 8003c5e:	603b      	str	r3, [r7, #0]
 8003c60:	f04f 30ff 	mov.w	r0, #4294967295
 8003c64:	e0d1      	b.n	8003e0a <_svfiprintf_r+0x1d2>
 8003c66:	2340      	movs	r3, #64	; 0x40
 8003c68:	616b      	str	r3, [r5, #20]
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8003c6e:	2320      	movs	r3, #32
 8003c70:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c74:	2330      	movs	r3, #48	; 0x30
 8003c76:	f04f 0901 	mov.w	r9, #1
 8003c7a:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c7e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e24 <_svfiprintf_r+0x1ec>
 8003c82:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c86:	4623      	mov	r3, r4
 8003c88:	469a      	mov	sl, r3
 8003c8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c8e:	b10a      	cbz	r2, 8003c94 <_svfiprintf_r+0x5c>
 8003c90:	2a25      	cmp	r2, #37	; 0x25
 8003c92:	d1f9      	bne.n	8003c88 <_svfiprintf_r+0x50>
 8003c94:	ebba 0b04 	subs.w	fp, sl, r4
 8003c98:	d00b      	beq.n	8003cb2 <_svfiprintf_r+0x7a>
 8003c9a:	465b      	mov	r3, fp
 8003c9c:	4622      	mov	r2, r4
 8003c9e:	4629      	mov	r1, r5
 8003ca0:	4638      	mov	r0, r7
 8003ca2:	f7ff ff6d 	bl	8003b80 <__ssputs_r>
 8003ca6:	3001      	adds	r0, #1
 8003ca8:	f000 80aa 	beq.w	8003e00 <_svfiprintf_r+0x1c8>
 8003cac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cae:	445a      	add	r2, fp
 8003cb0:	9209      	str	r2, [sp, #36]	; 0x24
 8003cb2:	f89a 3000 	ldrb.w	r3, [sl]
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	f000 80a2 	beq.w	8003e00 <_svfiprintf_r+0x1c8>
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	f04f 32ff 	mov.w	r2, #4294967295
 8003cc2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003cc6:	f10a 0a01 	add.w	sl, sl, #1
 8003cca:	9304      	str	r3, [sp, #16]
 8003ccc:	9307      	str	r3, [sp, #28]
 8003cce:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003cd2:	931a      	str	r3, [sp, #104]	; 0x68
 8003cd4:	4654      	mov	r4, sl
 8003cd6:	2205      	movs	r2, #5
 8003cd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003cdc:	4851      	ldr	r0, [pc, #324]	; (8003e24 <_svfiprintf_r+0x1ec>)
 8003cde:	f000 fa41 	bl	8004164 <memchr>
 8003ce2:	9a04      	ldr	r2, [sp, #16]
 8003ce4:	b9d8      	cbnz	r0, 8003d1e <_svfiprintf_r+0xe6>
 8003ce6:	06d0      	lsls	r0, r2, #27
 8003ce8:	bf44      	itt	mi
 8003cea:	2320      	movmi	r3, #32
 8003cec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cf0:	0711      	lsls	r1, r2, #28
 8003cf2:	bf44      	itt	mi
 8003cf4:	232b      	movmi	r3, #43	; 0x2b
 8003cf6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cfa:	f89a 3000 	ldrb.w	r3, [sl]
 8003cfe:	2b2a      	cmp	r3, #42	; 0x2a
 8003d00:	d015      	beq.n	8003d2e <_svfiprintf_r+0xf6>
 8003d02:	4654      	mov	r4, sl
 8003d04:	2000      	movs	r0, #0
 8003d06:	f04f 0c0a 	mov.w	ip, #10
 8003d0a:	9a07      	ldr	r2, [sp, #28]
 8003d0c:	4621      	mov	r1, r4
 8003d0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d12:	3b30      	subs	r3, #48	; 0x30
 8003d14:	2b09      	cmp	r3, #9
 8003d16:	d94e      	bls.n	8003db6 <_svfiprintf_r+0x17e>
 8003d18:	b1b0      	cbz	r0, 8003d48 <_svfiprintf_r+0x110>
 8003d1a:	9207      	str	r2, [sp, #28]
 8003d1c:	e014      	b.n	8003d48 <_svfiprintf_r+0x110>
 8003d1e:	eba0 0308 	sub.w	r3, r0, r8
 8003d22:	fa09 f303 	lsl.w	r3, r9, r3
 8003d26:	4313      	orrs	r3, r2
 8003d28:	46a2      	mov	sl, r4
 8003d2a:	9304      	str	r3, [sp, #16]
 8003d2c:	e7d2      	b.n	8003cd4 <_svfiprintf_r+0x9c>
 8003d2e:	9b03      	ldr	r3, [sp, #12]
 8003d30:	1d19      	adds	r1, r3, #4
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	9103      	str	r1, [sp, #12]
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	bfbb      	ittet	lt
 8003d3a:	425b      	neglt	r3, r3
 8003d3c:	f042 0202 	orrlt.w	r2, r2, #2
 8003d40:	9307      	strge	r3, [sp, #28]
 8003d42:	9307      	strlt	r3, [sp, #28]
 8003d44:	bfb8      	it	lt
 8003d46:	9204      	strlt	r2, [sp, #16]
 8003d48:	7823      	ldrb	r3, [r4, #0]
 8003d4a:	2b2e      	cmp	r3, #46	; 0x2e
 8003d4c:	d10c      	bne.n	8003d68 <_svfiprintf_r+0x130>
 8003d4e:	7863      	ldrb	r3, [r4, #1]
 8003d50:	2b2a      	cmp	r3, #42	; 0x2a
 8003d52:	d135      	bne.n	8003dc0 <_svfiprintf_r+0x188>
 8003d54:	9b03      	ldr	r3, [sp, #12]
 8003d56:	3402      	adds	r4, #2
 8003d58:	1d1a      	adds	r2, r3, #4
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	9203      	str	r2, [sp, #12]
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	bfb8      	it	lt
 8003d62:	f04f 33ff 	movlt.w	r3, #4294967295
 8003d66:	9305      	str	r3, [sp, #20]
 8003d68:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8003e34 <_svfiprintf_r+0x1fc>
 8003d6c:	2203      	movs	r2, #3
 8003d6e:	4650      	mov	r0, sl
 8003d70:	7821      	ldrb	r1, [r4, #0]
 8003d72:	f000 f9f7 	bl	8004164 <memchr>
 8003d76:	b140      	cbz	r0, 8003d8a <_svfiprintf_r+0x152>
 8003d78:	2340      	movs	r3, #64	; 0x40
 8003d7a:	eba0 000a 	sub.w	r0, r0, sl
 8003d7e:	fa03 f000 	lsl.w	r0, r3, r0
 8003d82:	9b04      	ldr	r3, [sp, #16]
 8003d84:	3401      	adds	r4, #1
 8003d86:	4303      	orrs	r3, r0
 8003d88:	9304      	str	r3, [sp, #16]
 8003d8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d8e:	2206      	movs	r2, #6
 8003d90:	4825      	ldr	r0, [pc, #148]	; (8003e28 <_svfiprintf_r+0x1f0>)
 8003d92:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003d96:	f000 f9e5 	bl	8004164 <memchr>
 8003d9a:	2800      	cmp	r0, #0
 8003d9c:	d038      	beq.n	8003e10 <_svfiprintf_r+0x1d8>
 8003d9e:	4b23      	ldr	r3, [pc, #140]	; (8003e2c <_svfiprintf_r+0x1f4>)
 8003da0:	bb1b      	cbnz	r3, 8003dea <_svfiprintf_r+0x1b2>
 8003da2:	9b03      	ldr	r3, [sp, #12]
 8003da4:	3307      	adds	r3, #7
 8003da6:	f023 0307 	bic.w	r3, r3, #7
 8003daa:	3308      	adds	r3, #8
 8003dac:	9303      	str	r3, [sp, #12]
 8003dae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003db0:	4433      	add	r3, r6
 8003db2:	9309      	str	r3, [sp, #36]	; 0x24
 8003db4:	e767      	b.n	8003c86 <_svfiprintf_r+0x4e>
 8003db6:	460c      	mov	r4, r1
 8003db8:	2001      	movs	r0, #1
 8003dba:	fb0c 3202 	mla	r2, ip, r2, r3
 8003dbe:	e7a5      	b.n	8003d0c <_svfiprintf_r+0xd4>
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	f04f 0c0a 	mov.w	ip, #10
 8003dc6:	4619      	mov	r1, r3
 8003dc8:	3401      	adds	r4, #1
 8003dca:	9305      	str	r3, [sp, #20]
 8003dcc:	4620      	mov	r0, r4
 8003dce:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003dd2:	3a30      	subs	r2, #48	; 0x30
 8003dd4:	2a09      	cmp	r2, #9
 8003dd6:	d903      	bls.n	8003de0 <_svfiprintf_r+0x1a8>
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	d0c5      	beq.n	8003d68 <_svfiprintf_r+0x130>
 8003ddc:	9105      	str	r1, [sp, #20]
 8003dde:	e7c3      	b.n	8003d68 <_svfiprintf_r+0x130>
 8003de0:	4604      	mov	r4, r0
 8003de2:	2301      	movs	r3, #1
 8003de4:	fb0c 2101 	mla	r1, ip, r1, r2
 8003de8:	e7f0      	b.n	8003dcc <_svfiprintf_r+0x194>
 8003dea:	ab03      	add	r3, sp, #12
 8003dec:	9300      	str	r3, [sp, #0]
 8003dee:	462a      	mov	r2, r5
 8003df0:	4638      	mov	r0, r7
 8003df2:	4b0f      	ldr	r3, [pc, #60]	; (8003e30 <_svfiprintf_r+0x1f8>)
 8003df4:	a904      	add	r1, sp, #16
 8003df6:	f3af 8000 	nop.w
 8003dfa:	1c42      	adds	r2, r0, #1
 8003dfc:	4606      	mov	r6, r0
 8003dfe:	d1d6      	bne.n	8003dae <_svfiprintf_r+0x176>
 8003e00:	89ab      	ldrh	r3, [r5, #12]
 8003e02:	065b      	lsls	r3, r3, #25
 8003e04:	f53f af2c 	bmi.w	8003c60 <_svfiprintf_r+0x28>
 8003e08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e0a:	b01d      	add	sp, #116	; 0x74
 8003e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e10:	ab03      	add	r3, sp, #12
 8003e12:	9300      	str	r3, [sp, #0]
 8003e14:	462a      	mov	r2, r5
 8003e16:	4638      	mov	r0, r7
 8003e18:	4b05      	ldr	r3, [pc, #20]	; (8003e30 <_svfiprintf_r+0x1f8>)
 8003e1a:	a904      	add	r1, sp, #16
 8003e1c:	f000 f87c 	bl	8003f18 <_printf_i>
 8003e20:	e7eb      	b.n	8003dfa <_svfiprintf_r+0x1c2>
 8003e22:	bf00      	nop
 8003e24:	0800445a 	.word	0x0800445a
 8003e28:	08004464 	.word	0x08004464
 8003e2c:	00000000 	.word	0x00000000
 8003e30:	08003b81 	.word	0x08003b81
 8003e34:	08004460 	.word	0x08004460

08003e38 <_printf_common>:
 8003e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e3c:	4616      	mov	r6, r2
 8003e3e:	4699      	mov	r9, r3
 8003e40:	688a      	ldr	r2, [r1, #8]
 8003e42:	690b      	ldr	r3, [r1, #16]
 8003e44:	4607      	mov	r7, r0
 8003e46:	4293      	cmp	r3, r2
 8003e48:	bfb8      	it	lt
 8003e4a:	4613      	movlt	r3, r2
 8003e4c:	6033      	str	r3, [r6, #0]
 8003e4e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003e52:	460c      	mov	r4, r1
 8003e54:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003e58:	b10a      	cbz	r2, 8003e5e <_printf_common+0x26>
 8003e5a:	3301      	adds	r3, #1
 8003e5c:	6033      	str	r3, [r6, #0]
 8003e5e:	6823      	ldr	r3, [r4, #0]
 8003e60:	0699      	lsls	r1, r3, #26
 8003e62:	bf42      	ittt	mi
 8003e64:	6833      	ldrmi	r3, [r6, #0]
 8003e66:	3302      	addmi	r3, #2
 8003e68:	6033      	strmi	r3, [r6, #0]
 8003e6a:	6825      	ldr	r5, [r4, #0]
 8003e6c:	f015 0506 	ands.w	r5, r5, #6
 8003e70:	d106      	bne.n	8003e80 <_printf_common+0x48>
 8003e72:	f104 0a19 	add.w	sl, r4, #25
 8003e76:	68e3      	ldr	r3, [r4, #12]
 8003e78:	6832      	ldr	r2, [r6, #0]
 8003e7a:	1a9b      	subs	r3, r3, r2
 8003e7c:	42ab      	cmp	r3, r5
 8003e7e:	dc28      	bgt.n	8003ed2 <_printf_common+0x9a>
 8003e80:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003e84:	1e13      	subs	r3, r2, #0
 8003e86:	6822      	ldr	r2, [r4, #0]
 8003e88:	bf18      	it	ne
 8003e8a:	2301      	movne	r3, #1
 8003e8c:	0692      	lsls	r2, r2, #26
 8003e8e:	d42d      	bmi.n	8003eec <_printf_common+0xb4>
 8003e90:	4649      	mov	r1, r9
 8003e92:	4638      	mov	r0, r7
 8003e94:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003e98:	47c0      	blx	r8
 8003e9a:	3001      	adds	r0, #1
 8003e9c:	d020      	beq.n	8003ee0 <_printf_common+0xa8>
 8003e9e:	6823      	ldr	r3, [r4, #0]
 8003ea0:	68e5      	ldr	r5, [r4, #12]
 8003ea2:	f003 0306 	and.w	r3, r3, #6
 8003ea6:	2b04      	cmp	r3, #4
 8003ea8:	bf18      	it	ne
 8003eaa:	2500      	movne	r5, #0
 8003eac:	6832      	ldr	r2, [r6, #0]
 8003eae:	f04f 0600 	mov.w	r6, #0
 8003eb2:	68a3      	ldr	r3, [r4, #8]
 8003eb4:	bf08      	it	eq
 8003eb6:	1aad      	subeq	r5, r5, r2
 8003eb8:	6922      	ldr	r2, [r4, #16]
 8003eba:	bf08      	it	eq
 8003ebc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	bfc4      	itt	gt
 8003ec4:	1a9b      	subgt	r3, r3, r2
 8003ec6:	18ed      	addgt	r5, r5, r3
 8003ec8:	341a      	adds	r4, #26
 8003eca:	42b5      	cmp	r5, r6
 8003ecc:	d11a      	bne.n	8003f04 <_printf_common+0xcc>
 8003ece:	2000      	movs	r0, #0
 8003ed0:	e008      	b.n	8003ee4 <_printf_common+0xac>
 8003ed2:	2301      	movs	r3, #1
 8003ed4:	4652      	mov	r2, sl
 8003ed6:	4649      	mov	r1, r9
 8003ed8:	4638      	mov	r0, r7
 8003eda:	47c0      	blx	r8
 8003edc:	3001      	adds	r0, #1
 8003ede:	d103      	bne.n	8003ee8 <_printf_common+0xb0>
 8003ee0:	f04f 30ff 	mov.w	r0, #4294967295
 8003ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ee8:	3501      	adds	r5, #1
 8003eea:	e7c4      	b.n	8003e76 <_printf_common+0x3e>
 8003eec:	2030      	movs	r0, #48	; 0x30
 8003eee:	18e1      	adds	r1, r4, r3
 8003ef0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003ef4:	1c5a      	adds	r2, r3, #1
 8003ef6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003efa:	4422      	add	r2, r4
 8003efc:	3302      	adds	r3, #2
 8003efe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003f02:	e7c5      	b.n	8003e90 <_printf_common+0x58>
 8003f04:	2301      	movs	r3, #1
 8003f06:	4622      	mov	r2, r4
 8003f08:	4649      	mov	r1, r9
 8003f0a:	4638      	mov	r0, r7
 8003f0c:	47c0      	blx	r8
 8003f0e:	3001      	adds	r0, #1
 8003f10:	d0e6      	beq.n	8003ee0 <_printf_common+0xa8>
 8003f12:	3601      	adds	r6, #1
 8003f14:	e7d9      	b.n	8003eca <_printf_common+0x92>
	...

08003f18 <_printf_i>:
 8003f18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f1c:	460c      	mov	r4, r1
 8003f1e:	7e27      	ldrb	r7, [r4, #24]
 8003f20:	4691      	mov	r9, r2
 8003f22:	2f78      	cmp	r7, #120	; 0x78
 8003f24:	4680      	mov	r8, r0
 8003f26:	469a      	mov	sl, r3
 8003f28:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003f2a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003f2e:	d807      	bhi.n	8003f40 <_printf_i+0x28>
 8003f30:	2f62      	cmp	r7, #98	; 0x62
 8003f32:	d80a      	bhi.n	8003f4a <_printf_i+0x32>
 8003f34:	2f00      	cmp	r7, #0
 8003f36:	f000 80d9 	beq.w	80040ec <_printf_i+0x1d4>
 8003f3a:	2f58      	cmp	r7, #88	; 0x58
 8003f3c:	f000 80a4 	beq.w	8004088 <_printf_i+0x170>
 8003f40:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003f44:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003f48:	e03a      	b.n	8003fc0 <_printf_i+0xa8>
 8003f4a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003f4e:	2b15      	cmp	r3, #21
 8003f50:	d8f6      	bhi.n	8003f40 <_printf_i+0x28>
 8003f52:	a001      	add	r0, pc, #4	; (adr r0, 8003f58 <_printf_i+0x40>)
 8003f54:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8003f58:	08003fb1 	.word	0x08003fb1
 8003f5c:	08003fc5 	.word	0x08003fc5
 8003f60:	08003f41 	.word	0x08003f41
 8003f64:	08003f41 	.word	0x08003f41
 8003f68:	08003f41 	.word	0x08003f41
 8003f6c:	08003f41 	.word	0x08003f41
 8003f70:	08003fc5 	.word	0x08003fc5
 8003f74:	08003f41 	.word	0x08003f41
 8003f78:	08003f41 	.word	0x08003f41
 8003f7c:	08003f41 	.word	0x08003f41
 8003f80:	08003f41 	.word	0x08003f41
 8003f84:	080040d3 	.word	0x080040d3
 8003f88:	08003ff5 	.word	0x08003ff5
 8003f8c:	080040b5 	.word	0x080040b5
 8003f90:	08003f41 	.word	0x08003f41
 8003f94:	08003f41 	.word	0x08003f41
 8003f98:	080040f5 	.word	0x080040f5
 8003f9c:	08003f41 	.word	0x08003f41
 8003fa0:	08003ff5 	.word	0x08003ff5
 8003fa4:	08003f41 	.word	0x08003f41
 8003fa8:	08003f41 	.word	0x08003f41
 8003fac:	080040bd 	.word	0x080040bd
 8003fb0:	680b      	ldr	r3, [r1, #0]
 8003fb2:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003fb6:	1d1a      	adds	r2, r3, #4
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	600a      	str	r2, [r1, #0]
 8003fbc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003fc0:	2301      	movs	r3, #1
 8003fc2:	e0a4      	b.n	800410e <_printf_i+0x1f6>
 8003fc4:	6825      	ldr	r5, [r4, #0]
 8003fc6:	6808      	ldr	r0, [r1, #0]
 8003fc8:	062e      	lsls	r6, r5, #24
 8003fca:	f100 0304 	add.w	r3, r0, #4
 8003fce:	d50a      	bpl.n	8003fe6 <_printf_i+0xce>
 8003fd0:	6805      	ldr	r5, [r0, #0]
 8003fd2:	600b      	str	r3, [r1, #0]
 8003fd4:	2d00      	cmp	r5, #0
 8003fd6:	da03      	bge.n	8003fe0 <_printf_i+0xc8>
 8003fd8:	232d      	movs	r3, #45	; 0x2d
 8003fda:	426d      	negs	r5, r5
 8003fdc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003fe0:	230a      	movs	r3, #10
 8003fe2:	485e      	ldr	r0, [pc, #376]	; (800415c <_printf_i+0x244>)
 8003fe4:	e019      	b.n	800401a <_printf_i+0x102>
 8003fe6:	f015 0f40 	tst.w	r5, #64	; 0x40
 8003fea:	6805      	ldr	r5, [r0, #0]
 8003fec:	600b      	str	r3, [r1, #0]
 8003fee:	bf18      	it	ne
 8003ff0:	b22d      	sxthne	r5, r5
 8003ff2:	e7ef      	b.n	8003fd4 <_printf_i+0xbc>
 8003ff4:	680b      	ldr	r3, [r1, #0]
 8003ff6:	6825      	ldr	r5, [r4, #0]
 8003ff8:	1d18      	adds	r0, r3, #4
 8003ffa:	6008      	str	r0, [r1, #0]
 8003ffc:	0628      	lsls	r0, r5, #24
 8003ffe:	d501      	bpl.n	8004004 <_printf_i+0xec>
 8004000:	681d      	ldr	r5, [r3, #0]
 8004002:	e002      	b.n	800400a <_printf_i+0xf2>
 8004004:	0669      	lsls	r1, r5, #25
 8004006:	d5fb      	bpl.n	8004000 <_printf_i+0xe8>
 8004008:	881d      	ldrh	r5, [r3, #0]
 800400a:	2f6f      	cmp	r7, #111	; 0x6f
 800400c:	bf0c      	ite	eq
 800400e:	2308      	moveq	r3, #8
 8004010:	230a      	movne	r3, #10
 8004012:	4852      	ldr	r0, [pc, #328]	; (800415c <_printf_i+0x244>)
 8004014:	2100      	movs	r1, #0
 8004016:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800401a:	6866      	ldr	r6, [r4, #4]
 800401c:	2e00      	cmp	r6, #0
 800401e:	bfa8      	it	ge
 8004020:	6821      	ldrge	r1, [r4, #0]
 8004022:	60a6      	str	r6, [r4, #8]
 8004024:	bfa4      	itt	ge
 8004026:	f021 0104 	bicge.w	r1, r1, #4
 800402a:	6021      	strge	r1, [r4, #0]
 800402c:	b90d      	cbnz	r5, 8004032 <_printf_i+0x11a>
 800402e:	2e00      	cmp	r6, #0
 8004030:	d04d      	beq.n	80040ce <_printf_i+0x1b6>
 8004032:	4616      	mov	r6, r2
 8004034:	fbb5 f1f3 	udiv	r1, r5, r3
 8004038:	fb03 5711 	mls	r7, r3, r1, r5
 800403c:	5dc7      	ldrb	r7, [r0, r7]
 800403e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004042:	462f      	mov	r7, r5
 8004044:	42bb      	cmp	r3, r7
 8004046:	460d      	mov	r5, r1
 8004048:	d9f4      	bls.n	8004034 <_printf_i+0x11c>
 800404a:	2b08      	cmp	r3, #8
 800404c:	d10b      	bne.n	8004066 <_printf_i+0x14e>
 800404e:	6823      	ldr	r3, [r4, #0]
 8004050:	07df      	lsls	r7, r3, #31
 8004052:	d508      	bpl.n	8004066 <_printf_i+0x14e>
 8004054:	6923      	ldr	r3, [r4, #16]
 8004056:	6861      	ldr	r1, [r4, #4]
 8004058:	4299      	cmp	r1, r3
 800405a:	bfde      	ittt	le
 800405c:	2330      	movle	r3, #48	; 0x30
 800405e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004062:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004066:	1b92      	subs	r2, r2, r6
 8004068:	6122      	str	r2, [r4, #16]
 800406a:	464b      	mov	r3, r9
 800406c:	4621      	mov	r1, r4
 800406e:	4640      	mov	r0, r8
 8004070:	f8cd a000 	str.w	sl, [sp]
 8004074:	aa03      	add	r2, sp, #12
 8004076:	f7ff fedf 	bl	8003e38 <_printf_common>
 800407a:	3001      	adds	r0, #1
 800407c:	d14c      	bne.n	8004118 <_printf_i+0x200>
 800407e:	f04f 30ff 	mov.w	r0, #4294967295
 8004082:	b004      	add	sp, #16
 8004084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004088:	4834      	ldr	r0, [pc, #208]	; (800415c <_printf_i+0x244>)
 800408a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800408e:	680e      	ldr	r6, [r1, #0]
 8004090:	6823      	ldr	r3, [r4, #0]
 8004092:	f856 5b04 	ldr.w	r5, [r6], #4
 8004096:	061f      	lsls	r7, r3, #24
 8004098:	600e      	str	r6, [r1, #0]
 800409a:	d514      	bpl.n	80040c6 <_printf_i+0x1ae>
 800409c:	07d9      	lsls	r1, r3, #31
 800409e:	bf44      	itt	mi
 80040a0:	f043 0320 	orrmi.w	r3, r3, #32
 80040a4:	6023      	strmi	r3, [r4, #0]
 80040a6:	b91d      	cbnz	r5, 80040b0 <_printf_i+0x198>
 80040a8:	6823      	ldr	r3, [r4, #0]
 80040aa:	f023 0320 	bic.w	r3, r3, #32
 80040ae:	6023      	str	r3, [r4, #0]
 80040b0:	2310      	movs	r3, #16
 80040b2:	e7af      	b.n	8004014 <_printf_i+0xfc>
 80040b4:	6823      	ldr	r3, [r4, #0]
 80040b6:	f043 0320 	orr.w	r3, r3, #32
 80040ba:	6023      	str	r3, [r4, #0]
 80040bc:	2378      	movs	r3, #120	; 0x78
 80040be:	4828      	ldr	r0, [pc, #160]	; (8004160 <_printf_i+0x248>)
 80040c0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80040c4:	e7e3      	b.n	800408e <_printf_i+0x176>
 80040c6:	065e      	lsls	r6, r3, #25
 80040c8:	bf48      	it	mi
 80040ca:	b2ad      	uxthmi	r5, r5
 80040cc:	e7e6      	b.n	800409c <_printf_i+0x184>
 80040ce:	4616      	mov	r6, r2
 80040d0:	e7bb      	b.n	800404a <_printf_i+0x132>
 80040d2:	680b      	ldr	r3, [r1, #0]
 80040d4:	6826      	ldr	r6, [r4, #0]
 80040d6:	1d1d      	adds	r5, r3, #4
 80040d8:	6960      	ldr	r0, [r4, #20]
 80040da:	600d      	str	r5, [r1, #0]
 80040dc:	0635      	lsls	r5, r6, #24
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	d501      	bpl.n	80040e6 <_printf_i+0x1ce>
 80040e2:	6018      	str	r0, [r3, #0]
 80040e4:	e002      	b.n	80040ec <_printf_i+0x1d4>
 80040e6:	0671      	lsls	r1, r6, #25
 80040e8:	d5fb      	bpl.n	80040e2 <_printf_i+0x1ca>
 80040ea:	8018      	strh	r0, [r3, #0]
 80040ec:	2300      	movs	r3, #0
 80040ee:	4616      	mov	r6, r2
 80040f0:	6123      	str	r3, [r4, #16]
 80040f2:	e7ba      	b.n	800406a <_printf_i+0x152>
 80040f4:	680b      	ldr	r3, [r1, #0]
 80040f6:	1d1a      	adds	r2, r3, #4
 80040f8:	600a      	str	r2, [r1, #0]
 80040fa:	681e      	ldr	r6, [r3, #0]
 80040fc:	2100      	movs	r1, #0
 80040fe:	4630      	mov	r0, r6
 8004100:	6862      	ldr	r2, [r4, #4]
 8004102:	f000 f82f 	bl	8004164 <memchr>
 8004106:	b108      	cbz	r0, 800410c <_printf_i+0x1f4>
 8004108:	1b80      	subs	r0, r0, r6
 800410a:	6060      	str	r0, [r4, #4]
 800410c:	6863      	ldr	r3, [r4, #4]
 800410e:	6123      	str	r3, [r4, #16]
 8004110:	2300      	movs	r3, #0
 8004112:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004116:	e7a8      	b.n	800406a <_printf_i+0x152>
 8004118:	4632      	mov	r2, r6
 800411a:	4649      	mov	r1, r9
 800411c:	4640      	mov	r0, r8
 800411e:	6923      	ldr	r3, [r4, #16]
 8004120:	47d0      	blx	sl
 8004122:	3001      	adds	r0, #1
 8004124:	d0ab      	beq.n	800407e <_printf_i+0x166>
 8004126:	6823      	ldr	r3, [r4, #0]
 8004128:	079b      	lsls	r3, r3, #30
 800412a:	d413      	bmi.n	8004154 <_printf_i+0x23c>
 800412c:	68e0      	ldr	r0, [r4, #12]
 800412e:	9b03      	ldr	r3, [sp, #12]
 8004130:	4298      	cmp	r0, r3
 8004132:	bfb8      	it	lt
 8004134:	4618      	movlt	r0, r3
 8004136:	e7a4      	b.n	8004082 <_printf_i+0x16a>
 8004138:	2301      	movs	r3, #1
 800413a:	4632      	mov	r2, r6
 800413c:	4649      	mov	r1, r9
 800413e:	4640      	mov	r0, r8
 8004140:	47d0      	blx	sl
 8004142:	3001      	adds	r0, #1
 8004144:	d09b      	beq.n	800407e <_printf_i+0x166>
 8004146:	3501      	adds	r5, #1
 8004148:	68e3      	ldr	r3, [r4, #12]
 800414a:	9903      	ldr	r1, [sp, #12]
 800414c:	1a5b      	subs	r3, r3, r1
 800414e:	42ab      	cmp	r3, r5
 8004150:	dcf2      	bgt.n	8004138 <_printf_i+0x220>
 8004152:	e7eb      	b.n	800412c <_printf_i+0x214>
 8004154:	2500      	movs	r5, #0
 8004156:	f104 0619 	add.w	r6, r4, #25
 800415a:	e7f5      	b.n	8004148 <_printf_i+0x230>
 800415c:	0800446b 	.word	0x0800446b
 8004160:	0800447c 	.word	0x0800447c

08004164 <memchr>:
 8004164:	4603      	mov	r3, r0
 8004166:	b510      	push	{r4, lr}
 8004168:	b2c9      	uxtb	r1, r1
 800416a:	4402      	add	r2, r0
 800416c:	4293      	cmp	r3, r2
 800416e:	4618      	mov	r0, r3
 8004170:	d101      	bne.n	8004176 <memchr+0x12>
 8004172:	2000      	movs	r0, #0
 8004174:	e003      	b.n	800417e <memchr+0x1a>
 8004176:	7804      	ldrb	r4, [r0, #0]
 8004178:	3301      	adds	r3, #1
 800417a:	428c      	cmp	r4, r1
 800417c:	d1f6      	bne.n	800416c <memchr+0x8>
 800417e:	bd10      	pop	{r4, pc}

08004180 <memcpy>:
 8004180:	440a      	add	r2, r1
 8004182:	4291      	cmp	r1, r2
 8004184:	f100 33ff 	add.w	r3, r0, #4294967295
 8004188:	d100      	bne.n	800418c <memcpy+0xc>
 800418a:	4770      	bx	lr
 800418c:	b510      	push	{r4, lr}
 800418e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004192:	4291      	cmp	r1, r2
 8004194:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004198:	d1f9      	bne.n	800418e <memcpy+0xe>
 800419a:	bd10      	pop	{r4, pc}

0800419c <memmove>:
 800419c:	4288      	cmp	r0, r1
 800419e:	b510      	push	{r4, lr}
 80041a0:	eb01 0402 	add.w	r4, r1, r2
 80041a4:	d902      	bls.n	80041ac <memmove+0x10>
 80041a6:	4284      	cmp	r4, r0
 80041a8:	4623      	mov	r3, r4
 80041aa:	d807      	bhi.n	80041bc <memmove+0x20>
 80041ac:	1e43      	subs	r3, r0, #1
 80041ae:	42a1      	cmp	r1, r4
 80041b0:	d008      	beq.n	80041c4 <memmove+0x28>
 80041b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80041b6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80041ba:	e7f8      	b.n	80041ae <memmove+0x12>
 80041bc:	4601      	mov	r1, r0
 80041be:	4402      	add	r2, r0
 80041c0:	428a      	cmp	r2, r1
 80041c2:	d100      	bne.n	80041c6 <memmove+0x2a>
 80041c4:	bd10      	pop	{r4, pc}
 80041c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80041ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80041ce:	e7f7      	b.n	80041c0 <memmove+0x24>

080041d0 <_free_r>:
 80041d0:	b538      	push	{r3, r4, r5, lr}
 80041d2:	4605      	mov	r5, r0
 80041d4:	2900      	cmp	r1, #0
 80041d6:	d043      	beq.n	8004260 <_free_r+0x90>
 80041d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80041dc:	1f0c      	subs	r4, r1, #4
 80041de:	2b00      	cmp	r3, #0
 80041e0:	bfb8      	it	lt
 80041e2:	18e4      	addlt	r4, r4, r3
 80041e4:	f000 f8d0 	bl	8004388 <__malloc_lock>
 80041e8:	4a1e      	ldr	r2, [pc, #120]	; (8004264 <_free_r+0x94>)
 80041ea:	6813      	ldr	r3, [r2, #0]
 80041ec:	4610      	mov	r0, r2
 80041ee:	b933      	cbnz	r3, 80041fe <_free_r+0x2e>
 80041f0:	6063      	str	r3, [r4, #4]
 80041f2:	6014      	str	r4, [r2, #0]
 80041f4:	4628      	mov	r0, r5
 80041f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80041fa:	f000 b8cb 	b.w	8004394 <__malloc_unlock>
 80041fe:	42a3      	cmp	r3, r4
 8004200:	d90a      	bls.n	8004218 <_free_r+0x48>
 8004202:	6821      	ldr	r1, [r4, #0]
 8004204:	1862      	adds	r2, r4, r1
 8004206:	4293      	cmp	r3, r2
 8004208:	bf01      	itttt	eq
 800420a:	681a      	ldreq	r2, [r3, #0]
 800420c:	685b      	ldreq	r3, [r3, #4]
 800420e:	1852      	addeq	r2, r2, r1
 8004210:	6022      	streq	r2, [r4, #0]
 8004212:	6063      	str	r3, [r4, #4]
 8004214:	6004      	str	r4, [r0, #0]
 8004216:	e7ed      	b.n	80041f4 <_free_r+0x24>
 8004218:	461a      	mov	r2, r3
 800421a:	685b      	ldr	r3, [r3, #4]
 800421c:	b10b      	cbz	r3, 8004222 <_free_r+0x52>
 800421e:	42a3      	cmp	r3, r4
 8004220:	d9fa      	bls.n	8004218 <_free_r+0x48>
 8004222:	6811      	ldr	r1, [r2, #0]
 8004224:	1850      	adds	r0, r2, r1
 8004226:	42a0      	cmp	r0, r4
 8004228:	d10b      	bne.n	8004242 <_free_r+0x72>
 800422a:	6820      	ldr	r0, [r4, #0]
 800422c:	4401      	add	r1, r0
 800422e:	1850      	adds	r0, r2, r1
 8004230:	4283      	cmp	r3, r0
 8004232:	6011      	str	r1, [r2, #0]
 8004234:	d1de      	bne.n	80041f4 <_free_r+0x24>
 8004236:	6818      	ldr	r0, [r3, #0]
 8004238:	685b      	ldr	r3, [r3, #4]
 800423a:	4401      	add	r1, r0
 800423c:	6011      	str	r1, [r2, #0]
 800423e:	6053      	str	r3, [r2, #4]
 8004240:	e7d8      	b.n	80041f4 <_free_r+0x24>
 8004242:	d902      	bls.n	800424a <_free_r+0x7a>
 8004244:	230c      	movs	r3, #12
 8004246:	602b      	str	r3, [r5, #0]
 8004248:	e7d4      	b.n	80041f4 <_free_r+0x24>
 800424a:	6820      	ldr	r0, [r4, #0]
 800424c:	1821      	adds	r1, r4, r0
 800424e:	428b      	cmp	r3, r1
 8004250:	bf01      	itttt	eq
 8004252:	6819      	ldreq	r1, [r3, #0]
 8004254:	685b      	ldreq	r3, [r3, #4]
 8004256:	1809      	addeq	r1, r1, r0
 8004258:	6021      	streq	r1, [r4, #0]
 800425a:	6063      	str	r3, [r4, #4]
 800425c:	6054      	str	r4, [r2, #4]
 800425e:	e7c9      	b.n	80041f4 <_free_r+0x24>
 8004260:	bd38      	pop	{r3, r4, r5, pc}
 8004262:	bf00      	nop
 8004264:	200000f4 	.word	0x200000f4

08004268 <_malloc_r>:
 8004268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800426a:	1ccd      	adds	r5, r1, #3
 800426c:	f025 0503 	bic.w	r5, r5, #3
 8004270:	3508      	adds	r5, #8
 8004272:	2d0c      	cmp	r5, #12
 8004274:	bf38      	it	cc
 8004276:	250c      	movcc	r5, #12
 8004278:	2d00      	cmp	r5, #0
 800427a:	4606      	mov	r6, r0
 800427c:	db01      	blt.n	8004282 <_malloc_r+0x1a>
 800427e:	42a9      	cmp	r1, r5
 8004280:	d903      	bls.n	800428a <_malloc_r+0x22>
 8004282:	230c      	movs	r3, #12
 8004284:	6033      	str	r3, [r6, #0]
 8004286:	2000      	movs	r0, #0
 8004288:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800428a:	f000 f87d 	bl	8004388 <__malloc_lock>
 800428e:	4921      	ldr	r1, [pc, #132]	; (8004314 <_malloc_r+0xac>)
 8004290:	680a      	ldr	r2, [r1, #0]
 8004292:	4614      	mov	r4, r2
 8004294:	b99c      	cbnz	r4, 80042be <_malloc_r+0x56>
 8004296:	4f20      	ldr	r7, [pc, #128]	; (8004318 <_malloc_r+0xb0>)
 8004298:	683b      	ldr	r3, [r7, #0]
 800429a:	b923      	cbnz	r3, 80042a6 <_malloc_r+0x3e>
 800429c:	4621      	mov	r1, r4
 800429e:	4630      	mov	r0, r6
 80042a0:	f000 f862 	bl	8004368 <_sbrk_r>
 80042a4:	6038      	str	r0, [r7, #0]
 80042a6:	4629      	mov	r1, r5
 80042a8:	4630      	mov	r0, r6
 80042aa:	f000 f85d 	bl	8004368 <_sbrk_r>
 80042ae:	1c43      	adds	r3, r0, #1
 80042b0:	d123      	bne.n	80042fa <_malloc_r+0x92>
 80042b2:	230c      	movs	r3, #12
 80042b4:	4630      	mov	r0, r6
 80042b6:	6033      	str	r3, [r6, #0]
 80042b8:	f000 f86c 	bl	8004394 <__malloc_unlock>
 80042bc:	e7e3      	b.n	8004286 <_malloc_r+0x1e>
 80042be:	6823      	ldr	r3, [r4, #0]
 80042c0:	1b5b      	subs	r3, r3, r5
 80042c2:	d417      	bmi.n	80042f4 <_malloc_r+0x8c>
 80042c4:	2b0b      	cmp	r3, #11
 80042c6:	d903      	bls.n	80042d0 <_malloc_r+0x68>
 80042c8:	6023      	str	r3, [r4, #0]
 80042ca:	441c      	add	r4, r3
 80042cc:	6025      	str	r5, [r4, #0]
 80042ce:	e004      	b.n	80042da <_malloc_r+0x72>
 80042d0:	6863      	ldr	r3, [r4, #4]
 80042d2:	42a2      	cmp	r2, r4
 80042d4:	bf0c      	ite	eq
 80042d6:	600b      	streq	r3, [r1, #0]
 80042d8:	6053      	strne	r3, [r2, #4]
 80042da:	4630      	mov	r0, r6
 80042dc:	f000 f85a 	bl	8004394 <__malloc_unlock>
 80042e0:	f104 000b 	add.w	r0, r4, #11
 80042e4:	1d23      	adds	r3, r4, #4
 80042e6:	f020 0007 	bic.w	r0, r0, #7
 80042ea:	1ac2      	subs	r2, r0, r3
 80042ec:	d0cc      	beq.n	8004288 <_malloc_r+0x20>
 80042ee:	1a1b      	subs	r3, r3, r0
 80042f0:	50a3      	str	r3, [r4, r2]
 80042f2:	e7c9      	b.n	8004288 <_malloc_r+0x20>
 80042f4:	4622      	mov	r2, r4
 80042f6:	6864      	ldr	r4, [r4, #4]
 80042f8:	e7cc      	b.n	8004294 <_malloc_r+0x2c>
 80042fa:	1cc4      	adds	r4, r0, #3
 80042fc:	f024 0403 	bic.w	r4, r4, #3
 8004300:	42a0      	cmp	r0, r4
 8004302:	d0e3      	beq.n	80042cc <_malloc_r+0x64>
 8004304:	1a21      	subs	r1, r4, r0
 8004306:	4630      	mov	r0, r6
 8004308:	f000 f82e 	bl	8004368 <_sbrk_r>
 800430c:	3001      	adds	r0, #1
 800430e:	d1dd      	bne.n	80042cc <_malloc_r+0x64>
 8004310:	e7cf      	b.n	80042b2 <_malloc_r+0x4a>
 8004312:	bf00      	nop
 8004314:	200000f4 	.word	0x200000f4
 8004318:	200000f8 	.word	0x200000f8

0800431c <_realloc_r>:
 800431c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800431e:	4607      	mov	r7, r0
 8004320:	4614      	mov	r4, r2
 8004322:	460e      	mov	r6, r1
 8004324:	b921      	cbnz	r1, 8004330 <_realloc_r+0x14>
 8004326:	4611      	mov	r1, r2
 8004328:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800432c:	f7ff bf9c 	b.w	8004268 <_malloc_r>
 8004330:	b922      	cbnz	r2, 800433c <_realloc_r+0x20>
 8004332:	f7ff ff4d 	bl	80041d0 <_free_r>
 8004336:	4625      	mov	r5, r4
 8004338:	4628      	mov	r0, r5
 800433a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800433c:	f000 f830 	bl	80043a0 <_malloc_usable_size_r>
 8004340:	42a0      	cmp	r0, r4
 8004342:	d20f      	bcs.n	8004364 <_realloc_r+0x48>
 8004344:	4621      	mov	r1, r4
 8004346:	4638      	mov	r0, r7
 8004348:	f7ff ff8e 	bl	8004268 <_malloc_r>
 800434c:	4605      	mov	r5, r0
 800434e:	2800      	cmp	r0, #0
 8004350:	d0f2      	beq.n	8004338 <_realloc_r+0x1c>
 8004352:	4631      	mov	r1, r6
 8004354:	4622      	mov	r2, r4
 8004356:	f7ff ff13 	bl	8004180 <memcpy>
 800435a:	4631      	mov	r1, r6
 800435c:	4638      	mov	r0, r7
 800435e:	f7ff ff37 	bl	80041d0 <_free_r>
 8004362:	e7e9      	b.n	8004338 <_realloc_r+0x1c>
 8004364:	4635      	mov	r5, r6
 8004366:	e7e7      	b.n	8004338 <_realloc_r+0x1c>

08004368 <_sbrk_r>:
 8004368:	b538      	push	{r3, r4, r5, lr}
 800436a:	2300      	movs	r3, #0
 800436c:	4d05      	ldr	r5, [pc, #20]	; (8004384 <_sbrk_r+0x1c>)
 800436e:	4604      	mov	r4, r0
 8004370:	4608      	mov	r0, r1
 8004372:	602b      	str	r3, [r5, #0]
 8004374:	f7fd fa6c 	bl	8001850 <_sbrk>
 8004378:	1c43      	adds	r3, r0, #1
 800437a:	d102      	bne.n	8004382 <_sbrk_r+0x1a>
 800437c:	682b      	ldr	r3, [r5, #0]
 800437e:	b103      	cbz	r3, 8004382 <_sbrk_r+0x1a>
 8004380:	6023      	str	r3, [r4, #0]
 8004382:	bd38      	pop	{r3, r4, r5, pc}
 8004384:	20000234 	.word	0x20000234

08004388 <__malloc_lock>:
 8004388:	4801      	ldr	r0, [pc, #4]	; (8004390 <__malloc_lock+0x8>)
 800438a:	f000 b811 	b.w	80043b0 <__retarget_lock_acquire_recursive>
 800438e:	bf00      	nop
 8004390:	2000023c 	.word	0x2000023c

08004394 <__malloc_unlock>:
 8004394:	4801      	ldr	r0, [pc, #4]	; (800439c <__malloc_unlock+0x8>)
 8004396:	f000 b80c 	b.w	80043b2 <__retarget_lock_release_recursive>
 800439a:	bf00      	nop
 800439c:	2000023c 	.word	0x2000023c

080043a0 <_malloc_usable_size_r>:
 80043a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80043a4:	1f18      	subs	r0, r3, #4
 80043a6:	2b00      	cmp	r3, #0
 80043a8:	bfbc      	itt	lt
 80043aa:	580b      	ldrlt	r3, [r1, r0]
 80043ac:	18c0      	addlt	r0, r0, r3
 80043ae:	4770      	bx	lr

080043b0 <__retarget_lock_acquire_recursive>:
 80043b0:	4770      	bx	lr

080043b2 <__retarget_lock_release_recursive>:
 80043b2:	4770      	bx	lr

080043b4 <_init>:
 80043b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043b6:	bf00      	nop
 80043b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043ba:	bc08      	pop	{r3}
 80043bc:	469e      	mov	lr, r3
 80043be:	4770      	bx	lr

080043c0 <_fini>:
 80043c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043c2:	bf00      	nop
 80043c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043c6:	bc08      	pop	{r3}
 80043c8:	469e      	mov	lr, r3
 80043ca:	4770      	bx	lr
